<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Sylius_Bundle_CoreBundle_Command_Admin_Account_RequestResetPasswordEmail' => 0,
'Sylius_Bundle_CoreBundle_Command_Admin_Account_ResetPassword' => 1,
'Sylius_Component_Core_Model_Address' => 2,
'Sylius_Component_Addressing_Model_AddressLogEntry' => 3,
'Sylius_Component_Order_Model_Adjustment' => 4,
'Sylius_Component_Core_Model_AdminUser' => 5,
'Sylius_Component_Core_Model_AvatarImage' => 6,
'Sylius_Component_Promotion_Model_CatalogPromotion' => 7,
'Sylius_Component_Promotion_Model_CatalogPromotionAction' => 8,
'Sylius_Component_Promotion_Model_CatalogPromotionScope' => 9,
'Sylius_Component_Promotion_Model_CatalogPromotionTranslation' => 10,
'Sylius_Component_Core_Model_Channel' => 11,
'Sylius_Component_Core_Model_ChannelPriceHistoryConfig' => 12,
'Sylius_Component_Core_Model_ChannelPricing' => 13,
'Sylius_Component_Core_Model_ChannelPricingLogEntry' => 14,
'Sylius_Bundle_ApiBundle_Command_Account_ChangeShopUserPassword' => 15,
'Sylius_Bundle_ApiBundle_Command_Account_ChangePaymentMethod' => 16,
'Sylius_Bundle_ApiBundle_Command_Account_RegisterShopUser' => 17,
'Sylius_Bundle_ApiBundle_Command_Account_RequestResetPasswordToken' => 18,
'Sylius_Bundle_ApiBundle_Command_Account_ResetPassword' => 19,
'Sylius_Bundle_ApiBundle_Command_Catalog_AddProductReview' => 20,
'Sylius_Bundle_ApiBundle_Command_Cart_AddItemToCart' => 21,
'Sylius_Bundle_ApiBundle_Command_Cart_ChangeItemQuantityInCart' => 22,
'Sylius_Bundle_ApiBundle_Command_Checkout_ChoosePaymentMethod' => 23,
'Sylius_Bundle_ApiBundle_Command_Checkout_ChooseShippingMethod' => 24,
'Sylius_Bundle_ApiBundle_Command_Checkout_CompleteOrder' => 25,
'Sylius_Bundle_ApiBundle_Command_Checkout_ShipShipment' => 26,
'Sylius_Bundle_ApiBundle_Command_Checkout_UpdateCart' => 27,
'Sylius_Bundle_ApiBundle_Command_Payment_AddPaymentRequest' => 28,
'Sylius_Bundle_ApiBundle_Command_Payment_UpdatePaymentRequest' => 29,
'Sylius_Bundle_ApiBundle_Command_Promotion_GeneratePromotionCoupon' => 30,
'Sylius_Bundle_ApiBundle_Command_SendContactRequest' => 31,
'Sylius_Component_Addressing_Model_Country' => 32,
'Sylius_Component_Currency_Model_Currency' => 33,
'Sylius_Component_Core_Model_Customer' => 34,
'Sylius_Component_Customer_Model_CustomerGroup' => 35,
'Sylius_Component_Core_Customer_Statistics_CustomerStatistics' => 36,
'Sylius_Component_Currency_Model_ExchangeRate' => 37,
'Sylius_Component_Payment_Model_GatewayConfig' => 38,
'Sylius_Component_Locale_Model_Locale' => 39,
'Sylius_Component_Core_Model_Order' => 40,
'Sylius_Component_Core_Model_OrderItem' => 41,
'Sylius_Component_Core_Model_OrderItemUnit' => 42,
'Sylius_Component_Core_Model_Payment' => 43,
'Sylius_Component_Core_Model_PaymentMethod' => 44,
'Sylius_Component_Payment_Model_PaymentMethodTranslation' => 45,
'Sylius_Component_Payment_Model_PaymentRequest' => 46,
'Sylius_Component_Core_Customer_Statistics_PerChannelCustomerStatistics' => 47,
'Sylius_Component_Core_Model_Product' => 48,
'Sylius_Component_Product_Model_ProductAssociation' => 49,
'Sylius_Component_Product_Model_ProductAssociationType' => 50,
'Sylius_Component_Product_Model_ProductAssociationTypeTranslation' => 51,
'Sylius_Component_Product_Model_ProductAttribute' => 52,
'Sylius_Component_Product_Model_ProductAttributeTranslation' => 53,
'Sylius_Component_Product_Model_ProductAttributeValue' => 54,
'Sylius_Component_Core_Model_ProductImage' => 55,
'Sylius_Component_Product_Model_ProductOption' => 56,
'Sylius_Component_Product_Model_ProductOptionTranslation' => 57,
'Sylius_Component_Product_Model_ProductOptionValue' => 58,
'Sylius_Component_Product_Model_ProductOptionValueTranslation' => 59,
'Sylius_Component_Core_Model_ProductReview' => 60,
'Sylius_Component_Core_Model_ProductTaxon' => 61,
'Sylius_Component_Product_Model_ProductTranslation' => 62,
'Sylius_Component_Core_Model_ProductVariant' => 63,
'Sylius_Component_Product_Model_ProductVariantTranslation' => 64,
'Sylius_Component_Core_Model_Promotion' => 65,
'Sylius_Component_Promotion_Model_PromotionAction' => 66,
'Sylius_Component_Core_Model_PromotionCoupon' => 67,
'Sylius_Component_Promotion_Model_PromotionRule' => 68,
'Sylius_Component_Promotion_Model_PromotionTranslation' => 69,
'Sylius_Component_Addressing_Model_Province' => 70,
'Sylius_Component_Core_Model_Shipment' => 71,
'Sylius_Component_Shipping_Model_ShippingCategory' => 72,
'Sylius_Component_Core_Model_ShippingMethod' => 73,
'Sylius_Component_Shipping_Model_ShippingMethodRule' => 74,
'Sylius_Component_Shipping_Model_ShippingMethodTranslation' => 75,
'Sylius_Component_Core_Model_ShopBillingData' => 76,
'Sylius_Component_Core_Model_ShopUser' => 77,
'Sylius_Component_Taxation_Model_TaxCategory' => 78,
'Sylius_Component_Taxation_Model_TaxRate' => 79,
'Sylius_Component_Core_Model_Taxon' => 80,
'Sylius_Component_Core_Model_TaxonImage' => 81,
'Sylius_Component_Taxonomy_Model_TaxonTranslation' => 82,
'Sylius_Component_Addressing_Model_Zone' => 83,
'Sylius_Component_Addressing_Model_ZoneMember' => 84,

], [

0 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\RequestResetPasswordEmail',
                'email',
            ],
            'attributesMetadata' => [
                [
                    'email' => $o[1],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:reset_password:create',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
1 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\ResetPassword',
                'token',
                'newPassword',
                'confirmNewPassword',
            ],
            'attributesMetadata' => [
                [
                    'token' => $o[1],
                    'newPassword' => $o[2],
                    'confirmNewPassword' => $o[3],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:reset_password:update',
                ],
                [
                    'sylius:admin:reset_password:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
2 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Address',
                'customer',
                'id',
                'firstName',
                'lastName',
                'phoneNumber',
                'company',
                'countryCode',
                'provinceCode',
                'provinceName',
                'street',
                'city',
                'postcode',
                'createdAt',
                'updatedAt',
                'fullName',
            ],
            'attributesMetadata' => [
                [
                    'customer' => $o[1],
                    'id' => $o[2],
                    'firstName' => $o[3],
                    'lastName' => $o[4],
                    'phoneNumber' => $o[5],
                    'company' => $o[6],
                    'countryCode' => $o[7],
                    'provinceCode' => $o[8],
                    'provinceName' => $o[9],
                    'street' => $o[10],
                    'city' => $o[11],
                    'postcode' => $o[12],
                    'createdAt' => $o[13],
                    'updatedAt' => $o[14],
                    'fullName' => $o[15],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:address:index',
                    'sylius:admin:address:show',
                    'sylius:admin:address:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:address:create',
                    'sylius:shop:address:index',
                    'sylius:shop:address:show',
                    'sylius:shop:address:update',
                    'sylius:shop:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
3 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\AddressLogEntry',
                'id',
                'action',
                'loggedAt',
                'objectId',
                'objectClass',
                'version',
                'data',
                'username',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'action' => $o[2],
                    'loggedAt' => $o[3],
                    'objectId' => $o[4],
                    'objectClass' => $o[5],
                    'version' => $o[6],
                    'data' => $o[7],
                    'username' => $o[8],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:address:log_entry:show',
                ],
                [
                    'sylius:admin:address:log_entry:show',
                ],
                6 => [
                    'sylius:admin:address:log_entry:show',
                ],
                [
                    'sylius:admin:address:log_entry:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
4 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\Adjustment',
                'id',
                'order',
                'orderItem',
                'orderItemUnit',
                'type',
                'label',
                'amount',
                'neutral',
                'locked',
                'originCode',
                'details',
                'createdAt',
                'updatedAt',
                'adjustable',
                'charge',
                'credit',
                'shipment',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'order' => $o[2],
                    'orderItem' => $o[3],
                    'orderItemUnit' => $o[4],
                    'type' => $o[5],
                    'label' => $o[6],
                    'amount' => $o[7],
                    'neutral' => $o[8],
                    'locked' => $o[9],
                    'originCode' => $o[10],
                    'details' => $o[11],
                    'createdAt' => $o[12],
                    'updatedAt' => $o[13],
                    'adjustable' => $o[14],
                    'charge' => $o[15],
                    'credit' => $o[16],
                    'shipment' => $o[17],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:admin:order_item:index',
                    'sylius:admin:order_item_unit:index',
                    'sylius:admin:shipment:index',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:admin:order_item:index',
                    'sylius:admin:order_item_unit:index',
                    'sylius:admin:shipment:index',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:shop:cart:show',
                    'sylius:admin:order_item:index',
                    'sylius:admin:order_item_unit:index',
                    'sylius:admin:shipment:index',
                ],
                [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                    'sylius:admin:order_item:index',
                    'sylius:admin:order_item_unit:index',
                    'sylius:admin:shipment:index',
                ],
                17 => [
                    'sylius:admin:adjustment:index',
                    'sylius:admin:adjustment:show',
                    'sylius:shop:adjustment:index',
                    'sylius:shop:adjustment:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
5 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\AdminUser',
                'firstName',
                'lastName',
                'localeCode',
                'avatar',
                'id',
                'username',
                'usernameCanonical',
                'password',
                'plainPassword',
                'lastLogin',
                'emailVerificationToken',
                'passwordResetToken',
                'passwordRequestedAt',
                'verifiedAt',
                'roles',
                'oauthAccounts',
                'email',
                'emailCanonical',
                'createdAt',
                'updatedAt',
                'enabled',
                'image',
                'equalTo',
                'userIdentifier',
                'role',
                'passwordRequestNonExpired',
                'verified',
                'oAuthAccounts',
            ],
            'attributesMetadata' => [
                [
                    'firstName' => $o[1],
                    'lastName' => $o[2],
                    'localeCode' => $o[3],
                    'avatar' => $o[4],
                    'id' => $o[5],
                    'username' => $o[6],
                    'usernameCanonical' => $o[7],
                    'password' => $o[8],
                    'plainPassword' => $o[9],
                    'lastLogin' => $o[10],
                    'emailVerificationToken' => $o[11],
                    'passwordResetToken' => $o[12],
                    'passwordRequestedAt' => $o[13],
                    'verifiedAt' => $o[14],
                    'roles' => $o[15],
                    'oauthAccounts' => $o[16],
                    'email' => $o[17],
                    'emailCanonical' => $o[18],
                    'createdAt' => $o[19],
                    'updatedAt' => $o[20],
                    'enabled' => $o[21],
                    'image' => $o[22],
                    'equalTo' => $o[23],
                    'userIdentifier' => $o[24],
                    'role' => $o[25],
                    'passwordRequestNonExpired' => $o[26],
                    'verified' => $o[27],
                    'oAuthAccounts' => $o[28],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                9 => [
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                14 => [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                17 => [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
                19 => [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                ],
                [
                    'sylius:admin:admin_user:index',
                    'sylius:admin:admin_user:show',
                    'sylius:admin:admin_user:create',
                    'sylius:admin:admin_user:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
6 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\AvatarImage',
                'id',
                'type',
                'file',
                'path',
                'owner',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'file' => $o[3],
                    'path' => $o[4],
                    'owner' => $o[5],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:avatar_image:show',
                ],
                4 => [
                    'sylius:admin:avatar_image:show',
                ],
                [
                    'sylius:admin:avatar_image:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
7 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                'id',
                'name',
                'code',
                'startDate',
                'endDate',
                'priority',
                'exclusive',
                'state',
                'scopes',
                'actions',
                'enabled',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'label',
                'description',
                'translation',
                'scope',
                'action',
                'channels',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'code' => $o[3],
                    'startDate' => $o[4],
                    'endDate' => $o[5],
                    'priority' => $o[6],
                    'exclusive' => $o[7],
                    'state' => $o[8],
                    'scopes' => $o[9],
                    'actions' => $o[10],
                    'enabled' => $o[11],
                    'translations' => $o[12],
                    'translationsCache' => $o[13],
                    'currentLocale' => $o[14],
                    'currentTranslation' => $o[15],
                    'fallbackLocale' => $o[16],
                    'label' => $o[17],
                    'description' => $o[18],
                    'translation' => $o[19],
                    'scope' => $o[20],
                    'action' => $o[21],
                    'channels' => $o[22],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:shop:catalog_promotion:show',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                17 => [
                    'sylius:shop:catalog_promotion:show',
                ],
                22 => [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
8 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionAction',
                'id',
                'type',
                'configuration',
                'catalogPromotion',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'configuration' => $o[3],
                    'catalogPromotion' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
9 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionScope',
                'id',
                'type',
                'configuration',
                'catalogPromotion',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'configuration' => $o[3],
                    'catalogPromotion' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
10 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionTranslation',
                'id',
                'label',
                'description',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'label' => $o[2],
                    'description' => $o[3],
                    'locale' => $o[4],
                    'translatable' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:index',
                    'sylius:admin:catalog_promotion:show',
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
                [
                    'sylius:admin:catalog_promotion:create',
                    'sylius:admin:catalog_promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
11 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Channel',
                'baseCurrency',
                'defaultLocale',
                'defaultTaxZone',
                'taxCalculationStrategy',
                'currencies',
                'locales',
                'countries',
                'themeName',
                'contactEmail',
                'contactPhoneNumber',
                'skippingShippingStepAllowed',
                'skippingPaymentStepAllowed',
                'accountVerificationRequired',
                'shippingAddressInCheckoutRequired',
                'shopBillingData',
                'menuTaxon',
                'channelPriceHistoryConfig',
                'id',
                'code',
                'name',
                'description',
                'hostname',
                'color',
                'createdAt',
                'updatedAt',
                'enabled',
                'currency',
                'locale',
                'country',
                'enabledCountries',
            ],
            'attributesMetadata' => [
                [
                    'baseCurrency' => $o[1],
                    'defaultLocale' => $o[2],
                    'defaultTaxZone' => $o[3],
                    'taxCalculationStrategy' => $o[4],
                    'currencies' => $o[5],
                    'locales' => $o[6],
                    'countries' => $o[7],
                    'themeName' => $o[8],
                    'contactEmail' => $o[9],
                    'contactPhoneNumber' => $o[10],
                    'skippingShippingStepAllowed' => $o[11],
                    'skippingPaymentStepAllowed' => $o[12],
                    'accountVerificationRequired' => $o[13],
                    'shippingAddressInCheckoutRequired' => $o[14],
                    'shopBillingData' => $o[15],
                    'menuTaxon' => $o[16],
                    'channelPriceHistoryConfig' => $o[17],
                    'id' => $o[18],
                    'code' => $o[19],
                    'name' => $o[20],
                    'description' => $o[21],
                    'hostname' => $o[22],
                    'color' => $o[23],
                    'createdAt' => $o[24],
                    'updatedAt' => $o[25],
                    'enabled' => $o[26],
                    'currency' => $o[27],
                    'locale' => $o[28],
                    'country' => $o[29],
                    'enabledCountries' => $o[30],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                19 => [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:shop:channel:index',
                    'sylius:shop:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                26 => [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
12 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPriceHistoryConfig',
                'id',
                'lowestPriceForDiscountedProductsCheckingPeriod',
                'lowestPriceForDiscountedProductsVisible',
                'taxonsExcludedFromShowingLowestPrice',
                'taxonExcludedFromShowingLowestPrice',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'lowestPriceForDiscountedProductsCheckingPeriod' => $o[2],
                    'lowestPriceForDiscountedProductsVisible' => $o[3],
                    'taxonsExcludedFromShowingLowestPrice' => $o[4],
                    'taxonExcludedFromShowingLowestPrice' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:admin:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:admin:channel:show',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                    'sylius:admin:channel:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
13 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPricing',
                'id',
                'channelCode',
                'productVariant',
                'price',
                'originalPrice',
                'minimumPrice',
                'lowestPriceBeforeDiscount',
                'appliedPromotions',
                'priceReduced',
                'promotionApplied',
                'exclusiveCatalogPromotionApplied',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'channelCode' => $o[2],
                    'productVariant' => $o[3],
                    'price' => $o[4],
                    'originalPrice' => $o[5],
                    'minimumPrice' => $o[6],
                    'lowestPriceBeforeDiscount' => $o[7],
                    'appliedPromotions' => $o[8],
                    'priceReduced' => $o[9],
                    'promotionApplied' => $o[10],
                    'exclusiveCatalogPromotionApplied' => $o[11],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                4 => [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
14 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPricingLogEntry',
                'id',
                'channelPricing',
                'loggedAt',
                'price',
                'originalPrice',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'channelPricing' => $o[2],
                    'loggedAt' => $o[3],
                    'price' => $o[4],
                    'originalPrice' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:channel_pricing_log_entry:index',
                    'sylius:admin:channel_pricing_log_entry:show',
                ],
                [
                    'sylius:admin:channel_pricing_log_entry:index',
                    'sylius:admin:channel_pricing_log_entry:show',
                ],
                [
                    'sylius:admin:channel_pricing_log_entry:index',
                    'sylius:admin:channel_pricing_log_entry:show',
                ],
                [
                    'sylius:admin:channel_pricing_log_entry:index',
                    'sylius:admin:channel_pricing_log_entry:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
15 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangeShopUserPassword',
                'newPassword',
                'confirmNewPassword',
                'currentPassword',
                'shopUserId',
            ],
            'attributesMetadata' => [
                [
                    'newPassword' => $o[1],
                    'confirmNewPassword' => $o[2],
                    'currentPassword' => $o[3],
                    'shopUserId' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:shop:customer:password:update',
                ],
                [
                    'sylius:shop:customer:password:update',
                ],
                [
                    'sylius:shop:customer:password:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
16 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangePaymentMethod',
                'orderTokenValue',
                'paymentId',
                'paymentMethodCode',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'paymentId' => $o[2],
                    'paymentMethodCode' => $o[3],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:order:account:change_payment_method',
                ],
            ],
            'serializedName' => [
                3 => 'paymentMethod',
            ],
        ],
    ],
    $o[0],
    []
); } },
17 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                'channelCode',
                'localeCode',
                'firstName',
                'lastName',
                'email',
                'password',
                'subscribedToNewsletter',
            ],
            'attributesMetadata' => [
                [
                    'channelCode' => $o[1],
                    'localeCode' => $o[2],
                    'firstName' => $o[3],
                    'lastName' => $o[4],
                    'email' => $o[5],
                    'password' => $o[6],
                    'subscribedToNewsletter' => $o[7],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:customer:create',
                ],
                [
                    'sylius:shop:customer:create',
                ],
                [
                    'sylius:shop:customer:create',
                ],
                [
                    'sylius:shop:customer:create',
                ],
                [
                    'sylius:shop:customer:create',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
18 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestResetPasswordToken',
                'channelCode',
                'localeCode',
                'email',
            ],
            'attributesMetadata' => [
                [
                    'channelCode' => $o[1],
                    'localeCode' => $o[2],
                    'email' => $o[3],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:reset_password:create',
                ],
                [
                    'sylius:shop:reset_password:create',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
19 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
                'token',
                'newPassword',
                'confirmNewPassword',
            ],
            'attributesMetadata' => [
                [
                    'token' => $o[1],
                    'newPassword' => $o[2],
                    'confirmNewPassword' => $o[3],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:reset_password:update',
                ],
                [
                    'sylius:shop:reset_password:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
20 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                'title',
                'rating',
                'comment',
                'productCode',
                'email',
            ],
            'attributesMetadata' => [
                [
                    'title' => $o[1],
                    'rating' => $o[2],
                    'comment' => $o[3],
                    'productCode' => $o[4],
                    'email' => $o[5],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:shop:product_review:create',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:shop:product_review:create',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:shop:product_review:create',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:shop:product_review:create',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:shop:product_review:create',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
            ],
            'serializedName' => [
                4 => 'product',
            ],
        ],
    ],
    $o[0],
    []
); } },
21 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                'orderTokenValue',
                'productVariantCode',
                'quantity',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'productVariantCode' => $o[2],
                    'quantity' => $o[3],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:cart:add_item',
                ],
                [
                    'sylius:shop:cart:add_item',
                ],
            ],
            'serializedName' => [
                2 => 'productVariant',
            ],
        ],
    ],
    $o[0],
    []
); } },
22 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
                'orderTokenValue',
                'orderItemId',
                'quantity',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'orderItemId' => $o[2],
                    'quantity' => $o[3],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:cart:change_quantity',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
23 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChoosePaymentMethod',
                'orderTokenValue',
                'paymentId',
                'paymentMethodCode',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'paymentId' => $o[2],
                    'paymentMethodCode' => $o[3],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:cart:select_payment_method',
                ],
            ],
            'serializedName' => [
                3 => 'paymentMethod',
            ],
        ],
    ],
    $o[0],
    []
); } },
24 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChooseShippingMethod',
                'orderTokenValue',
                'shipmentId',
                'shippingMethodCode',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'shipmentId' => $o[2],
                    'shippingMethodCode' => $o[3],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:cart:select_shipping_method',
                ],
            ],
            'serializedName' => [
                3 => 'shippingMethod',
            ],
        ],
    ],
    $o[0],
    []
); } },
25 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\CompleteOrder',
                'orderTokenValue',
                'notes',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'notes' => $o[2],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:cart:complete',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
26 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ShipShipment',
                'shipmentId',
                'trackingCode',
            ],
            'attributesMetadata' => [
                [
                    'shipmentId' => $o[1],
                    'trackingCode' => $o[2],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:shipment:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
27 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\UpdateCart',
                'orderTokenValue',
                'email',
                'billingAddress',
                'shippingAddress',
                'couponCode',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'email' => $o[2],
                    'billingAddress' => $o[3],
                    'shippingAddress' => $o[4],
                    'couponCode' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:cart:update',
                ],
                [
                    'sylius:shop:cart:update',
                ],
                [
                    'sylius:shop:cart:update',
                ],
                [
                    'sylius:shop:cart:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
28 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Payment\\AddPaymentRequest',
                'orderTokenValue',
                'paymentId',
                'paymentMethodCode',
                'action',
                'payload',
            ],
            'attributesMetadata' => [
                [
                    'orderTokenValue' => $o[1],
                    'paymentId' => $o[2],
                    'paymentMethodCode' => $o[3],
                    'action' => $o[4],
                    'payload' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:payment_request:create',
                ],
                [
                    'sylius:shop:payment_request:create',
                ],
                [
                    'sylius:shop:payment_request:create',
                ],
                [
                    'sylius:shop:payment_request:create',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
29 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Payment\\UpdatePaymentRequest',
                'hash',
                'payload',
            ],
            'attributesMetadata' => [
                [
                    'hash' => $o[1],
                    'payload' => $o[2],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:shop:payment_request:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
30 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                'promotionCode',
                'prefix',
                'codeLength',
                'suffix',
                'amount',
                'expiresAt',
                'usageLimit',
            ],
            'attributesMetadata' => [
                [
                    'promotionCode' => $o[1],
                    'prefix' => $o[2],
                    'codeLength' => $o[3],
                    'suffix' => $o[4],
                    'amount' => $o[5],
                    'expiresAt' => $o[6],
                    'usageLimit' => $o[7],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
                [
                    'sylius:admin:promotion_coupon:generate',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
31 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\SendContactRequest',
                'channelCode',
                'localeCode',
                'email',
                'message',
            ],
            'attributesMetadata' => [
                [
                    'channelCode' => $o[1],
                    'localeCode' => $o[2],
                    'email' => $o[3],
                    'message' => $o[4],
                ],
            ],
            'groups' => [
                3 => [
                    'sylius:shop:contact_request:create',
                ],
                [
                    'sylius:shop:contact_request:create',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
32 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Country',
                'id',
                'code',
                'provinces',
                'enabled',
                'name',
                'province',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'provinces' => $o[3],
                    'enabled' => $o[4],
                    'name' => $o[5],
                    'province' => $o[6],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:country:index',
                    'sylius:admin:country:show',
                ],
                [
                    'sylius:admin:country:index',
                    'sylius:admin:country:show',
                    'sylius:admin:country:create',
                    'sylius:shop:country:index',
                    'sylius:shop:country:show',
                ],
                [
                    'sylius:admin:country:index',
                    'sylius:admin:country:show',
                    'sylius:admin:country:create',
                    'sylius:admin:country:update',
                    'sylius:shop:country:index',
                    'sylius:shop:country:show',
                ],
                [
                    'sylius:admin:country:index',
                    'sylius:admin:country:show',
                    'sylius:admin:country:create',
                    'sylius:admin:country:update',
                ],
                [
                    'sylius:admin:country:index',
                    'sylius:admin:country:show',
                    'sylius:shop:country:index',
                    'sylius:shop:country:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
33 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Currency\\Model\\Currency',
                'id',
                'code',
                'createdAt',
                'updatedAt',
                'name',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'createdAt' => $o[3],
                    'updatedAt' => $o[4],
                    'name' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:currency:index',
                    'sylius:admin:currency:show',
                    'sylius:admin:currency:create',
                    'sylius:shop:currency:index',
                    'sylius:shop:currency:show',
                ],
                5 => [
                    'sylius:admin:currency:index',
                    'sylius:admin:currency:show',
                    'sylius:shop:currency:index',
                    'sylius:shop:currency:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
34 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Customer',
                'orders',
                'defaultAddress',
                'addresses',
                'user',
                'id',
                'email',
                'emailCanonical',
                'firstName',
                'lastName',
                'birthday',
                'gender',
                'group',
                'phoneNumber',
                'subscribedToNewsletter',
                'createdAt',
                'updatedAt',
                'address',
                'fullName',
                'male',
                'female',
            ],
            'attributesMetadata' => [
                [
                    'orders' => $o[1],
                    'defaultAddress' => $o[2],
                    'addresses' => $o[3],
                    'user' => $o[4],
                    'id' => $o[5],
                    'email' => $o[6],
                    'emailCanonical' => $o[7],
                    'firstName' => $o[8],
                    'lastName' => $o[9],
                    'birthday' => $o[10],
                    'gender' => $o[11],
                    'group' => $o[12],
                    'phoneNumber' => $o[13],
                    'subscribedToNewsletter' => $o[14],
                    'createdAt' => $o[15],
                    'updatedAt' => $o[16],
                    'address' => $o[17],
                    'fullName' => $o[18],
                    'male' => $o[19],
                    'female' => $o[20],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                4 => [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:update',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:shop:customer:show',
                ],
                [
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                    'sylius:shop:cart:show',
                ],
                8 => [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:update',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                    'sylius:shop:customer:show',
                    'sylius:shop:customer:update',
                ],
                [
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                ],
                18 => [
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:shop:customer:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
35 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                'id',
                'code',
                'name',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:customer_group:index',
                    'sylius:admin:customer_group:show',
                ],
                [
                    'sylius:admin:customer_group:index',
                    'sylius:admin:customer_group:show',
                    'sylius:admin:customer_group:create',
                ],
                [
                    'sylius:admin:customer_group:index',
                    'sylius:admin:customer_group:show',
                    'sylius:admin:customer_group:create',
                    'sylius:admin:customer_group:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
36 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Customer\\Statistics\\CustomerStatistics',
                'perChannelsStatistics',
                'allOrdersCount',
            ],
            'attributesMetadata' => [
                [
                    'perChannelsStatistics' => $o[1],
                    'allOrdersCount' => $o[2],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:customer:statistics:show',
                ],
                [
                    'sylius:admin:customer:statistics:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
37 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                'id',
                'ratio',
                'sourceCurrency',
                'targetCurrency',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'ratio' => $o[2],
                    'sourceCurrency' => $o[3],
                    'targetCurrency' => $o[4],
                    'createdAt' => $o[5],
                    'updatedAt' => $o[6],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:exchange_rate:index',
                    'sylius:admin:exchange_rate:show',
                    'sylius:shop:exchange_rate:index',
                    'sylius:shop:exchange_rate:show',
                ],
                [
                    'sylius:admin:exchange_rate:create',
                    'sylius:admin:exchange_rate:index',
                    'sylius:admin:exchange_rate:show',
                    'sylius:admin:exchange_rate:update',
                    'sylius:shop:exchange_rate:index',
                    'sylius:shop:exchange_rate:show',
                ],
                [
                    'sylius:admin:exchange_rate:create',
                    'sylius:admin:exchange_rate:index',
                    'sylius:admin:exchange_rate:show',
                    'sylius:shop:exchange_rate:index',
                    'sylius:shop:exchange_rate:show',
                ],
                [
                    'sylius:admin:exchange_rate:create',
                    'sylius:admin:exchange_rate:index',
                    'sylius:admin:exchange_rate:show',
                    'sylius:shop:exchange_rate:index',
                    'sylius:shop:exchange_rate:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
38 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\GatewayConfig',
                'id',
                'factoryName',
                'gatewayName',
                'config',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'factoryName' => $o[2],
                    'gatewayName' => $o[3],
                    'config' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:create',
                ],
                [
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:create',
                ],
                [
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
39 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Locale\\Model\\Locale',
                'id',
                'code',
                'createdAt',
                'updatedAt',
                'name',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'createdAt' => $o[3],
                    'updatedAt' => $o[4],
                    'name' => $o[5],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:locale:index',
                    'sylius:admin:locale:show',
                ],
                [
                    'sylius:admin:locale:index',
                    'sylius:admin:locale:show',
                    'sylius:admin:locale:create',
                    'sylius:shop:locale:index',
                    'sylius:shop:locale:show',
                ],
                5 => [
                    'sylius:admin:locale:index',
                    'sylius:admin:locale:show',
                    'sylius:shop:locale:index',
                    'sylius:shop:locale:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
40 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Order',
                'customer',
                'channel',
                'shippingAddress',
                'billingAddress',
                'payments',
                'shipments',
                'currencyCode',
                'localeCode',
                'promotionCoupon',
                'checkoutState',
                'paymentState',
                'shippingState',
                'promotions',
                'tokenValue',
                'customerIp',
                'createdByGuest',
                'id',
                'checkoutCompletedAt',
                'number',
                'notes',
                'items',
                'itemsTotal',
                'adjustments',
                'adjustmentsTotal',
                'total',
                'state',
                'createdAt',
                'updatedAt',
                'customerWithAuthorization',
                'user',
                'itemUnits',
                'payment',
                'lastPayment',
                'shippingRequired',
                'shipment',
                'promotionSubjectTotal',
                'promotionSubjectCount',
                'itemsSubtotal',
                'promotion',
                'taxTotal',
                'shippingTaxTotal',
                'taxExcludedTotal',
                'taxIncludedTotal',
                'shippingTotal',
                'orderPromotionTotal',
                'shippingPromotionTotal',
                'nonDiscountedItemsTotal',
                'checkoutCompleted',
                'item',
                'totalQuantity',
                'empty',
                'adjustmentsRecursively',
                'adjustment',
                'adjustmentsTotalRecursively',
            ],
            'attributesMetadata' => [
                [
                    'customer' => $o[1],
                    'channel' => $o[2],
                    'shippingAddress' => $o[3],
                    'billingAddress' => $o[4],
                    'payments' => $o[5],
                    'shipments' => $o[6],
                    'currencyCode' => $o[7],
                    'localeCode' => $o[8],
                    'promotionCoupon' => $o[9],
                    'checkoutState' => $o[10],
                    'paymentState' => $o[11],
                    'shippingState' => $o[12],
                    'promotions' => $o[13],
                    'tokenValue' => $o[14],
                    'customerIp' => $o[15],
                    'createdByGuest' => $o[16],
                    'id' => $o[17],
                    'checkoutCompletedAt' => $o[18],
                    'number' => $o[19],
                    'notes' => $o[20],
                    'items' => $o[21],
                    'itemsTotal' => $o[22],
                    'adjustments' => $o[23],
                    'adjustmentsTotal' => $o[24],
                    'total' => $o[25],
                    'state' => $o[26],
                    'createdAt' => $o[27],
                    'updatedAt' => $o[28],
                    'customerWithAuthorization' => $o[29],
                    'user' => $o[30],
                    'itemUnits' => $o[31],
                    'payment' => $o[32],
                    'lastPayment' => $o[33],
                    'shippingRequired' => $o[34],
                    'shipment' => $o[35],
                    'promotionSubjectTotal' => $o[36],
                    'promotionSubjectCount' => $o[37],
                    'itemsSubtotal' => $o[38],
                    'promotion' => $o[39],
                    'taxTotal' => $o[40],
                    'shippingTaxTotal' => $o[41],
                    'taxExcludedTotal' => $o[42],
                    'taxIncludedTotal' => $o[43],
                    'shippingTotal' => $o[44],
                    'orderPromotionTotal' => $o[45],
                    'shippingPromotionTotal' => $o[46],
                    'nonDiscountedItemsTotal' => $o[47],
                    'checkoutCompleted' => $o[48],
                    'item' => $o[49],
                    'totalQuantity' => $o[50],
                    'empty' => $o[51],
                    'adjustmentsRecursively' => $o[52],
                    'adjustment' => $o[53],
                    'adjustmentsTotalRecursively' => $o[54],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:order:index',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:cart:update',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:shop:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                ],
                14 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order:index',
                ],
                [
                    'sylius:admin:order:show',
                ],
                17 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order:index',
                    'sylius:shop:order:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order:index',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:index',
                    'sylius:shop:order:account:show',
                ],
                25 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:order:index',
                    'sylius:shop:cart:show',
                ],
                38 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:index',
                    'sylius:shop:order:account:show',
                ],
                40 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
41 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\OrderItem',
                'version',
                'variant',
                'productName',
                'variantName',
                'id',
                'order',
                'quantity',
                'unitPrice',
                'originalUnitPrice',
                'total',
                'immutable',
                'units',
                'unitsTotal',
                'adjustments',
                'adjustmentsTotal',
                'product',
                'taxTotal',
                'discountedUnitPrice',
                'fullDiscountedUnitPrice',
                'subtotal',
                'adjustmentsRecursively',
                'adjustmentsTotalRecursively',
                'unit',
                'adjustment',
            ],
            'attributesMetadata' => [
                [
                    'version' => $o[1],
                    'variant' => $o[2],
                    'productName' => $o[3],
                    'variantName' => $o[4],
                    'id' => $o[5],
                    'order' => $o[6],
                    'quantity' => $o[7],
                    'unitPrice' => $o[8],
                    'originalUnitPrice' => $o[9],
                    'total' => $o[10],
                    'immutable' => $o[11],
                    'units' => $o[12],
                    'unitsTotal' => $o[13],
                    'adjustments' => $o[14],
                    'adjustmentsTotal' => $o[15],
                    'product' => $o[16],
                    'taxTotal' => $o[17],
                    'discountedUnitPrice' => $o[18],
                    'fullDiscountedUnitPrice' => $o[19],
                    'subtotal' => $o[20],
                    'adjustmentsRecursively' => $o[21],
                    'adjustmentsTotalRecursively' => $o[22],
                    'unit' => $o[23],
                    'adjustment' => $o[24],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                    'sylius:shop:cart:show',
                ],
                12 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                14 => [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                18 => [
                    'sylius:shop:order_item:show',
                    'sylius:shop:cart:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:order_item:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
                [
                    'sylius:admin:order_item:show',
                    'sylius:shop:order_item:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
42 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\OrderItemUnit',
                'shipment',
                'id',
                'adjustments',
                'adjustmentsTotal',
                'orderItem',
                'createdAt',
                'updatedAt',
                'stockable',
                'shippable',
                'taxTotal',
                'total',
                'adjustment',
            ],
            'attributesMetadata' => [
                [
                    'shipment' => $o[1],
                    'id' => $o[2],
                    'adjustments' => $o[3],
                    'adjustmentsTotal' => $o[4],
                    'orderItem' => $o[5],
                    'createdAt' => $o[6],
                    'updatedAt' => $o[7],
                    'stockable' => $o[8],
                    'shippable' => $o[9],
                    'taxTotal' => $o[10],
                    'total' => $o[11],
                    'adjustment' => $o[12],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:order_item_unit:show',
                ],
                9 => [
                    'sylius:admin:order_item_unit:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
43 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Payment',
                'order',
                'id',
                'method',
                'currencyCode',
                'amount',
                'state',
                'details',
                'paymentRequests',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'order' => $o[1],
                    'id' => $o[2],
                    'method' => $o[3],
                    'currencyCode' => $o[4],
                    'amount' => $o[5],
                    'state' => $o[6],
                    'details' => $o[7],
                    'paymentRequests' => $o[8],
                    'createdAt' => $o[9],
                    'updatedAt' => $o[10],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                9 => [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:shop:payment:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
44 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PaymentMethod',
                'channels',
                'id',
                'code',
                'environment',
                'position',
                'gatewayConfig',
                'createdAt',
                'updatedAt',
                'enabled',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'channel',
                'translationClass',
                'name',
                'description',
                'instructions',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'channels' => $o[1],
                    'id' => $o[2],
                    'code' => $o[3],
                    'environment' => $o[4],
                    'position' => $o[5],
                    'gatewayConfig' => $o[6],
                    'createdAt' => $o[7],
                    'updatedAt' => $o[8],
                    'enabled' => $o[9],
                    'translations' => $o[10],
                    'translationsCache' => $o[11],
                    'currentLocale' => $o[12],
                    'currentTranslation' => $o[13],
                    'fallbackLocale' => $o[14],
                    'channel' => $o[15],
                    'translationClass' => $o[16],
                    'name' => $o[17],
                    'description' => $o[18],
                    'instructions' => $o[19],
                    'translation' => $o[20],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                [
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
                [
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:create',
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
                5 => [
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:update',
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
                [
                    'sylius:admin:payment_method:index',
                    'sylius:admin:gateway_config:show',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:update',
                ],
                9 => [
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                17 => [
                    'sylius:shop:payment:show',
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
                [
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
                [
                    'sylius:shop:payment_method:index',
                    'sylius:shop:payment_method:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
45 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                'id',
                'name',
                'description',
                'instructions',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'description' => $o[3],
                    'instructions' => $o[4],
                    'locale' => $o[5],
                    'translatable' => $o[6],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:payment:index',
                    'sylius:admin:payment:show',
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                [
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                [
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:index',
                    'sylius:admin:payment_method:show',
                    'sylius:admin:payment_method:update',
                ],
                [
                    'sylius:admin:payment_method:create',
                    'sylius:admin:payment_method:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
46 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentRequest',
                'hash',
                'state',
                'action',
                'payload',
                'responseData',
                'payment',
                'method',
                'createdAt',
                'updatedAt',
                'id',
            ],
            'attributesMetadata' => [
                [
                    'hash' => $o[1],
                    'state' => $o[2],
                    'action' => $o[3],
                    'payload' => $o[4],
                    'responseData' => $o[5],
                    'payment' => $o[6],
                    'method' => $o[7],
                    'createdAt' => $o[8],
                    'updatedAt' => $o[9],
                    'id' => $o[10],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:payment_request:index',
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:index',
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:index',
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:index',
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:index',
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
                [
                    'sylius:admin:payment_request:show',
                    'sylius:shop:payment_request:show',
                ],
            ],
            'ignore' => [
                10 => true,
            ],
        ],
    ],
    $o[0],
    []
); } },
47 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Customer\\Statistics\\PerChannelCustomerStatistics',
                'ordersCount',
                'ordersValue',
                'channel',
                'averageOrderValue',
            ],
            'attributesMetadata' => [
                [
                    'ordersCount' => $o[1],
                    'ordersValue' => $o[2],
                    'channel' => $o[3],
                    'averageOrderValue' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:customer:statistics:show',
                ],
                [
                    'sylius:admin:customer:statistics:show',
                ],
                [
                    'sylius:admin:customer:statistics:show',
                ],
                [
                    'sylius:admin:customer:statistics:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
48 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Product',
                'variantSelectionMethod',
                'productTaxons',
                'channels',
                'mainTaxon',
                'reviews',
                'averageRating',
                'images',
                'id',
                'code',
                'attributes',
                'variants',
                'options',
                'associations',
                'createdAt',
                'updatedAt',
                'enabled',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'variantSelectionMethodChoice',
                'variantSelectionMethodLabel',
                'productTaxon',
                'taxons',
                'taxon',
                'channel',
                'shortDescription',
                'acceptedReviews',
                'image',
                'variantSelectionMethodLabels',
                'translation',
                'name',
                'description',
                'slug',
                'defaultVariantData',
                'descriptor',
                'metaKeywords',
                'metaDescription',
                'attribute',
                'attributeByCodeAndLocale',
                'variant',
                'enabledVariants',
                'option',
                'association',
                'simple',
                'configurable',
                'notEmptyAttributeByCodeAndLocale',
            ],
            'attributesMetadata' => [
                [
                    'variantSelectionMethod' => $o[1],
                    'productTaxons' => $o[2],
                    'channels' => $o[3],
                    'mainTaxon' => $o[4],
                    'reviews' => $o[5],
                    'averageRating' => $o[6],
                    'images' => $o[7],
                    'id' => $o[8],
                    'code' => $o[9],
                    'attributes' => $o[10],
                    'variants' => $o[11],
                    'options' => $o[12],
                    'associations' => $o[13],
                    'createdAt' => $o[14],
                    'updatedAt' => $o[15],
                    'enabled' => $o[16],
                    'translations' => $o[17],
                    'translationsCache' => $o[18],
                    'currentLocale' => $o[19],
                    'currentTranslation' => $o[20],
                    'fallbackLocale' => $o[21],
                    'variantSelectionMethodChoice' => $o[22],
                    'variantSelectionMethodLabel' => $o[23],
                    'productTaxon' => $o[24],
                    'taxons' => $o[25],
                    'taxon' => $o[26],
                    'channel' => $o[27],
                    'shortDescription' => $o[28],
                    'acceptedReviews' => $o[29],
                    'image' => $o[30],
                    'variantSelectionMethodLabels' => $o[31],
                    'translation' => $o[32],
                    'name' => $o[33],
                    'description' => $o[34],
                    'slug' => $o[35],
                    'defaultVariantData' => $o[36],
                    'descriptor' => $o[37],
                    'metaKeywords' => $o[38],
                    'metaDescription' => $o[39],
                    'attribute' => $o[40],
                    'attributeByCodeAndLocale' => $o[41],
                    'variant' => $o[42],
                    'enabledVariants' => $o[43],
                    'option' => $o[44],
                    'association' => $o[45],
                    'simple' => $o[46],
                    'configurable' => $o[47],
                    'notEmptyAttributeByCodeAndLocale' => $o[48],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                28 => [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                33 => [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
            ],
            'serializedName' => [
                29 => 'reviews',
            ],
            'normalizationContexts' => [
                29 => [
                    '*' => [
                        'collection_values' => true,
                    ],
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
49 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociation',
                'id',
                'type',
                'owner',
                'associatedProducts',
                'createdAt',
                'updatedAt',
                'associatedProduct',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'owner' => $o[3],
                    'associatedProducts' => $o[4],
                    'createdAt' => $o[5],
                    'updatedAt' => $o[6],
                    'associatedProduct' => $o[7],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:shop:product_association:show',
                ],
                [
                    'sylius:admin:product_association:index',
                    'sylius:admin:product_association:show',
                    'sylius:admin:product_association:create',
                    'sylius:shop:product_association:show',
                ],
                [
                    'sylius:admin:product_association:index',
                    'sylius:admin:product_association:show',
                    'sylius:admin:product_association:create',
                ],
                [
                    'sylius:admin:product_association:index',
                    'sylius:admin:product_association:show',
                    'sylius:admin:product_association:create',
                    'sylius:admin:product_association:update',
                    'sylius:shop:product_association:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
50 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                'id',
                'code',
                'name',
                'createdAt',
                'updatedAt',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                    'createdAt' => $o[4],
                    'updatedAt' => $o[5],
                    'translations' => $o[6],
                    'translationsCache' => $o[7],
                    'currentLocale' => $o[8],
                    'currentTranslation' => $o[9],
                    'fallbackLocale' => $o[10],
                    'translation' => $o[11],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                ],
                [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                    'sylius:admin:product_association_type:create',
                    'sylius:shop:product_association_type:index',
                    'sylius:shop:product_association_type:show',
                ],
                [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                    'sylius:shop:product_association_type:index',
                    'sylius:shop:product_association_type:show',
                ],
                [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                ],
                [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                ],
                [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                    'sylius:admin:product_association_type:create',
                    'sylius:admin:product_association_type:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
51 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                'id',
                'name',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_association_type:index',
                    'sylius:admin:product_association_type:show',
                    'sylius:admin:product_association_type:create',
                    'sylius:admin:product_association_type:update',
                ],
                [
                    'sylius:admin:product_association_type:create',
                    'sylius:admin:product_association_type:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
52 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAttribute',
                'id',
                'code',
                'type',
                'configuration',
                'storageType',
                'position',
                'translatable',
                'createdAt',
                'updatedAt',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'name',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'type' => $o[3],
                    'configuration' => $o[4],
                    'storageType' => $o[5],
                    'position' => $o[6],
                    'translatable' => $o[7],
                    'createdAt' => $o[8],
                    'updatedAt' => $o[9],
                    'translations' => $o[10],
                    'translationsCache' => $o[11],
                    'currentLocale' => $o[12],
                    'currentTranslation' => $o[13],
                    'fallbackLocale' => $o[14],
                    'name' => $o[15],
                    'translation' => $o[16],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:shop:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:shop:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:shop:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                    'sylius:shop:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                ],
                10 => [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                ],
                15 => [
                    'sylius:shop:product_attribute:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
53 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
                'id',
                'name',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_attribute:index',
                    'sylius:admin:product_attribute:show',
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                    'sylius:shop:product_attribute:show',
                ],
                [
                    'sylius:admin:product_attribute:create',
                    'sylius:admin:product_attribute:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
54 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAttributeValue',
                'id',
                'subject',
                'attribute',
                'localeCode',
                'product',
                'value',
                'name',
                'type',
                'code',
                'text',
                'boolean',
                'integer',
                'float',
                'datetime',
                'date',
                'json',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'subject' => $o[2],
                    'attribute' => $o[3],
                    'localeCode' => $o[4],
                    'product' => $o[5],
                    'value' => $o[6],
                    'name' => $o[7],
                    'type' => $o[8],
                    'code' => $o[9],
                    'text' => $o[10],
                    'boolean' => $o[11],
                    'integer' => $o[12],
                    'float' => $o[13],
                    'datetime' => $o[14],
                    'date' => $o[15],
                    'json' => $o[16],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                3 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                6 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                [
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                [
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
                [
                    'sylius:shop:product_attribute_value:show',
                    'sylius:admin:product_attribute_value:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
55 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductImage',
                'productVariants',
                'position',
                'id',
                'type',
                'file',
                'path',
                'owner',
                'productVariant',
            ],
            'attributesMetadata' => [
                [
                    'productVariants' => $o[1],
                    'position' => $o[2],
                    'id' => $o[3],
                    'type' => $o[4],
                    'file' => $o[5],
                    'path' => $o[6],
                    'owner' => $o[7],
                    'productVariant' => $o[8],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                    'sylius:admin:product_image:update',
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                ],
                [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                    'sylius:admin:product_image:update',
                    'sylius:admin:product:show',
                ],
                [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product_image:index',
                    'sylius:shop:product_image:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                    'sylius:admin:product_image:update',
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product_image:index',
                    'sylius:shop:product_image:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                6 => [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:shop:product_image:index',
                    'sylius:shop:product_image:show',
                    'sylius:shop:product:index',
                    'sylius:shop:product:show',
                ],
                [
                    'sylius:admin:product_image:index',
                    'sylius:admin:product_image:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
56 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOption',
                'id',
                'code',
                'position',
                'values',
                'createdAt',
                'updatedAt',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'name',
                'value',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'position' => $o[3],
                    'values' => $o[4],
                    'createdAt' => $o[5],
                    'updatedAt' => $o[6],
                    'translations' => $o[7],
                    'translationsCache' => $o[8],
                    'currentLocale' => $o[9],
                    'currentTranslation' => $o[10],
                    'fallbackLocale' => $o[11],
                    'name' => $o[12],
                    'value' => $o[13],
                    'translation' => $o[14],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:admin:product_option:create',
                    'sylius:shop:product_option:show',
                    'sylius:shop:product_option:index',
                ],
                [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
                [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                    'sylius:shop:product_option:show',
                ],
                [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                ],
                [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                ],
                [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
                12 => [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:shop:product_option:show',
                    'sylius:shop:product_option:index',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
57 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                'id',
                'name',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_option:index',
                    'sylius:admin:product_option:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
                [
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
58 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                'id',
                'code',
                'option',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'value',
                'optionCode',
                'name',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'option' => $o[3],
                    'translations' => $o[4],
                    'translationsCache' => $o[5],
                    'currentLocale' => $o[6],
                    'currentTranslation' => $o[7],
                    'fallbackLocale' => $o[8],
                    'value' => $o[9],
                    'optionCode' => $o[10],
                    'name' => $o[11],
                    'translation' => $o[12],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_option_value:index',
                    'sylius:admin:product_option_value:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                    'sylius:shop:product_option_value:index',
                    'sylius:shop:product_option_value:show',
                ],
                [
                    'sylius:admin:product_option_value:show',
                    'sylius:shop:product_option_value:index',
                    'sylius:shop:product_option_value:show',
                ],
                [
                    'sylius:admin:product_option_value:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
                9 => [
                    'sylius:admin:product_option_value:show',
                    'sylius:shop:product_option_value:index',
                    'sylius:shop:product_option_value:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
59 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                'id',
                'value',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'value' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_option_value:show',
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
                [
                    'sylius:admin:product_option:create',
                    'sylius:admin:product_option:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
60 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductReview',
                'id',
                'title',
                'rating',
                'comment',
                'author',
                'status',
                'reviewSubject',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'title' => $o[2],
                    'rating' => $o[3],
                    'comment' => $o[4],
                    'author' => $o[5],
                    'status' => $o[6],
                    'reviewSubject' => $o[7],
                    'createdAt' => $o[8],
                    'updatedAt' => $o[9],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:admin:product_review:update',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:admin:product_review:update',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:admin:product_review:update',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
                [
                    'sylius:admin:product_review:index',
                    'sylius:admin:product_review:show',
                    'sylius:shop:product_review:index',
                    'sylius:shop:product_review:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
61 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductTaxon',
                'id',
                'product',
                'taxon',
                'position',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'product' => $o[2],
                    'taxon' => $o[3],
                    'position' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product_taxon:index',
                    'sylius:admin:product_taxon:show',
                    'sylius:shop:product_taxon:show',
                ],
                [
                    'sylius:admin:product_taxon:index',
                    'sylius:admin:product_taxon:show',
                    'sylius:admin:product_taxon:create',
                    'sylius:shop:product_taxon:show',
                ],
                [
                    'sylius:admin:product_taxon:index',
                    'sylius:admin:product_taxon:show',
                    'sylius:admin:product_taxon:create',
                    'sylius:shop:product_taxon:show',
                ],
                [
                    'sylius:admin:product_taxon:index',
                    'sylius:admin:product_taxon:show',
                    'sylius:admin:product_taxon:update',
                    'sylius:admin:product_taxon:create',
                    'sylius:shop:product_taxon:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
62 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductTranslation',
                'id',
                'name',
                'slug',
                'description',
                'metaKeywords',
                'metaDescription',
                'locale',
                'translatable',
                'shortDescription',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'slug' => $o[3],
                    'description' => $o[4],
                    'metaKeywords' => $o[5],
                    'metaDescription' => $o[6],
                    'locale' => $o[7],
                    'translatable' => $o[8],
                    'shortDescription' => $o[9],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                [
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
                9 => [
                    'sylius:admin:product:index',
                    'sylius:admin:product:show',
                    'sylius:admin:product:create',
                    'sylius:admin:product:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
63 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductVariant',
                'version',
                'onHold',
                'onHand',
                'tracked',
                'weight',
                'width',
                'height',
                'depth',
                'taxCategory',
                'shippingCategory',
                'channelPricings',
                'shippingRequired',
                'images',
                'id',
                'code',
                'product',
                'optionValues',
                'position',
                'createdAt',
                'updatedAt',
                'enabled',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'inStock',
                'inventoryName',
                'shippingWeight',
                'shippingWidth',
                'shippingHeight',
                'shippingDepth',
                'shippingVolume',
                'channelPricingForChannel',
                'channelPricing',
                'image',
                'name',
                'descriptor',
                'optionValue',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'version' => $o[1],
                    'onHold' => $o[2],
                    'onHand' => $o[3],
                    'tracked' => $o[4],
                    'weight' => $o[5],
                    'width' => $o[6],
                    'height' => $o[7],
                    'depth' => $o[8],
                    'taxCategory' => $o[9],
                    'shippingCategory' => $o[10],
                    'channelPricings' => $o[11],
                    'shippingRequired' => $o[12],
                    'images' => $o[13],
                    'id' => $o[14],
                    'code' => $o[15],
                    'product' => $o[16],
                    'optionValues' => $o[17],
                    'position' => $o[18],
                    'createdAt' => $o[19],
                    'updatedAt' => $o[20],
                    'enabled' => $o[21],
                    'translations' => $o[22],
                    'translationsCache' => $o[23],
                    'currentLocale' => $o[24],
                    'currentTranslation' => $o[25],
                    'fallbackLocale' => $o[26],
                    'inStock' => $o[27],
                    'inventoryName' => $o[28],
                    'shippingWeight' => $o[29],
                    'shippingWidth' => $o[30],
                    'shippingHeight' => $o[31],
                    'shippingDepth' => $o[32],
                    'shippingVolume' => $o[33],
                    'channelPricingForChannel' => $o[34],
                    'channelPricing' => $o[35],
                    'image' => $o[36],
                    'name' => $o[37],
                    'descriptor' => $o[38],
                    'optionValue' => $o[39],
                    'translation' => $o[40],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                15 => [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:shop:product_variant:index',
                    'sylius:shop:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:shop:product_variant:index',
                    'sylius:shop:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                    'sylius:shop:product_variant:index',
                    'sylius:shop:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
                37 => [
                    'sylius:shop:product_variant:index',
                    'sylius:shop:product_variant:show',
                    'sylius:shop:product:index:default_variant',
                    'sylius:shop:product:show:default_variant',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
64 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductVariantTranslation',
                'id',
                'name',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:product_variant:index',
                    'sylius:admin:product_variant:show',
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                ],
                [
                    'sylius:admin:product_variant:create',
                    'sylius:admin:product_variant:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
65 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Promotion',
                'channels',
                'id',
                'code',
                'name',
                'description',
                'priority',
                'exclusive',
                'usageLimit',
                'used',
                'startsAt',
                'endsAt',
                'couponBased',
                'coupons',
                'rules',
                'actions',
                'appliesToDiscounted',
                'archivedAt',
                'createdAt',
                'updatedAt',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'channel',
                'coupon',
                'rule',
                'action',
                'label',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'channels' => $o[1],
                    'id' => $o[2],
                    'code' => $o[3],
                    'name' => $o[4],
                    'description' => $o[5],
                    'priority' => $o[6],
                    'exclusive' => $o[7],
                    'usageLimit' => $o[8],
                    'used' => $o[9],
                    'startsAt' => $o[10],
                    'endsAt' => $o[11],
                    'couponBased' => $o[12],
                    'coupons' => $o[13],
                    'rules' => $o[14],
                    'actions' => $o[15],
                    'appliesToDiscounted' => $o[16],
                    'archivedAt' => $o[17],
                    'createdAt' => $o[18],
                    'updatedAt' => $o[19],
                    'translations' => $o[20],
                    'translationsCache' => $o[21],
                    'currentLocale' => $o[22],
                    'currentTranslation' => $o[23],
                    'fallbackLocale' => $o[24],
                    'channel' => $o[25],
                    'coupon' => $o[26],
                    'rule' => $o[27],
                    'action' => $o[28],
                    'label' => $o[29],
                    'translation' => $o[30],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
66 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                'id',
                'type',
                'configuration',
                'promotion',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'configuration' => $o[3],
                    'promotion' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
67 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PromotionCoupon',
                'perCustomerUsageLimit',
                'reusableFromCancelledOrders',
                'id',
                'code',
                'usageLimit',
                'used',
                'promotion',
                'expiresAt',
                'createdAt',
                'updatedAt',
                'valid',
            ],
            'attributesMetadata' => [
                [
                    'perCustomerUsageLimit' => $o[1],
                    'reusableFromCancelledOrders' => $o[2],
                    'id' => $o[3],
                    'code' => $o[4],
                    'usageLimit' => $o[5],
                    'used' => $o[6],
                    'promotion' => $o[7],
                    'expiresAt' => $o[8],
                    'createdAt' => $o[9],
                    'updatedAt' => $o[10],
                    'valid' => $o[11],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                    'sylius:admin:promotion_coupon:create',
                    'sylius:admin:promotion_coupon:update',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                    'sylius:admin:promotion_coupon:create',
                    'sylius:admin:promotion_coupon:update',
                ],
                4 => [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                    'sylius:admin:promotion_coupon:create',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:show',
                    'sylius:shop:order:account:show',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                    'sylius:admin:promotion_coupon:create',
                    'sylius:admin:promotion_coupon:update',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                    'sylius:admin:promotion_coupon:create',
                    'sylius:admin:promotion_coupon:update',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                ],
                [
                    'sylius:admin:promotion_coupon:index',
                    'sylius:admin:promotion_coupon:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
68 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                'id',
                'type',
                'configuration',
                'promotion',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'configuration' => $o[3],
                    'promotion' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
69 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionTranslation',
                'id',
                'label',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'label' => $o[2],
                    'locale' => $o[3],
                    'translatable' => $o[4],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:promotion:index',
                    'sylius:admin:promotion:show',
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
                [
                    'sylius:admin:promotion:create',
                    'sylius:admin:promotion:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
70 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Province',
                'id',
                'code',
                'name',
                'abbreviation',
                'country',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                    'abbreviation' => $o[4],
                    'country' => $o[5],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:province:show',
                    'sylius:admin:province:index',
                    'sylius:admin:country:create',
                    'sylius:admin:country:update',
                    'sylius:shop:province:show',
                    'sylius:shop:country:index',
                    'sylius:shop:country:show',
                ],
                [
                    'sylius:admin:province:show',
                    'sylius:admin:province:index',
                    'sylius:admin:province:update',
                    'sylius:admin:country:create',
                    'sylius:admin:country:update',
                    'sylius:shop:province:show',
                    'sylius:shop:country:index',
                    'sylius:shop:country:show',
                ],
                [
                    'sylius:admin:country:create',
                    'sylius:admin:country:update',
                    'sylius:admin:province:show',
                    'sylius:admin:province:index',
                    'sylius:admin:province:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
71 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Shipment',
                'order',
                'adjustments',
                'adjustmentsTotal',
                'id',
                'state',
                'method',
                'units',
                'tracking',
                'shippedAt',
                'createdAt',
                'updatedAt',
                'adjustment',
                'shippingUnitTotal',
                'unit',
                'tracked',
                'shippables',
                'shippingWeight',
                'shippingVolume',
                'shippingUnitCount',
            ],
            'attributesMetadata' => [
                [
                    'order' => $o[1],
                    'adjustments' => $o[2],
                    'adjustmentsTotal' => $o[3],
                    'id' => $o[4],
                    'state' => $o[5],
                    'method' => $o[6],
                    'units' => $o[7],
                    'tracking' => $o[8],
                    'shippedAt' => $o[9],
                    'createdAt' => $o[10],
                    'updatedAt' => $o[11],
                    'adjustment' => $o[12],
                    'shippingUnitTotal' => $o[13],
                    'unit' => $o[14],
                    'tracked' => $o[15],
                    'shippables' => $o[16],
                    'shippingWeight' => $o[17],
                    'shippingVolume' => $o[18],
                    'shippingUnitCount' => $o[19],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                4 => [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:order:index',
                    'sylius:admin:order:show',
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:cart:show',
                    'sylius:shop:order:account:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
                [
                    'sylius:admin:shipment:index',
                    'sylius:admin:shipment:show',
                    'sylius:shop:shipment:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
72 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                'id',
                'code',
                'name',
                'description',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                    'description' => $o[4],
                    'createdAt' => $o[5],
                    'updatedAt' => $o[6],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                ],
                [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                    'sylius:admin:shipping_category:create',
                ],
                [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                    'sylius:admin:shipping_category:update',
                    'sylius:admin:shipping_category:create',
                ],
                [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                    'sylius:admin:shipping_category:update',
                    'sylius:admin:shipping_category:create',
                ],
                [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                ],
                [
                    'sylius:admin:shipping_category:index',
                    'sylius:admin:shipping_category:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
73 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShippingMethod',
                'zone',
                'taxCategory',
                'channels',
                'id',
                'code',
                'position',
                'category',
                'categoryRequirement',
                'calculator',
                'configuration',
                'rules',
                'archivedAt',
                'createdAt',
                'updatedAt',
                'enabled',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'channel',
                'translationClass',
                'name',
                'description',
                'rule',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'zone' => $o[1],
                    'taxCategory' => $o[2],
                    'channels' => $o[3],
                    'id' => $o[4],
                    'code' => $o[5],
                    'position' => $o[6],
                    'category' => $o[7],
                    'categoryRequirement' => $o[8],
                    'calculator' => $o[9],
                    'configuration' => $o[10],
                    'rules' => $o[11],
                    'archivedAt' => $o[12],
                    'createdAt' => $o[13],
                    'updatedAt' => $o[14],
                    'enabled' => $o[15],
                    'translations' => $o[16],
                    'translationsCache' => $o[17],
                    'currentLocale' => $o[18],
                    'currentTranslation' => $o[19],
                    'fallbackLocale' => $o[20],
                    'channel' => $o[21],
                    'translationClass' => $o[22],
                    'name' => $o[23],
                    'description' => $o[24],
                    'rule' => $o[25],
                    'translation' => $o[26],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                3 => [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:shop:shipping_method:index',
                    'sylius:shop:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:shop:shipping_method:index',
                    'sylius:shop:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                    'sylius:shop:shipping_method:index',
                    'sylius:shop:shipping_method:show',
                ],
                9 => [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                23 => [
                    'sylius:shop:shipping_method:index',
                    'sylius:shop:shipping_method:show',
                ],
                [
                    'sylius:shop:shipping_method:index',
                    'sylius:shop:shipping_method:show',
                ],
            ],
            'serializedName' => [
                9 => 'shippingChargesCalculator',
                'shippingChargesCalculatorConfiguration',
            ],
        ],
    ],
    $o[0],
    []
); } },
74 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodRule',
                'id',
                'type',
                'configuration',
                'shippingMethod',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'configuration' => $o[3],
                    'shippingMethod' => $o[4],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
75 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                'id',
                'name',
                'description',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'description' => $o[3],
                    'locale' => $o[4],
                    'translatable' => $o[5],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:index',
                    'sylius:admin:shipping_method:show',
                    'sylius:admin:shipping_method:update',
                ],
                [
                    'sylius:admin:shipping_method:create',
                    'sylius:admin:shipping_method:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
76 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShopBillingData',
                'id',
                'company',
                'taxId',
                'countryCode',
                'street',
                'city',
                'postcode',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'company' => $o[2],
                    'taxId' => $o[3],
                    'countryCode' => $o[4],
                    'street' => $o[5],
                    'city' => $o[6],
                    'postcode' => $o[7],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
                [
                    'sylius:admin:channel:index',
                    'sylius:admin:channel:show',
                    'sylius:admin:channel:create',
                    'sylius:admin:channel:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
77 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShopUser',
                'customer',
                'id',
                'username',
                'usernameCanonical',
                'password',
                'plainPassword',
                'lastLogin',
                'emailVerificationToken',
                'passwordResetToken',
                'passwordRequestedAt',
                'verifiedAt',
                'roles',
                'oauthAccounts',
                'email',
                'emailCanonical',
                'createdAt',
                'updatedAt',
                'enabled',
                'verified',
                'userIdentifier',
                'role',
                'passwordRequestNonExpired',
                'oAuthAccounts',
            ],
            'attributesMetadata' => [
                [
                    'customer' => $o[1],
                    'id' => $o[2],
                    'username' => $o[3],
                    'usernameCanonical' => $o[4],
                    'password' => $o[5],
                    'plainPassword' => $o[6],
                    'lastLogin' => $o[7],
                    'emailVerificationToken' => $o[8],
                    'passwordResetToken' => $o[9],
                    'passwordRequestedAt' => $o[10],
                    'verifiedAt' => $o[11],
                    'roles' => $o[12],
                    'oauthAccounts' => $o[13],
                    'email' => $o[14],
                    'emailCanonical' => $o[15],
                    'createdAt' => $o[16],
                    'updatedAt' => $o[17],
                    'enabled' => $o[18],
                    'verified' => $o[19],
                    'userIdentifier' => $o[20],
                    'role' => $o[21],
                    'passwordRequestNonExpired' => $o[22],
                    'oAuthAccounts' => $o[23],
                ],
            ],
            'groups' => [
                6 => [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:update',
                ],
                11 => [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:update',
                ],
                18 => [
                    'sylius:admin:customer:create',
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:admin:customer:update',
                ],
                [
                    'sylius:admin:customer:index',
                    'sylius:admin:customer:show',
                    'sylius:shop:customer:show',
                ],
            ],
            'serializedName' => [
                11 => 'verified',
            ],
        ],
    ],
    $o[0],
    []
); } },
78 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                'id',
                'code',
                'name',
                'description',
                'rates',
                'createdAt',
                'updatedAt',
                'rate',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                    'description' => $o[4],
                    'rates' => $o[5],
                    'createdAt' => $o[6],
                    'updatedAt' => $o[7],
                    'rate' => $o[8],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                ],
                [
                    'sylius:admin:tax_category:create',
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                ],
                [
                    'sylius:admin:tax_category:create',
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                    'sylius:admin:tax_category:update',
                ],
                [
                    'sylius:admin:tax_category:create',
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                    'sylius:admin:tax_category:update',
                ],
                6 => [
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                ],
                [
                    'sylius:admin:tax_category:index',
                    'sylius:admin:tax_category:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
79 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxRate',
                'id',
                'code',
                'category',
                'name',
                'amount',
                'includedInPrice',
                'calculator',
                'startDate',
                'endDate',
                'createdAt',
                'updatedAt',
                'amountAsPercentage',
                'label',
                'zone',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'category' => $o[3],
                    'name' => $o[4],
                    'amount' => $o[5],
                    'includedInPrice' => $o[6],
                    'calculator' => $o[7],
                    'startDate' => $o[8],
                    'endDate' => $o[9],
                    'createdAt' => $o[10],
                    'updatedAt' => $o[11],
                    'amountAsPercentage' => $o[12],
                    'label' => $o[13],
                    'zone' => $o[14],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                ],
                [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                ],
                14 => [
                    'sylius:admin:tax_rate:index',
                    'sylius:admin:tax_rate:show',
                    'sylius:admin:tax_rate:create',
                    'sylius:admin:tax_rate:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
80 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Taxon',
                'images',
                'id',
                'code',
                'root',
                'parent',
                'children',
                'left',
                'right',
                'level',
                'position',
                'translations',
                'translationsCache',
                'currentLocale',
                'currentTranslation',
                'fallbackLocale',
                'enabled',
                'createdAt',
                'updatedAt',
                'image',
                'translationClass',
                'name',
                'slug',
                'description',
                'ancestors',
                'child',
                'enabledChildren',
                'fullname',
                'translation',
            ],
            'attributesMetadata' => [
                [
                    'images' => $o[1],
                    'id' => $o[2],
                    'code' => $o[3],
                    'root' => $o[4],
                    'parent' => $o[5],
                    'children' => $o[6],
                    'left' => $o[7],
                    'right' => $o[8],
                    'level' => $o[9],
                    'position' => $o[10],
                    'translations' => $o[11],
                    'translationsCache' => $o[12],
                    'currentLocale' => $o[13],
                    'currentTranslation' => $o[14],
                    'fallbackLocale' => $o[15],
                    'enabled' => $o[16],
                    'createdAt' => $o[17],
                    'updatedAt' => $o[18],
                    'image' => $o[19],
                    'translationClass' => $o[20],
                    'name' => $o[21],
                    'slug' => $o[22],
                    'description' => $o[23],
                    'ancestors' => $o[24],
                    'child' => $o[25],
                    'enabledChildren' => $o[26],
                    'fullname' => $o[27],
                    'translation' => $o[28],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                    'sylius:shop:taxon_tree:branch',
                    'sylius:shop:taxon_tree:path',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon:create',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                    'sylius:shop:taxon_tree:branch',
                    'sylius:shop:taxon_tree:path',
                ],
                5 => [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                    'sylius:shop:taxon_tree:branch',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
                9 => [
                    'sylius:shop:taxon_tree:branch',
                    'sylius:shop:taxon_tree:path',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon:update',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
                16 => [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
                21 => [
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                    'sylius:shop:taxon_tree:branch',
                    'sylius:shop:taxon_tree:path',
                ],
                [
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                    'sylius:shop:taxon_tree:branch',
                    'sylius:shop:taxon_tree:path',
                ],
                [
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
81 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxonImage',
                'id',
                'type',
                'file',
                'path',
                'owner',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'type' => $o[2],
                    'file' => $o[3],
                    'path' => $o[4],
                    'owner' => $o[5],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:taxon_image:index',
                    'sylius:admin:taxon_image:show',
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon_image:index',
                    'sylius:shop:taxon_image:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
                [
                    'sylius:admin:taxon_image:index',
                    'sylius:admin:taxon_image:show',
                    'sylius:admin:taxon_image:update',
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon_image:index',
                    'sylius:shop:taxon_image:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
                4 => [
                    'sylius:admin:taxon_image:index',
                    'sylius:admin:taxon_image:show',
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:shop:taxon_image:index',
                    'sylius:shop:taxon_image:show',
                    'sylius:shop:taxon:index',
                    'sylius:shop:taxon:show',
                ],
                [
                    'sylius:admin:taxon_image:index',
                    'sylius:admin:taxon_image:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
82 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                'id',
                'name',
                'slug',
                'description',
                'locale',
                'translatable',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'name' => $o[2],
                    'slug' => $o[3],
                    'description' => $o[4],
                    'locale' => $o[5],
                    'translatable' => $o[6],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon_translation:show',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon_translation:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon_translation:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
                [
                    'sylius:admin:taxon:index',
                    'sylius:admin:taxon:show',
                    'sylius:admin:taxon_translation:show',
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
                [
                    'sylius:admin:taxon:create',
                    'sylius:admin:taxon:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
83 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Zone',
                'id',
                'code',
                'name',
                'type',
                'scope',
                'members',
                'types',
                'member',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'name' => $o[3],
                    'type' => $o[4],
                    'scope' => $o[5],
                    'members' => $o[6],
                    'types' => $o[7],
                    'member' => $o[8],
                    'createdAt' => $o[9],
                    'updatedAt' => $o[10],
                ],
            ],
            'groups' => [
                1 => [
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
                [
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
                [
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                    'sylius:admin:zone:update',
                ],
                [
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
                [
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
                [
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                    'sylius:admin:zone:update',
                ],
                9 => [
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
                [
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
84 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                'id',
                'code',
                'belongsTo',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'code' => $o[2],
                    'belongsTo' => $o[3],
                ],
            ],
            'groups' => [
                2 => [
                    'sylius:admin:zone:index',
                    'sylius:admin:zone:show',
                    'sylius:admin:zone:create',
                    'sylius:admin:zone:update',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },

]];
