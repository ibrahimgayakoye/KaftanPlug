<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Symfony.Component.Form.FormInterface' => 2,
'Symfony.Component.Form.ClearableErrorsInterface' => 3,
'Traversable' => 4,
'Countable' => 5,
'ArrayAccess' => 6,
'Sylius.Component.Order.Model.Order' => 7,
'Sylius.Component.Order.Model.OrderInterface' => 8,
'Sylius.Resource.Model.TimestampableInterface' => 9,
'Sylius.Resource.Model.ResourceInterface' => 10,
'Sylius.Component.Order.Model.RecursiveAdjustmentsAwareInterface' => 11,
'Sylius.Component.Order.Model.AdjustableInterface' => 12,
'Sylius.Component.Order.Model.OrderItem' => 13,
'Sylius.Component.Order.Model.OrderItemInterface' => 14,
'Sylius.Component.Order.Model.OrderAwareInterface' => 15,
'Sylius.Component.Currency.Model.Currency' => 16,
'Sylius.Component.Currency.Model.CurrencyInterface' => 17,
'Stringable' => 18,
'Sylius.Resource.Model.CodeAwareInterface' => 19,
'Sylius.Component.Currency.Model.ExchangeRate' => 20,
'Sylius.Component.Currency.Model.ExchangeRateInterface' => 21,
'Sylius.Component.Locale.Model.Locale' => 22,
'Sylius.Component.Locale.Model.LocaleInterface' => 23,
'Sylius.Component.Product.Model.Product' => 24,
'Sylius.Component.Product.Model.ProductInterface' => 25,
'Sylius.Resource.Model.TranslatableInterface' => 26,
'Sylius.Resource.Model.ToggleableInterface' => 27,
'Sylius.Resource.Model.SlugAwareInterface' => 28,
'Sylius.Component.Attribute.Model.AttributeSubjectInterface' => 29,
'Sylius.Component.Product.Model.ProductAssociation' => 30,
'Sylius.Component.Product.Model.ProductAssociationInterface' => 31,
'Sylius.Component.Product.Model.ProductAssociationType' => 32,
'Sylius.Component.Product.Model.ProductAssociationTypeInterface' => 33,
'Sylius.Component.Product.Model.ProductAssociationTypeTranslation' => 34,
'Sylius.Resource.Model.AbstractTranslation' => 35,
'Sylius.Resource.Model.TranslationInterface' => 36,
'Sylius.Component.Product.Model.ProductAssociationTypeTranslationInterface' => 37,
'Sylius.Component.Product.Model.ProductOption' => 38,
'Sylius.Component.Product.Model.ProductOptionInterface' => 39,
'Sylius.Component.Product.Model.ProductOptionTranslation' => 40,
'Sylius.Component.Product.Model.ProductOptionTranslationInterface' => 41,
'Sylius.Component.Product.Model.ProductOptionValue' => 42,
'Sylius.Component.Product.Model.ProductOptionValueInterface' => 43,
'Sylius.Component.Product.Model.ProductOptionValueTranslation' => 44,
'Sylius.Component.Product.Model.ProductOptionValueTranslationInterface' => 45,
'Sylius.Component.Product.Model.ProductTranslation' => 46,
'Sylius.Component.Product.Model.ProductTranslationInterface' => 47,
'Sylius.Component.Product.Model.ProductVariant' => 48,
'Sylius.Component.Product.Model.ProductVariantInterface' => 49,
'Sylius.Component.Channel.Model.Channel' => 50,
'Sylius.Component.Channel.Model.ChannelInterface' => 51,
'Sylius.Component.Attribute.Model.Attribute' => 52,
'Sylius.Component.Attribute.Model.AttributeInterface' => 53,
'Sylius.Component.Attribute.Model.AttributeTranslation' => 54,
'Sylius.Component.Attribute.Model.AttributeTranslationInterface' => 55,
'Sylius.Component.Attribute.Model.AttributeValue' => 56,
'Sylius.Component.Attribute.Model.AttributeValueInterface' => 57,
'Sylius.Component.Taxation.Model.TaxCategory' => 58,
'Sylius.Component.Taxation.Model.TaxCategoryInterface' => 59,
'Sylius.Component.Taxation.Model.TaxRate' => 60,
'Sylius.Component.Taxation.Model.TaxRateInterface' => 61,
'Sylius.Component.Shipping.Model.Shipment' => 62,
'Sylius.Component.Shipping.Model.ShipmentInterface' => 63,
'Sylius.Component.Shipping.Model.ShippingSubjectInterface' => 64,
'Sylius.Component.Shipping.Model.ShippingCategory' => 65,
'Sylius.Component.Shipping.Model.ShippingCategoryInterface' => 66,
'Sylius.Component.Shipping.Model.ShippingMethod' => 67,
'Sylius.Component.Shipping.Model.ShippingMethodInterface' => 68,
'Sylius.Resource.Model.ArchivableInterface' => 69,
'Sylius.Component.Shipping.Model.ShippingMethodRule' => 70,
'Sylius.Component.Shipping.Model.ShippingMethodRuleInterface' => 71,
'Sylius.Component.Shipping.Model.ConfigurableShippingMethodElementInterface' => 72,
'Sylius.Component.Shipping.Model.ShippingMethodTranslation' => 73,
'Sylius.Component.Shipping.Model.ShippingMethodTranslationInterface' => 74,
'Sylius.Component.Payment.Model.GatewayConfig' => 75,
'Sylius.Component.Payment.Model.GatewayConfigInterface' => 76,
'Sylius.Component.Payment.Encryption.EncryptionAwareInterface' => 77,
'Sylius.Component.Payment.Model.Payment' => 78,
'Sylius.Component.Payment.Model.PaymentInterface' => 79,
'Sylius.Component.Payment.Model.PaymentMethod' => 80,
'Sylius.Component.Payment.Model.PaymentMethodInterface' => 81,
'Sylius.Component.Payment.Model.PaymentMethodTranslation' => 82,
'Sylius.Component.Payment.Model.PaymentMethodTranslationInterface' => 83,
'Sylius.Component.Promotion.Model.CatalogPromotion' => 84,
'Sylius.Component.Promotion.Model.CatalogPromotionInterface' => 85,
'Sylius.Component.Promotion.Model.CatalogPromotionAction' => 86,
'Sylius.Component.Promotion.Model.CatalogPromotionActionInterface' => 87,
'Sylius.Component.Promotion.Model.CatalogPromotionScope' => 88,
'Sylius.Component.Promotion.Model.CatalogPromotionScopeInterface' => 89,
'Sylius.Component.Promotion.Model.Promotion' => 90,
'Sylius.Component.Promotion.Model.PromotionInterface' => 91,
'Sylius.Component.Promotion.Model.PromotionAction' => 92,
'Sylius.Component.Promotion.Model.PromotionActionInterface' => 93,
'Sylius.Component.Promotion.Model.ConfigurablePromotionElementInterface' => 94,
'Sylius.Component.Promotion.Model.PromotionCoupon' => 95,
'Sylius.Component.Promotion.Model.PromotionCouponInterface' => 96,
'Sylius.Component.Promotion.Generator.PromotionCouponGeneratorInstruction' => 97,
'Sylius.Component.Promotion.Generator.ReadablePromotionCouponGeneratorInstructionInterface' => 98,
'Sylius.Component.Promotion.Model.PromotionRule' => 99,
'Sylius.Component.Promotion.Model.PromotionRuleInterface' => 100,
'Sylius.Component.Promotion.Model.PromotionTranslation' => 101,
'Sylius.Component.Promotion.Model.PromotionTranslationInterface' => 102,
'Sylius.Component.Addressing.Model.Address' => 103,
'Sylius.Component.Addressing.Model.AddressInterface' => 104,
'Sylius.Component.Addressing.Model.Country' => 105,
'Sylius.Component.Addressing.Model.CountryInterface' => 106,
'Sylius.Component.Addressing.Model.Province' => 107,
'Sylius.Component.Addressing.Model.ProvinceInterface' => 108,
'Sylius.Component.Addressing.Model.Zone' => 109,
'Sylius.Component.Addressing.Model.ZoneInterface' => 110,
'Sylius.Component.Addressing.Model.ZoneMember' => 111,
'Sylius.Component.Addressing.Model.ZoneMemberInterface' => 112,
'Sylius.Component.Taxonomy.Model.Taxon' => 113,
'Sylius.Component.Taxonomy.Model.TaxonInterface' => 114,
'Sylius.Component.Taxonomy.Model.TaxonTranslation' => 115,
'Sylius.Component.Taxonomy.Model.TaxonTranslationInterface' => 116,
'Sylius.Bundle.UserBundle.Form.Model.ChangePassword' => 117,
'Sylius.Bundle.UserBundle.Form.Model.PasswordReset' => 118,
'Sylius.Bundle.UserBundle.Form.Model.PasswordResetRequest' => 119,
'Sylius.Component.User.Model.User' => 120,
'Sylius.Component.User.Model.UserInterface' => 121,
'Symfony.Component.Security.Core.User.PasswordAuthenticatedUserInterface' => 122,
'Symfony.Component.Security.Core.User.UserInterface' => 123,
'Sylius.Component.User.Model.CredentialsHolderInterface' => 124,
'Sylius.Component.Customer.Model.Customer' => 125,
'Sylius.Component.Customer.Model.CustomerInterface' => 126,
'Sylius.Component.Customer.Model.CustomerGroup' => 127,
'Sylius.Component.Customer.Model.CustomerGroupInterface' => 128,
'Sylius.Component.Review.Model.Review' => 129,
'Sylius.Component.Review.Model.ReviewInterface' => 130,
'Sylius.Bundle.OrderBundle.Controller.AddToCartCommand' => 131,
'Sylius.Bundle.OrderBundle.Controller.AddToCartCommandInterface' => 132,
'Sylius.Component.Core.Model.AdminUser' => 133,
'Sylius.Component.Core.Model.AdminUserInterface' => 134,
'Symfony.Component.Security.Core.User.EquatableInterface' => 135,
'Sylius.Component.Core.Model.ImageAwareInterface' => 136,
'Sylius.Component.Core.Model.AvatarImage' => 137,
'Sylius.Component.Core.Model.Image' => 138,
'Sylius.Component.Core.Model.ImageInterface' => 139,
'Sylius.Component.Core.Model.AvatarImageInterface' => 140,
'Sylius.Component.Core.Model.CatalogPromotionScope' => 141,
'Sylius.Component.Core.Model.CatalogPromotionScopeInterface' => 142,
'Sylius.Component.Core.Model.Channel' => 143,
'Sylius.Component.Core.Model.ChannelInterface' => 144,
'Sylius.Component.Locale.Model.LocalesAwareInterface' => 145,
'Sylius.Component.Currency.Model.CurrenciesAwareInterface' => 146,
'Sylius.Component.Core.Model.ChannelPriceHistoryConfig' => 147,
'Sylius.Component.Core.Model.ChannelPriceHistoryConfigInterface' => 148,
'Sylius.Component.Core.Model.ChannelPricing' => 149,
'Sylius.Component.Core.Model.ChannelPricingInterface' => 150,
'Sylius.Component.Core.Model.Customer' => 151,
'Sylius.Component.Core.Model.CustomerInterface' => 152,
'Sylius.Component.Review.Model.ReviewerInterface' => 153,
'Sylius.Component.Core.Model.ProductReviewerInterface' => 154,
'Sylius.Component.User.Model.UserAwareInterface' => 155,
'Sylius.Component.Core.Model.Order' => 156,
'Sylius.Component.Core.Model.OrderInterface' => 157,
'Sylius.Component.Promotion.Model.PromotionSubjectInterface' => 158,
'Sylius.Component.Channel.Model.ChannelAwareInterface' => 159,
'Sylius.Component.Customer.Model.CustomerAwareInterface' => 160,
'Sylius.Component.Promotion.Model.PromotionCouponAwarePromotionSubjectInterface' => 161,
'Sylius.Component.Promotion.Model.CountablePromotionSubjectInterface' => 162,
'Sylius.Component.Payment.Model.PaymentsSubjectInterface' => 163,
'Sylius.Component.Core.Model.Payment' => 164,
'Sylius.Component.Core.Model.PaymentInterface' => 165,
'Sylius.Component.Core.Model.PaymentMethod' => 166,
'Sylius.Component.Core.Model.PaymentMethodInterface' => 167,
'Sylius.Component.Channel.Model.ChannelsAwareInterface' => 168,
'Sylius.Component.Core.Model.Product' => 169,
'Sylius.Component.Core.Model.ProductInterface' => 170,
'Sylius.Component.Core.Model.ReviewableProductInterface' => 171,
'Sylius.Component.Core.Model.ImagesAwareInterface' => 172,
'Sylius.Component.Review.Model.ReviewableInterface' => 173,
'Sylius.Component.Core.Model.ProductTaxonsAwareInterface' => 174,
'Sylius.Component.Core.Model.ProductImage' => 175,
'Sylius.Component.Core.Model.ProductImageInterface' => 176,
'Sylius.Component.Core.Model.PositionAwareInterface' => 177,
'Sylius.Component.Core.Model.ProductTaxon' => 178,
'Sylius.Component.Core.Model.ProductTaxonInterface' => 179,
'Sylius.Component.Core.Model.ProductVariant' => 180,
'Sylius.Component.Core.Model.ProductVariantInterface' => 181,
'Doctrine.Common.Comparable' => 182,
'Sylius.Component.Core.Model.ProductImagesAwareInterface' => 183,
'Sylius.Resource.Model.VersionedInterface' => 184,
'Sylius.Component.Taxation.Model.TaxableInterface' => 185,
'Sylius.Component.Inventory.Model.StockableInterface' => 186,
'Sylius.Component.Shipping.Model.ShippableInterface' => 187,
'Sylius.Component.Core.Model.PromotionCoupon' => 188,
'Sylius.Component.Core.Model.PromotionCouponInterface' => 189,
'Sylius.Bundle.CoreBundle.Command.Admin.Account.RequestResetPasswordEmail' => 190,
'Sylius.Bundle.CoreBundle.Command.ResendOrderConfirmationEmail' => 191,
'Sylius.Bundle.CoreBundle.Command.ResendShipmentConfirmationEmail' => 192,
'Sylius.Component.Core.Model.ShippingMethod' => 193,
'Sylius.Component.Core.Model.ShippingMethodInterface' => 194,
'Sylius.Component.Core.Model.TaxRate' => 195,
'Sylius.Component.Core.Model.TaxRateInterface' => 196,
'Sylius.Component.Core.Model.Taxon' => 197,
'Sylius.Component.Core.Model.TaxonInterface' => 198,
'Sylius.Component.Core.Model.TaxonImage' => 199,
'Sylius.Component.Core.Model.TaxonImageInterface' => 200,
'Payum.Core.Model.CreditCard' => 201,
'Payum.Core.Model.CreditCardInterface' => 202,
'Sylius.Bundle.AdminBundle.Form.Model.PasswordReset' => 203,
'Sylius.Bundle.AdminBundle.Form.Model.PasswordResetRequest' => 204,
'Sylius.Bundle.ApiBundle.Command.Account.ResetPassword' => 205,
'Sylius.Bundle.ApiBundle.Command.Cart.AddItemToCart' => 206,
'Sylius.Bundle.ApiBundle.Command.IriToIdentifierConversionAwareInterface' => 207,
'Sylius.Bundle.ApiBundle.Command.Payment.AddPaymentRequest' => 208,
'Sylius.Bundle.ApiBundle.Command.Catalog.AddProductReview' => 209,
'Sylius.Bundle.CoreBundle.Command.Admin.Account.ResetPassword' => 210,
'Sylius.Bundle.ApiBundle.Command.Cart.ChangeItemQuantityInCart' => 211,
'Sylius.Bundle.ApiBundle.Command.Account.ChangePaymentMethod' => 212,
'Sylius.Bundle.ApiBundle.Command.Account.ChangeShopUserPassword' => 213,
'Sylius.Bundle.ApiBundle.Command.Checkout.ChoosePaymentMethod' => 214,
'Sylius.Bundle.ApiBundle.Command.Checkout.ChooseShippingMethod' => 215,
'Sylius.Bundle.ApiBundle.Command.Checkout.CompleteOrder' => 216,
'Sylius.Bundle.ApiBundle.Command.Promotion.GeneratePromotionCoupon' => 217,
'Sylius.Component.Core.Model.OrderItem' => 218,
'Sylius.Component.Core.Model.OrderItemInterface' => 219,
'Sylius.Bundle.ApiBundle.Command.Account.RegisterShopUser' => 220,
'Sylius.Bundle.ApiBundle.Command.Account.RequestResetPasswordToken' => 221,
'Sylius.Bundle.ApiBundle.Command.Account.RequestShopUserVerification' => 222,
'Sylius.Bundle.ApiBundle.Command.SendContactRequest' => 223,
'Sylius.Bundle.ApiBundle.Command.Checkout.ShipShipment' => 224,
'Sylius.Component.Core.Model.ShopBillingData' => 225,
'Sylius.Component.Core.Model.ShopBillingDataInterface' => 226,
'Sylius.Bundle.ApiBundle.Command.Checkout.UpdateCart' => 227,
'Sylius.Bundle.ApiBundle.Command.Account.VerifyShopUser' => 228,
'Sylius.MolliePlugin.Entity.MollieGatewayConfig' => 229,
'Sylius.MolliePlugin.Model.PaymentMethod.AbstractMethod' => 230,
'Sylius.MolliePlugin.Model.PaymentMethod.MethodInterface' => 231,
'Sylius.MolliePlugin.Entity.MollieGatewayConfigInterface' => 232,
'Sylius.MolliePlugin.Entity.MollieGatewayConfigTranslation' => 233,
'Sylius.MolliePlugin.Entity.MollieGatewayConfigTranslationInterface' => 234,
'Sylius.MolliePlugin.Entity.TemplateMollieEmail' => 235,
'Sylius.MolliePlugin.Entity.TemplateMollieEmailInterface' => 236,
'Sylius.MolliePlugin.Entity.TemplateMollieEmailTranslation' => 237,
'Sylius.MolliePlugin.Entity.TemplateMollieEmailTranslationInterface' => 238,

], [

0 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'Default' => [
                        $o[1],
                    ],
                    'Form' => [
                        $o[1],
                    ],
                ],
            ],
            'traversalStrategy' => [
                2,
            ],
            'name' => [
                'Symfony\\Component\\Form\\Form',
            ],
            'defaultGroup' => [
                'Form',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'Default',
                    'Form',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
1 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'IteratorAggregate',
            ],
            'defaultGroup' => [
                'IteratorAggregate',
            ],
        ],
    ],
    $o[0],
    []
); } },
2 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Symfony\\Component\\Form\\FormInterface',
            ],
            'defaultGroup' => [
                'FormInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
3 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Symfony\\Component\\Form\\ClearableErrorsInterface',
            ],
            'defaultGroup' => [
                'ClearableErrorsInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
4 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Traversable',
            ],
            'defaultGroup' => [
                'Traversable',
            ],
        ],
    ],
    $o[0],
    []
); } },
5 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Countable',
            ],
            'defaultGroup' => [
                'Countable',
            ],
        ],
    ],
    $o[0],
    []
); } },
6 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'ArrayAccess',
            ],
            'defaultGroup' => [
                'ArrayAccess',
            ],
        ],
    ],
    $o[0],
    []
); } },
7 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\Order',
                'items',
            ],
            'defaultGroup' => [
                'Order',
            ],
            'members' => [
                [
                    'items' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'items' => $o[1],
                ],
            ],
            'cascadingStrategy' => [
                1 => 2,
            ],
            'traversalStrategy' => [
                1 => 1,
            ],
            'class' => [
                1 => 'Sylius\\Component\\Order\\Model\\Order',
            ],
            'property' => [
                1 => 'items',
            ],
        ],
    ],
    $o[0],
    []
); } },
8 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\OrderInterface',
            ],
            'defaultGroup' => [
                'OrderInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
9 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\TimestampableInterface',
            ],
            'defaultGroup' => [
                'TimestampableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
10 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\ResourceInterface',
            ],
            'defaultGroup' => [
                'ResourceInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
11 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\RecursiveAdjustmentsAwareInterface',
            ],
            'defaultGroup' => [
                'RecursiveAdjustmentsAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
12 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\AdjustableInterface',
            ],
            'defaultGroup' => [
                'AdjustableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
13 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStock'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStock')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
        clone $p['Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStock'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_checkout_complete' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Order\\Model\\OrderItem',
                2 => 'quantity',
                6 => 'getQuantity',
            ],
            'defaultGroup' => [
                'OrderItem',
            ],
            'members' => [
                [
                    'quantity' => [
                        $o[2],
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'quantity' => $o[2],
                ],
            ],
            'getters' => [
                [
                    'quantity' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
            ],
            'groups' => [
                1 => [
                    'sylius_checkout_complete',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
            ],
            'stockablePath' => [
                1 => 'variant',
                7 => 'variant',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Order\\Model\\OrderItem',
                6 => 'Sylius\\Component\\Order\\Model\\OrderItem',
            ],
            'property' => [
                2 => 'quantity',
                6 => 'quantity',
            ],
            'message' => [
                3 => 'sylius.order_item.quantity.not_blank',
                'sylius.order_item.quantity.integer',
            ],
            'type' => [
                4 => 'integer',
            ],
            'minMessage' => [
                5 => 'sylius.order_item.quantity.min',
            ],
            'min' => [
                5 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
14 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\OrderItemInterface',
            ],
            'defaultGroup' => [
                'OrderItemInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
15 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Order\\Model\\OrderAwareInterface',
            ],
            'defaultGroup' => [
                'OrderAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
16 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Currency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Currency')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Currency\\Model\\Currency',
                2 => 'code',
            ],
            'defaultGroup' => [
                'Currency',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.currency.code.unique',
                3 => 'sylius.currency.code.not_blank',
                'sylius.currency.code.currency',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Currency\\Model\\Currency',
            ],
            'property' => [
                2 => 'code',
            ],
        ],
    ],
    $o[0],
    []
); } },
17 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Currency\\Model\\CurrencyInterface',
            ],
            'defaultGroup' => [
                'CurrencyInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
18 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Stringable',
            ],
            'defaultGroup' => [
                'Stringable',
            ],
        ],
    ],
    $o[0],
    []
); } },
19 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\CodeAwareInterface',
            ],
            'defaultGroup' => [
                'CodeAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
20 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\UniqueCurrencyPair'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\UniqueCurrencyPair')),
        clone ($p['Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\DifferentSourceTargetCurrency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\DifferentSourceTargetCurrency')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\LessThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\LessThan')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                3 => 'ratio',
                7 => 'sourceCurrency',
                9 => 'targetCurrency',
            ],
            'defaultGroup' => [
                'ExchangeRate',
            ],
            'members' => [
                [
                    'ratio' => [
                        $o[3],
                    ],
                    'sourceCurrency' => [
                        $o[7],
                    ],
                    'targetCurrency' => [
                        $o[9],
                    ],
                ],
            ],
            'properties' => [
                [
                    'ratio' => $o[3],
                    'sourceCurrency' => $o[7],
                    'targetCurrency' => $o[9],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                8 => null,
                10 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                7 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                9 => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
            ],
            'property' => [
                3 => 'ratio',
                7 => 'sourceCurrency',
                9 => 'targetCurrency',
            ],
            'message' => [
                4 => 'sylius.exchange_rate.ratio.not_blank',
                'sylius.exchange_rate.ratio.greater_than',
                'sylius.exchange_rate.ratio.less_than',
                8 => 'sylius.exchange_rate.source_currency.not_blank',
                10 => 'sylius.exchange_rate.target_currency.not_blank',
            ],
            'value' => [
                5 => 0,
                100000,
            ],
        ],
    ],
    $o[0],
    []
); } },
21 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Currency\\Model\\ExchangeRateInterface',
            ],
            'defaultGroup' => [
                'ExchangeRateInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
22 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Sequentially'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Sequentially')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Locale'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Locale')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Locale\\Model\\Locale',
                2 => 'code',
            ],
            'defaultGroup' => [
                'Locale',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.locale.code.unique',
                3 => 'sylius.locale.code.not_blank',
                6 => 'sylius.locale.code.locale',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Locale\\Model\\Locale',
            ],
            'property' => [
                2 => 'code',
            ],
            'maxMessage' => [
                5 => 'sylius.locale.code.max_length',
            ],
            'max' => [
                5 => 10,
            ],
        ],
    ],
    $o[0],
    []
); } },
23 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Locale\\Model\\LocaleInterface',
            ],
            'defaultGroup' => [
                'LocaleInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
24 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\UniqueSimpleProductCode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\UniqueSimpleProductCode')),
        clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
        clone ($p['Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                9 => [
                    $o[10],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\Product',
                3 => 'code',
                7 => 'attributes',
                'translations',
                'getVariants',
            ],
            'defaultGroup' => [
                'Product',
            ],
            'members' => [
                [
                    'code' => [
                        $o[3],
                    ],
                    'attributes' => [
                        $o[7],
                    ],
                    'translations' => [
                        $o[8],
                    ],
                    'variants' => [
                        $o[9],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[3],
                    'attributes' => $o[7],
                    'translations' => $o[8],
                ],
            ],
            'getters' => [
                [
                    'variants' => $o[9],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                10 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.product.code.unique',
                4 => 'sylius.product.code.not_blank',
                'sylius.product.code.regex',
                10 => 'sylius.product_variant.code.within_product_unique',
            ],
            'fields' => [
                2 => 'code',
            ],
            'class' => [
                3 => 'Sylius\\Component\\Product\\Model\\Product',
                7 => 'Sylius\\Component\\Product\\Model\\Product',
                'Sylius\\Component\\Product\\Model\\Product',
                'Sylius\\Component\\Product\\Model\\Product',
            ],
            'property' => [
                3 => 'code',
                7 => 'attributes',
                'translations',
                'variants',
            ],
            'pattern' => [
                5 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                6 => 'sylius.product.code.max_length',
            ],
            'max' => [
                6 => 255,
            ],
            'cascadingStrategy' => [
                7 => 2,
                2,
            ],
            'traversalStrategy' => [
                7 => 1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
25 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductInterface',
            ],
            'defaultGroup' => [
                'ProductInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
26 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TranslationForExistingLocales'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TranslationForExistingLocales')),
        ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Resource\\Model\\TranslatableInterface',
                2 => 'getTranslations',
            ],
            'defaultGroup' => [
                'TranslatableInterface',
            ],
            'members' => [
                [
                    'translations' => [
                        $o[2],
                    ],
                ],
            ],
            'getters' => [
                [
                    'translations' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
            'cascadingStrategy' => [
                2 => 2,
            ],
            'traversalStrategy' => [
                2 => 1,
            ],
            'class' => [
                2 => 'Sylius\\Resource\\Model\\TranslatableInterface',
            ],
            'property' => [
                2 => 'translations',
            ],
        ],
    ],
    $o[0],
    []
); } },
27 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\ToggleableInterface',
            ],
            'defaultGroup' => [
                'ToggleableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
28 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\SlugAwareInterface',
            ],
            'defaultGroup' => [
                'SlugAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
29 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeSubjectInterface',
            ],
            'defaultGroup' => [
                'AttributeSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
30 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
                4 => [
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociation',
                2 => 'type',
                4 => 'owner',
            ],
            'defaultGroup' => [
                'ProductAssociation',
            ],
            'members' => [
                [
                    'type' => [
                        $o[2],
                    ],
                    'owner' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'type' => $o[2],
                    'owner' => $o[4],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                5 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.association.unique',
                3 => 'sylius.association.type.not_blank',
                5 => 'sylius.association.owner.not_blank',
            ],
            'fields' => [
                1 => [
                    'owner',
                    'type',
                ],
            ],
            'errorPath' => [
                1 => 'owner',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Product\\Model\\ProductAssociation',
                4 => 'Sylius\\Component\\Product\\Model\\ProductAssociation',
            ],
            'property' => [
                2 => 'type',
                4 => 'owner',
            ],
        ],
    ],
    $o[0],
    []
); } },
31 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationInterface',
            ],
            'defaultGroup' => [
                'ProductAssociationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
32 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                2 => 'code',
                6 => 'translations',
            ],
            'defaultGroup' => [
                'ProductAssociationType',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'translations' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'translations' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.association_type.code.unique',
                3 => 'sylius.association_type.code.not_blank',
                5 => 'sylius.association_type.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                6 => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
            ],
            'property' => [
                2 => 'code',
                6 => 'translations',
            ],
            'maxMessage' => [
                4 => 'sylius.association_type.code.max_length',
            ],
            'minMessage' => [
                4 => 'sylius.association_type.code.min_length',
            ],
            'max' => [
                4 => 255,
            ],
            'min' => [
                4 => 2,
            ],
            'pattern' => [
                5 => '/^[\\w-]*$/',
            ],
            'cascadingStrategy' => [
                6 => 2,
            ],
            'traversalStrategy' => [
                6 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
33 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationTypeInterface',
            ],
            'defaultGroup' => [
                'ProductAssociationTypeInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
34 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                'name',
            ],
            'defaultGroup' => [
                'ProductAssociationTypeTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.association_type.name.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.association_type.name.max_length',
            ],
            'minMessage' => [
                3 => 'sylius.association_type.name.min_length',
            ],
            'max' => [
                3 => 255,
            ],
            'min' => [
                3 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
35 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Locale'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Locale')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Resource\\Model\\AbstractTranslation',
                2 => 'locale',
            ],
            'defaultGroup' => [
                'AbstractTranslation',
            ],
            'members' => [
                [
                    'locale' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'locale' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.resource.translation.locale.unique',
                3 => 'sylius.resource.translation.locale.not_blank',
                'sylius.resource.translation.locale.invalid',
            ],
            'fields' => [
                1 => [
                    'locale',
                    'translatable',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Resource\\Model\\AbstractTranslation',
            ],
            'property' => [
                2 => 'locale',
            ],
        ],
    ],
    $o[0],
    []
); } },
36 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\TranslationInterface',
            ],
            'defaultGroup' => [
                'TranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
37 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface',
            ],
            'defaultGroup' => [
                'ProductAssociationTypeTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
38 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOption',
                2 => 'code',
                6 => 'values',
                'translations',
            ],
            'defaultGroup' => [
                'ProductOption',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'values' => [
                        $o[6],
                    ],
                    'translations' => [
                        $o[7],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'values' => $o[6],
                    'translations' => $o[7],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.option.code.unique',
                3 => 'sylius.option.code.not_blank',
                'sylius.option.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Product\\Model\\ProductOption',
                6 => 'Sylius\\Component\\Product\\Model\\ProductOption',
                'Sylius\\Component\\Product\\Model\\ProductOption',
            ],
            'property' => [
                2 => 'code',
                6 => 'values',
                'translations',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.option.code.max_length',
            ],
            'max' => [
                5 => 255,
            ],
            'cascadingStrategy' => [
                6 => 2,
                2,
            ],
            'traversalStrategy' => [
                6 => 1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
39 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionInterface',
            ],
            'defaultGroup' => [
                'ProductOptionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
40 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                'name',
            ],
            'defaultGroup' => [
                'ProductOptionTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.option.name.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.option.name.max_length',
            ],
            'minMessage' => [
                3 => 'sylius.option.name.min_length',
            ],
            'max' => [
                3 => 255,
            ],
            'min' => [
                3 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
41 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface',
            ],
            'defaultGroup' => [
                'ProductOptionTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
42 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                2 => 'code',
                6 => 'translations',
            ],
            'defaultGroup' => [
                'ProductOptionValue',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'translations' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'translations' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.option_value.code.unique',
                3 => 'sylius.option_value.code.not_blank',
                'sylius.option_value.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                6 => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
            ],
            'property' => [
                2 => 'code',
                6 => 'translations',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.option_value.code.max_length',
            ],
            'max' => [
                5 => 255,
            ],
            'cascadingStrategy' => [
                6 => 2,
            ],
            'traversalStrategy' => [
                6 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
43 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValueInterface',
            ],
            'defaultGroup' => [
                'ProductOptionValueInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
44 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                'value',
            ],
            'defaultGroup' => [
                'ProductOptionValueTranslation',
            ],
            'members' => [
                [
                    'value' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'value' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
            ],
            'property' => [
                1 => 'value',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.option_value.value.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
45 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface',
            ],
            'defaultGroup' => [
                'ProductOptionValueTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
46 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                    $o[11],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                        $o[11],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductTranslation',
                2 => 'name',
                5 => 'metaKeywords',
                7 => 'metaDescription',
                9 => 'slug',
            ],
            'defaultGroup' => [
                'ProductTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[2],
                    ],
                    'metaKeywords' => [
                        $o[5],
                    ],
                    'metaDescription' => [
                        $o[7],
                    ],
                    'slug' => [
                        $o[9],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[2],
                    'metaKeywords' => $o[5],
                    'metaDescription' => $o[7],
                    'slug' => $o[9],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                8 => null,
                10 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.product.slug.unique',
                3 => 'sylius.product.name.not_blank',
                10 => 'sylius.product.slug.not_blank',
            ],
            'fields' => [
                1 => [
                    'locale',
                    'slug',
                ],
            ],
            'errorPath' => [
                1 => 'slug',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
                5 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
                7 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
                9 => 'Sylius\\Component\\Product\\Model\\ProductTranslation',
            ],
            'property' => [
                2 => 'name',
                5 => 'metaKeywords',
                7 => 'metaDescription',
                9 => 'slug',
            ],
            'maxMessage' => [
                4 => 'sylius.product.name.max_length',
                6 => 'sylius.product.meta_keywords.max_length',
                8 => 'sylius.product.meta_description.max_length',
                11 => 'sylius.product.slug.max_length',
            ],
            'minMessage' => [
                4 => 'sylius.product.name.min_length',
            ],
            'max' => [
                4 => 255,
                6 => 255,
                8 => 255,
                11 => 255,
            ],
            'min' => [
                4 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
47 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductTranslationInterface',
            ],
            'defaultGroup' => [
                'ProductTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
48 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone ($p['Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantCombination'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantCombination')),
        clone ($p['Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantOptionValuesConfiguration'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantOptionValuesConfiguration')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                        $o[6],
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductVariant',
                4 => 'code',
                8 => 'product',
                10 => 'translations',
            ],
            'defaultGroup' => [
                'ProductVariant',
            ],
            'members' => [
                [
                    'code' => [
                        $o[4],
                    ],
                    'product' => [
                        $o[8],
                    ],
                    'translations' => [
                        $o[10],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[4],
                    'product' => $o[8],
                    'translations' => $o[10],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                null,
                5 => null,
                null,
                null,
                9 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.product_variant.code.unique',
                5 => 'sylius.product_variant.code.not_blank',
                'sylius.product_variant.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                4 => 'Sylius\\Component\\Product\\Model\\ProductVariant',
                8 => 'Sylius\\Component\\Product\\Model\\ProductVariant',
                10 => 'Sylius\\Component\\Product\\Model\\ProductVariant',
            ],
            'property' => [
                4 => 'code',
                8 => 'product',
                10 => 'translations',
            ],
            'pattern' => [
                6 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                7 => 'sylius.product_variant.code.max_length',
            ],
            'max' => [
                7 => 255,
            ],
            'cascadingStrategy' => [
                10 => 2,
            ],
            'traversalStrategy' => [
                10 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
49 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Product\\Model\\ProductVariantInterface',
            ],
            'defaultGroup' => [
                'ProductVariantInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
50 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Channel\\Model\\Channel',
                2 => 'code',
                6 => 'name',
                9 => 'color',
                11 => 'hostname',
            ],
            'defaultGroup' => [
                'Channel',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                    'color' => [
                        $o[9],
                    ],
                    'hostname' => [
                        $o[11],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                    'color' => $o[9],
                    'hostname' => $o[11],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
                10 => null,
                12 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.channel.code.unique',
                3 => 'sylius.channel.code.not_blank',
                'sylius.channel.code.regex',
                7 => 'sylius.channel.name.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Channel\\Model\\Channel',
                6 => 'Sylius\\Component\\Channel\\Model\\Channel',
                9 => 'Sylius\\Component\\Channel\\Model\\Channel',
                11 => 'Sylius\\Component\\Channel\\Model\\Channel',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
                9 => 'color',
                11 => 'hostname',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.channel.code.max_length',
                8 => 'sylius.channel.name.max_length',
                10 => 'sylius.channel.color.max_length',
                12 => 'sylius.channel.hostname.max_length',
            ],
            'max' => [
                5 => 255,
                8 => 255,
                10 => 255,
                12 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
51 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Channel\\Model\\ChannelInterface',
            ],
            'defaultGroup' => [
                'ChannelInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
52 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidTextAttributeConfiguration'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidTextAttributeConfiguration')),
        clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidSelectAttributeConfiguration'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidSelectAttributeConfiguration')),
        clone ($p['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\AttributeType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\AttributeType')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\Attribute',
                5 => 'code',
                9 => 'translations',
            ],
            'defaultGroup' => [
                'Attribute',
            ],
            'members' => [
                [
                    'code' => [
                        $o[5],
                    ],
                    'translations' => [
                        $o[9],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[5],
                    'translations' => $o[9],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                null,
                null,
                6 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.attribute.code.unique',
                6 => 'sylius.attribute.code.not_blank',
                8 => 'sylius.attribute.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                5 => 'Sylius\\Component\\Attribute\\Model\\Attribute',
                9 => 'Sylius\\Component\\Attribute\\Model\\Attribute',
            ],
            'property' => [
                5 => 'code',
                9 => 'translations',
            ],
            'maxMessage' => [
                7 => 'sylius.attribute.code.max_length',
            ],
            'minMessage' => [
                7 => 'sylius.attribute.code.min_length',
            ],
            'max' => [
                7 => 255,
            ],
            'min' => [
                7 => 1,
            ],
            'pattern' => [
                8 => '/^[\\w-]*$/',
            ],
            'cascadingStrategy' => [
                9 => 2,
            ],
            'traversalStrategy' => [
                9 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
53 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeInterface',
            ],
            'defaultGroup' => [
                'AttributeInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
54 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeTranslation',
                'name',
            ],
            'defaultGroup' => [
                'AttributeTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Attribute\\Model\\AttributeTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.attribute.name.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.attribute.name.max_length',
            ],
            'minMessage' => [
                3 => 'sylius.attribute.name.min_length',
            ],
            'max' => [
                3 => 255,
            ],
            'min' => [
                3 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
55 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeTranslationInterface',
            ],
            'defaultGroup' => [
                'AttributeTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
56 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidAttributeValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidAttributeValue')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeValue',
                2 => 'attribute',
            ],
            'defaultGroup' => [
                'AttributeValue',
            ],
            'members' => [
                [
                    'attribute' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'attribute' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Attribute\\Model\\AttributeValue',
            ],
            'property' => [
                2 => 'attribute',
            ],
            'message' => [
                3 => 'sylius.attribute_value.attribute.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
57 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\AttributeValueInterface',
            ],
            'defaultGroup' => [
                'AttributeValueInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
58 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                2 => 'code',
                6 => 'name',
            ],
            'defaultGroup' => [
                'TaxCategory',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.tax_category.code.unique',
                3 => 'sylius.tax_category.code.not_blank',
                'sylius.tax_category.code.regex',
                7 => 'sylius.tax_category.name.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                6 => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.tax_category.code.max_length',
                8 => 'sylius.tax_category.name.max_length',
            ],
            'max' => [
                5 => 255,
                8 => 255,
            ],
            'minMessage' => [
                8 => 'sylius.tax_category.name.min_length',
            ],
            'min' => [
                8 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
59 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxCategoryInterface',
            ],
            'defaultGroup' => [
                'TaxCategoryInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
60 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\PositiveOrZero'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\PositiveOrZero')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                    $o[13],
                ],
                14 => [
                    $o[15],
                ],
                16 => [
                    $o[17],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                        $o[13],
                    ],
                ],
                14 => [
                    'sylius' => [
                        $o[15],
                    ],
                ],
                16 => [
                    'sylius' => [
                        $o[17],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxRate',
                2 => 'code',
                6 => 'name',
                9 => 'category',
                11 => 'amount',
                14 => 'calculator',
                16 => 'endDate',
            ],
            'defaultGroup' => [
                'TaxRate',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                    'category' => [
                        $o[9],
                    ],
                    'amount' => [
                        $o[11],
                    ],
                    'calculator' => [
                        $o[14],
                    ],
                    'endDate' => [
                        $o[16],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                    'category' => $o[9],
                    'amount' => $o[11],
                    'calculator' => $o[14],
                    'endDate' => $o[16],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
                10 => null,
                12 => null,
                null,
                15 => null,
                17 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                15 => [
                    'sylius',
                ],
                17 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.tax_rate.code.unique',
                3 => 'sylius.tax_rate.code.not_blank',
                'sylius.tax_rate.code.regex',
                7 => 'sylius.tax_rate.name.not_blank',
                10 => 'sylius.tax_rate.category.not_blank',
                12 => 'sylius.tax_rate.amount.not_blank',
                'sylius.tax_rate.amount.invalid',
                15 => 'sylius.tax_rate.calculator.not_blank',
                17 => 'sylius.tax_rate.date.greater_than_start_date',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                6 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                9 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                11 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                14 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
                16 => 'Sylius\\Component\\Taxation\\Model\\TaxRate',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
                9 => 'category',
                11 => 'amount',
                14 => 'calculator',
                16 => 'endDate',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.tax_rate.code.max_length',
                8 => 'sylius.tax_rate.name.max_length',
            ],
            'max' => [
                5 => 255,
                8 => 255,
            ],
            'minMessage' => [
                8 => 'sylius.tax_rate.name.min_length',
            ],
            'min' => [
                8 => 2,
            ],
            'value' => [
                13 => 0,
            ],
            'propertyPath' => [
                17 => 'startDate',
            ],
        ],
    ],
    $o[0],
    []
); } },
61 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxRateInterface',
            ],
            'defaultGroup' => [
                'TaxRateInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
62 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\Shipment',
                'state',
                3 => 'method',
            ],
            'defaultGroup' => [
                'Shipment',
            ],
            'members' => [
                [
                    'state' => [
                        $o[1],
                    ],
                    'method' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'state' => $o[1],
                    'method' => $o[3],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Shipping\\Model\\Shipment',
                3 => 'Sylius\\Component\\Shipping\\Model\\Shipment',
            ],
            'property' => [
                1 => 'state',
                3 => 'method',
            ],
            'payload' => [
                2 => null,
                4 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.shipment.state.not_blank',
                4 => 'sylius.shipment.shipping_method.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
63 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShipmentInterface',
            ],
            'defaultGroup' => [
                'ShipmentInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
64 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingSubjectInterface',
            ],
            'defaultGroup' => [
                'ShippingSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
65 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                2 => 'code',
                6 => 'name',
            ],
            'defaultGroup' => [
                'ShippingCategory',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.shipping_category.code.unique',
                3 => 'sylius.shipping_category.code.not_blank',
                'sylius.shipping_category.code.regex',
                7 => 'sylius.shipping_category.name.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                6 => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.shipping_category.code.max_length',
                8 => 'sylius.shipping_category.name.max_length',
            ],
            'max' => [
                5 => 255,
                8 => 255,
            ],
            'minMessage' => [
                8 => 'sylius.shipping_category.name.min_length',
            ],
            'min' => [
                8 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
66 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingCategoryInterface',
            ],
            'defaultGroup' => [
                'ShippingCategoryInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
67 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\ShippingBundle\\Validator\\Constraint\\ShippingMethodCalculatorExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ShippingBundle\\Validator\\Constraint\\ShippingMethodCalculatorExists')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                2 => 'code',
                6 => 'calculator',
                9 => 'rules',
                'translations',
            ],
            'defaultGroup' => [
                'ShippingMethod',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'calculator' => [
                        $o[6],
                    ],
                    'rules' => [
                        $o[9],
                    ],
                    'translations' => [
                        $o[10],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'calculator' => $o[6],
                    'rules' => $o[9],
                    'translations' => $o[10],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.shipping_method.code.unique',
                3 => 'sylius.shipping_method.code.not_blank',
                'sylius.shipping_method.code.regex',
                7 => 'sylius.shipping_method.calculator.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                6 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                9 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
                'Sylius\\Component\\Shipping\\Model\\ShippingMethod',
            ],
            'property' => [
                2 => 'code',
                6 => 'calculator',
                9 => 'rules',
                'translations',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.shipping_method.code.max_length',
            ],
            'max' => [
                5 => 255,
            ],
            'cascadingStrategy' => [
                9 => 2,
                2,
            ],
            'traversalStrategy' => [
                9 => 1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
68 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodInterface',
            ],
            'defaultGroup' => [
                'ShippingMethodInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
69 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\ArchivableInterface',
            ],
            'defaultGroup' => [
                'ArchivableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
70 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ShippingBundle\\Validator\\Constraint\\ShippingMethodRule'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ShippingBundle\\Validator\\Constraint\\ShippingMethodRule')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[7],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius_shipping_method_rule_total_weight' => [
                        $o[3],
                    ],
                    'sylius_shipping_method_rule_order_total' => [
                        $o[7],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodRule',
                2 => 'configuration',
            ],
            'defaultGroup' => [
                'ShippingMethodRule',
            ],
            'members' => [
                [
                    'configuration' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'configuration' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius_shipping_method_rule_total_weight',
                ],
                [
                    'sylius_shipping_method_rule_total_weight',
                ],
                [
                    'sylius_shipping_method_rule_total_weight',
                ],
                [
                    'sylius_shipping_method_rule_total_weight',
                ],
                [
                    'sylius_shipping_method_rule_order_total',
                ],
                [
                    'sylius_shipping_method_rule_order_total',
                ],
                [
                    'sylius_shipping_method_rule_order_total',
                ],
                [
                    'sylius_shipping_method_rule_order_total',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodRule',
            ],
            'property' => [
                2 => 'configuration',
            ],
            'fields' => [
                3 => [
                    'weight' => $o[4],
                ],
                8 => [
                    'amount' => $o[9],
                ],
            ],
            'allowExtraFields' => [
                3 => true,
                7 => true,
            ],
            'type' => [
                6 => 'numeric',
                10 => 'numeric',
            ],
            'channelAwarePropertyPath' => [
                7 => 'shippingMethod',
            ],
            'validateAgainstAllChannels' => [
                7 => true,
            ],
        ],
    ],
    $o[0],
    []
); } },
71 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodRuleInterface',
            ],
            'defaultGroup' => [
                'ShippingMethodRuleInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
72 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ConfigurableShippingMethodElementInterface',
            ],
            'defaultGroup' => [
                'ConfigurableShippingMethodElementInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
73 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                'name',
            ],
            'defaultGroup' => [
                'ShippingMethodTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.shipping_method.name.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.shipping_method.name.max_length',
            ],
            'minMessage' => [
                3 => 'sylius.shipping_method.name.min_length',
            ],
            'max' => [
                3 => 255,
            ],
            'min' => [
                3 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
74 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface',
            ],
            'defaultGroup' => [
                'ShippingMethodTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
75 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\PaymentBundle\\Validator\\Constraints\\GatewayFactoryExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PaymentBundle\\Validator\\Constraints\\GatewayFactoryExists')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\GatewayConfig',
                'gatewayName',
                3 => 'factoryName',
            ],
            'defaultGroup' => [
                'GatewayConfig',
            ],
            'members' => [
                [
                    'gatewayName' => [
                        $o[1],
                    ],
                    'factoryName' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'gatewayName' => $o[1],
                    'factoryName' => $o[3],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Payment\\Model\\GatewayConfig',
                3 => 'Sylius\\Component\\Payment\\Model\\GatewayConfig',
            ],
            'property' => [
                1 => 'gatewayName',
                3 => 'factoryName',
            ],
            'payload' => [
                2 => null,
                4 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.gateway_config.gateway_name.not_blank',
                4 => 'sylius.gateway_config.factory_name.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
76 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\GatewayConfigInterface',
            ],
            'defaultGroup' => [
                'GatewayConfigInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
77 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Encryption\\EncryptionAwareInterface',
            ],
            'defaultGroup' => [
                'EncryptionAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
78 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Currency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Currency')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\Payment',
                'currencyCode',
                3 => 'method',
            ],
            'defaultGroup' => [
                'Payment',
            ],
            'members' => [
                [
                    'currencyCode' => [
                        $o[1],
                    ],
                    'method' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'currencyCode' => $o[1],
                    'method' => $o[3],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'Default' => [
                        $o[2],
                    ],
                    'Payment' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Payment\\Model\\Payment',
                3 => 'Sylius\\Component\\Payment\\Model\\Payment',
            ],
            'property' => [
                1 => 'currencyCode',
                3 => 'method',
            ],
            'payload' => [
                2 => null,
                4 => null,
            ],
            'groups' => [
                2 => [
                    'Default',
                    'Payment',
                ],
                4 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.payment.currency_code.not_valid',
                4 => 'sylius.payment.method.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
79 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentInterface',
            ],
            'defaultGroup' => [
                'PaymentInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
80 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentMethod',
                2 => 'code',
                6 => 'translations',
            ],
            'defaultGroup' => [
                'PaymentMethod',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'translations' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'translations' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.payment_method.code.unique',
                3 => 'sylius.payment_method.code.not_blank',
                'sylius.payment_method.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Payment\\Model\\PaymentMethod',
                6 => 'Sylius\\Component\\Payment\\Model\\PaymentMethod',
            ],
            'property' => [
                2 => 'code',
                6 => 'translations',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.payment_method.code.max_length',
            ],
            'max' => [
                5 => 255,
            ],
            'cascadingStrategy' => [
                6 => 2,
            ],
            'traversalStrategy' => [
                6 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
81 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentMethodInterface',
            ],
            'defaultGroup' => [
                'PaymentMethodInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
82 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                'name',
            ],
            'defaultGroup' => [
                'PaymentMethodTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.payment_method.name.not_blank',
            ],
            'minMessage' => [
                3 => 'sylius.payment_method.name.max_length',
            ],
            'max' => [
                3 => 255,
            ],
            'min' => [
                3 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
83 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface',
            ],
            'defaultGroup' => [
                'PaymentMethodTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
84 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotEqualTo'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotEqualTo')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                2 => 'code',
                6 => 'name',
                9 => 'endDate',
                11 => 'state',
                13 => 'actions',
                'scopes',
                'translations',
            ],
            'defaultGroup' => [
                'CatalogPromotion',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                    'endDate' => [
                        $o[9],
                    ],
                    'state' => [
                        $o[11],
                    ],
                    'actions' => [
                        $o[13],
                    ],
                    'scopes' => [
                        $o[14],
                    ],
                    'translations' => [
                        $o[15],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                    'endDate' => $o[9],
                    'state' => $o[11],
                    'actions' => $o[13],
                    'scopes' => $o[14],
                    'translations' => $o[15],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
                10 => null,
                12 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.catalog_promotion.code.unique',
                3 => 'sylius.catalog_promotion.code.not_blank',
                'sylius.catalog_promotion.code.regex',
                7 => 'sylius.catalog_promotion.name.not_blank',
                10 => 'sylius.catalog_promotion.date.greater_than_start_date',
                12 => 'sylius.catalog_promotion.state.processing',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                6 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                9 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                11 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                13 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
                9 => 'endDate',
                11 => 'state',
                13 => 'actions',
                'scopes',
                'translations',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.catalog_promotion.code.max_length',
                8 => 'sylius.catalog_promotion.name.max_length',
            ],
            'max' => [
                5 => 255,
                8 => 255,
            ],
            'minMessage' => [
                8 => 'sylius.catalog_promotion.name.min_length',
            ],
            'min' => [
                8 => 2,
            ],
            'propertyPath' => [
                10 => 'startDate',
            ],
            'value' => [
                12 => 'processing',
            ],
            'cascadingStrategy' => [
                13 => 2,
                2,
                2,
            ],
            'traversalStrategy' => [
                13 => 1,
                1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
85 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionInterface',
            ],
            'defaultGroup' => [
                'CatalogPromotionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
86 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionActionType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionActionType')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionActionGroup'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionActionGroup')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[11],
                ],
                7 => [
                    $o[8],
                    $o[9],
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
                13 => [
                    $o[14],
                    $o[15],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius_catalog_promotion_action_percentage_discount' => [
                        $o[6],
                    ],
                    'sylius_catalog_promotion_action_fixed_discount' => [
                        $o[11],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionAction',
                3 => 'type',
                5 => 'configuration',
            ],
            'defaultGroup' => [
                'CatalogPromotionAction',
            ],
            'members' => [
                [
                    'type' => [
                        $o[3],
                    ],
                    'configuration' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'type' => $o[3],
                    'configuration' => $o[5],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                6 => null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                6 => [
                    'sylius_catalog_promotion_action_percentage_discount',
                ],
                [
                    'sylius_catalog_promotion_action_percentage_discount',
                ],
                [
                    'sylius_catalog_promotion_action_percentage_discount',
                ],
                [
                    'sylius_catalog_promotion_action_percentage_discount',
                ],
                [
                    'sylius_catalog_promotion_action_percentage_discount',
                ],
                [
                    'sylius_catalog_promotion_action_fixed_discount',
                ],
                [
                    'sylius_catalog_promotion_action_fixed_discount',
                ],
                [
                    'sylius_catalog_promotion_action_fixed_discount',
                ],
                [
                    'sylius_catalog_promotion_action_fixed_discount',
                ],
                [
                    'sylius_catalog_promotion_action_fixed_discount',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotionAction',
                5 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotionAction',
            ],
            'property' => [
                3 => 'type',
                5 => 'configuration',
            ],
            'message' => [
                4 => 'sylius.catalog_promotion_action.type.not_blank',
                8 => 'sylius.catalog_promotion_action.percentage_discount.not_number_or_empty',
                'sylius.catalog_promotion_action.percentage_discount.not_number_or_empty',
                14 => 'sylius.catalog_promotion_action.fixed_discount.not_valid',
                'sylius.catalog_promotion_action.fixed_discount.not_valid',
            ],
            'fields' => [
                6 => [
                    'amount' => $o[7],
                ],
                12 => [
                    'amount' => $o[13],
                ],
            ],
            'allowExtraFields' => [
                6 => true,
                11 => true,
            ],
            'type' => [
                9 => 'numeric',
                15 => 'numeric',
            ],
            'notInRangeMessage' => [
                10 => 'sylius.catalog_promotion_action.percentage_discount.not_in_range',
            ],
            'min' => [
                10 => 0,
            ],
            'max' => [
                10 => 1,
            ],
            'channelAwarePropertyPath' => [
                11 => 'catalogPromotion',
            ],
        ],
    ],
    $o[0],
    []
); } },
87 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionActionInterface',
            ],
            'defaultGroup' => [
                'CatalogPromotionActionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
88 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionScopeType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionScopeType')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionScopeGroup'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CatalogPromotionScopeGroup')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionScope',
                3 => 'type',
            ],
            'defaultGroup' => [
                'CatalogPromotionScope',
            ],
            'members' => [
                [
                    'type' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'type' => $o[3],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\CatalogPromotionScope',
            ],
            'property' => [
                3 => 'type',
            ],
            'message' => [
                4 => 'sylius.catalog_promotion_scope.type.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
89 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CatalogPromotionScopeInterface',
            ],
            'defaultGroup' => [
                'CatalogPromotionScopeInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
90 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionDateRange'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionDateRange')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                    $o[9],
                ],
                10 => [
                    $o[11],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                        $o[9],
                    ],
                ],
                10 => [
                    'sylius' => [
                        $o[11],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\Promotion',
                3 => 'code',
                7 => 'name',
                10 => 'description',
                12 => 'actions',
                'rules',
                'translations',
            ],
            'defaultGroup' => [
                'Promotion',
            ],
            'members' => [
                [
                    'code' => [
                        $o[3],
                    ],
                    'name' => [
                        $o[7],
                    ],
                    'description' => [
                        $o[10],
                    ],
                    'actions' => [
                        $o[12],
                    ],
                    'rules' => [
                        $o[13],
                    ],
                    'translations' => [
                        $o[14],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[3],
                    'name' => $o[7],
                    'description' => $o[10],
                    'actions' => $o[12],
                    'rules' => $o[13],
                    'translations' => $o[14],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                8 => null,
                null,
                11 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                11 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.promotion.code.unique',
                4 => 'sylius.promotion.code.not_blank',
                'sylius.promotion.code.regex',
                8 => 'sylius.promotion.name.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                7 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                10 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                12 => 'Sylius\\Component\\Promotion\\Model\\Promotion',
                'Sylius\\Component\\Promotion\\Model\\Promotion',
                'Sylius\\Component\\Promotion\\Model\\Promotion',
            ],
            'property' => [
                3 => 'code',
                7 => 'name',
                10 => 'description',
                12 => 'actions',
                'rules',
                'translations',
            ],
            'pattern' => [
                5 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                6 => 'sylius.promotion.code.max_length',
                9 => 'sylius.promotion.name.max_length',
                11 => 'sylius.promotion.description.max_length',
            ],
            'max' => [
                6 => 255,
                9 => 255,
                11 => 255,
            ],
            'minMessage' => [
                9 => 'sylius.promotion.name.min_length',
                11 => 'sylius.promotion.description.min_length',
            ],
            'min' => [
                9 => 2,
                11 => 2,
            ],
            'cascadingStrategy' => [
                12 => 2,
                2,
                2,
            ],
            'traversalStrategy' => [
                12 => 1,
                1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
91 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionInterface',
            ],
            'defaultGroup' => [
                'PromotionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
92 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionActionGroup'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionActionGroup')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionActionType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionActionType')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Optional'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Optional')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists')),
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Optional'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[9],
                    $o[14],
                    $o[39],
                ],
                5 => [
                    $o[6],
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                    $o[13],
                ],
                14 => [
                    $o[15],
                ],
                16 => [
                    $o[17],
                    $o[18],
                ],
                19 => [
                    $o[20],
                ],
                21 => [
                    $o[22],
                ],
                23 => [
                    $o[24],
                ],
                25 => [
                    $o[26],
                ],
                27 => [
                    $o[28],
                ],
                29 => [
                    $o[30],
                ],
                [
                    $o[31],
                    $o[32],
                ],
                33 => [
                    $o[34],
                ],
                35 => [
                    $o[36],
                ],
                [
                    $o[37],
                    $o[38],
                ],
                39 => [
                    $o[40],
                ],
                41 => [
                    $o[42],
                    $o[43],
                    $o[44],
                ],
                45 => [
                    $o[46],
                ],
                47 => [
                    $o[48],
                ],
                49 => [
                    $o[50],
                ],
                51 => [
                    $o[52],
                ],
                53 => [
                    $o[54],
                ],
                55 => [
                    $o[56],
                ],
                [
                    $o[57],
                    $o[58],
                ],
                59 => [
                    $o[60],
                ],
                61 => [
                    $o[62],
                ],
                [
                    $o[63],
                    $o[64],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius_promotion_action_order_percentage_discount' => [
                        $o[4],
                    ],
                    'sylius_promotion_action_shipping_percentage_discount' => [
                        $o[4],
                    ],
                    'sylius_promotion_action_order_fixed_discount' => [
                        $o[9],
                    ],
                    'sylius_promotion_action_unit_fixed_discount' => [
                        $o[14],
                    ],
                    'sylius_promotion_action_unit_percentage_discount' => [
                        $o[39],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                3 => 'configuration',
            ],
            'defaultGroup' => [
                'PromotionAction',
            ],
            'members' => [
                [
                    'configuration' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'configuration' => $o[3],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius_promotion_action_order_percentage_discount',
                    'sylius_promotion_action_shipping_percentage_discount',
                ],
                [
                    'sylius_promotion_action_order_percentage_discount',
                    'sylius_promotion_action_shipping_percentage_discount',
                ],
                [
                    'sylius_promotion_action_order_percentage_discount',
                    'sylius_promotion_action_shipping_percentage_discount',
                ],
                [
                    'sylius_promotion_action_order_percentage_discount',
                    'sylius_promotion_action_shipping_percentage_discount',
                ],
                [
                    'sylius_promotion_action_order_percentage_discount',
                    'sylius_promotion_action_shipping_percentage_discount',
                ],
                [
                    'sylius_promotion_action_order_fixed_discount',
                ],
                [
                    'sylius_promotion_action_order_fixed_discount',
                ],
                [
                    'sylius_promotion_action_order_fixed_discount',
                ],
                [
                    'sylius_promotion_action_order_fixed_discount',
                ],
                [
                    'sylius_promotion_action_order_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_fixed_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
                [
                    'sylius_promotion_action_unit_percentage_discount',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\PromotionAction',
            ],
            'property' => [
                3 => 'configuration',
            ],
            'fields' => [
                4 => [
                    'percentage' => $o[5],
                ],
                10 => [
                    'amount' => $o[11],
                ],
                15 => [
                    'amount' => $o[16],
                    'filters' => $o[19],
                ],
                20 => [
                    'price_range_filter' => $o[21],
                    'taxons_filter' => $o[27],
                    'products_filter' => $o[33],
                ],
                22 => [
                    'min' => $o[23],
                    'max' => $o[25],
                ],
                28 => [
                    'taxons' => $o[29],
                ],
                34 => [
                    'products' => $o[35],
                ],
                40 => [
                    'percentage' => $o[41],
                    'filters' => $o[45],
                ],
                46 => [
                    'price_range_filter' => $o[47],
                    'taxons_filter' => $o[53],
                    'products_filter' => $o[59],
                ],
                48 => [
                    'min' => $o[49],
                    'max' => $o[51],
                ],
                54 => [
                    'taxons' => $o[55],
                ],
                60 => [
                    'products' => $o[61],
                ],
            ],
            'allowExtraFields' => [
                4 => true,
                9 => true,
                true,
                14 => true,
                true,
                20 => true,
                39 => true,
                true,
                46 => true,
            ],
            'type' => [
                7 => 'numeric',
                13 => 'numeric',
                18 => 'numeric',
                24 => 'numeric',
                26 => 'numeric',
                43 => 'numeric',
                50 => 'numeric',
                52 => 'numeric',
            ],
            'notInRangeMessage' => [
                8 => 'sylius.promotion_action.percentage_discount_configuration.not_in_range',
                44 => 'sylius.promotion_action.percentage_discount_configuration.not_in_range',
            ],
            'min' => [
                8 => 0,
                44 => 0,
            ],
            'max' => [
                8 => 1,
                44 => 1,
            ],
            'channelAwarePropertyPath' => [
                9 => 'promotion',
                14 => 'promotion',
                39 => 'promotion',
            ],
            'validateAgainstAllChannels' => [
                9 => true,
                14 => true,
                39 => true,
            ],
        ],
    ],
    $o[0],
    []
); } },
93 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionActionInterface',
            ],
            'defaultGroup' => [
                'PromotionActionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
94 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\ConfigurablePromotionElementInterface',
            ],
            'defaultGroup' => [
                'ConfigurablePromotionElementInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
95 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionNotCouponBased'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionNotCouponBased')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
                3 => 'code',
                7 => 'usageLimit',
            ],
            'defaultGroup' => [
                'PromotionCoupon',
            ],
            'members' => [
                [
                    'code' => [
                        $o[3],
                    ],
                    'usageLimit' => [
                        $o[7],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[3],
                    'usageLimit' => $o[7],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                8 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.promotion_coupon.code.unique',
                4 => 'sylius.promotion_coupon.code.not_blank',
                6 => 'sylius.promotion_coupon.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
                7 => 'Sylius\\Component\\Promotion\\Model\\PromotionCoupon',
            ],
            'property' => [
                3 => 'code',
                7 => 'usageLimit',
            ],
            'maxMessage' => [
                5 => 'sylius.promotion_coupon.code.max_length',
            ],
            'minMessage' => [
                5 => 'sylius.promotion_coupon.code.min_length',
                8 => 'sylius.promotion_coupon.usage_limit.min',
            ],
            'max' => [
                5 => 255,
            ],
            'min' => [
                5 => 2,
                8 => 1,
            ],
            'pattern' => [
                6 => '/^[\\w-]*$/',
            ],
        ],
    ],
    $o[0],
    []
); } },
96 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionCouponInterface',
            ],
            'defaultGroup' => [
                'PromotionCouponInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
97 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CouponPossibleGenerationAmount'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\CouponPossibleGenerationAmount')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                ],
                7 => [
                    $o[8],
                    $o[9],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                        $o[9],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                2 => 'amount',
                5 => 'usageLimit',
                7 => 'codeLength',
            ],
            'defaultGroup' => [
                'PromotionCouponGeneratorInstruction',
            ],
            'members' => [
                [
                    'amount' => [
                        $o[2],
                    ],
                    'usageLimit' => [
                        $o[5],
                    ],
                    'codeLength' => [
                        $o[7],
                    ],
                ],
            ],
            'properties' => [
                [
                    'amount' => $o[2],
                    'usageLimit' => $o[5],
                    'codeLength' => $o[7],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                8 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                5 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
                7 => 'Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction',
            ],
            'property' => [
                2 => 'amount',
                5 => 'usageLimit',
                7 => 'codeLength',
            ],
            'message' => [
                3 => 'sylius.promotion_coupon_generator_instruction.amount.not_blank',
                9 => 'sylius.promotion_coupon_generator_instruction.code_length.not_blank',
            ],
            'minMessage' => [
                4 => 'sylius.promotion_coupon_generator_instruction.amount.min',
                6 => 'sylius.promotion_coupon_generator_instruction.usage_limit.min',
            ],
            'min' => [
                4 => 1,
                6 => 1,
                8 => 1,
            ],
            'notInRangeMessage' => [
                8 => 'sylius.promotion_coupon_generator_instruction.code_length.not_in_range',
            ],
            'max' => [
                8 => 40,
            ],
        ],
    ],
    $o[0],
    []
); } },
98 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Generator\\ReadablePromotionCouponGeneratorInstructionInterface',
            ],
            'defaultGroup' => [
                'ReadablePromotionCouponGeneratorInstructionInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
99 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionRuleType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionRuleType')),
        clone ($p['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionRuleGroup'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionRuleGroup')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CustomerGroupCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CustomerGroupCodeExists')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CountryCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CountryCodeExists')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists')),
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[8],
                    $o[13],
                    $o[17],
                    $o[22],
                    $o[27],
                    $o[35],
                    $o[40],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                9 => [
                    $o[10],
                    $o[11],
                    $o[12],
                ],
                14 => [
                    $o[15],
                    $o[16],
                ],
                18 => [
                    $o[19],
                    $o[20],
                    $o[21],
                ],
                23 => [
                    $o[24],
                ],
                [
                    $o[25],
                    $o[26],
                ],
                27 => [
                    $o[28],
                ],
                29 => [
                    $o[30],
                    $o[31],
                ],
                32 => [
                    $o[33],
                    $o[34],
                ],
                36 => [
                    $o[37],
                    $o[38],
                    $o[39],
                ],
                40 => [
                    $o[41],
                ],
                42 => [
                    $o[43],
                    $o[44],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius_promotion_rule_cart_quantity' => [
                        $o[4],
                    ],
                    'sylius_promotion_rule_customer_group' => [
                        $o[8],
                    ],
                    'sylius_promotion_rule_nth_order' => [
                        $o[13],
                    ],
                    'sylius_promotion_rule_shipping_country' => [
                        $o[17],
                    ],
                    'sylius_promotion_rule_has_taxon' => [
                        $o[22],
                    ],
                    'sylius_promotion_rule_total_of_items_from_taxon' => [
                        $o[27],
                    ],
                    'sylius_promotion_rule_contains_product' => [
                        $o[35],
                    ],
                    'sylius_promotion_rule_item_total' => [
                        $o[40],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                3 => 'configuration',
            ],
            'defaultGroup' => [
                'PromotionRule',
            ],
            'members' => [
                [
                    'configuration' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'configuration' => $o[3],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius_promotion_rule_cart_quantity',
                ],
                [
                    'sylius_promotion_rule_cart_quantity',
                ],
                [
                    'sylius_promotion_rule_cart_quantity',
                ],
                [
                    'sylius_promotion_rule_cart_quantity',
                ],
                [
                    'sylius_promotion_rule_customer_group',
                ],
                [
                    'sylius_promotion_rule_customer_group',
                ],
                [
                    'sylius_promotion_rule_customer_group',
                ],
                [
                    'sylius_promotion_rule_customer_group',
                ],
                [
                    'sylius_promotion_rule_customer_group',
                ],
                [
                    'sylius_promotion_rule_nth_order',
                ],
                [
                    'sylius_promotion_rule_nth_order',
                ],
                [
                    'sylius_promotion_rule_nth_order',
                ],
                [
                    'sylius_promotion_rule_nth_order',
                ],
                [
                    'sylius_promotion_rule_shipping_country',
                ],
                [
                    'sylius_promotion_rule_shipping_country',
                ],
                [
                    'sylius_promotion_rule_shipping_country',
                ],
                [
                    'sylius_promotion_rule_shipping_country',
                ],
                [
                    'sylius_promotion_rule_shipping_country',
                ],
                [
                    'sylius_promotion_rule_has_taxon',
                ],
                [
                    'sylius_promotion_rule_has_taxon',
                ],
                [
                    'sylius_promotion_rule_has_taxon',
                ],
                [
                    'sylius_promotion_rule_has_taxon',
                ],
                [
                    'sylius_promotion_rule_has_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_total_of_items_from_taxon',
                ],
                [
                    'sylius_promotion_rule_contains_product',
                ],
                [
                    'sylius_promotion_rule_contains_product',
                ],
                [
                    'sylius_promotion_rule_contains_product',
                ],
                [
                    'sylius_promotion_rule_contains_product',
                ],
                [
                    'sylius_promotion_rule_contains_product',
                ],
                [
                    'sylius_promotion_rule_item_total',
                ],
                [
                    'sylius_promotion_rule_item_total',
                ],
                [
                    'sylius_promotion_rule_item_total',
                ],
                [
                    'sylius_promotion_rule_item_total',
                ],
                [
                    'sylius_promotion_rule_item_total',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Promotion\\Model\\PromotionRule',
            ],
            'property' => [
                3 => 'configuration',
            ],
            'fields' => [
                4 => [
                    'count' => $o[5],
                ],
                8 => [
                    'group_code' => $o[9],
                ],
                13 => [
                    'nth' => $o[14],
                ],
                17 => [
                    'country' => $o[18],
                ],
                22 => [
                    'taxons' => $o[23],
                ],
                28 => [
                    'amount' => $o[29],
                    'taxon' => $o[32],
                ],
                35 => [
                    'product_code' => $o[36],
                ],
                41 => [
                    'amount' => $o[42],
                ],
            ],
            'allowExtraFields' => [
                4 => true,
                8 => true,
                13 => true,
                17 => true,
                22 => true,
                27 => true,
                true,
                35 => true,
                40 => true,
                true,
            ],
            'type' => [
                7 => 'numeric',
                11 => 'string',
                16 => 'numeric',
                20 => 'string',
                31 => 'numeric',
                38 => 'string',
                44 => 'numeric',
            ],
            'channelAwarePropertyPath' => [
                27 => 'promotion',
                40 => 'promotion',
            ],
            'validateAgainstAllChannels' => [
                27 => true,
                40 => true,
            ],
        ],
    ],
    $o[0],
    []
); } },
100 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionRuleInterface',
            ],
            'defaultGroup' => [
                'PromotionRuleInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
101 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionTranslation',
                'label',
            ],
            'defaultGroup' => [
                'PromotionTranslation',
            ],
            'members' => [
                [
                    'label' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'label' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Promotion\\Model\\PromotionTranslation',
            ],
            'property' => [
                1 => 'label',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
            ],
            'max' => [
                2 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
102 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionTranslationInterface',
            ],
            'defaultGroup' => [
                'PromotionTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
103 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ProvinceAddressConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ProvinceAddressConstraint')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Country'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Country')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                    $o[10],
                ],
                11 => [
                    $o[12],
                    $o[13],
                ],
                14 => [
                    $o[15],
                    $o[16],
                ],
                17 => [
                    $o[18],
                    $o[19],
                ],
                20 => [
                    $o[21],
                ],
                22 => [
                    $o[23],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_shipping_address_update' => [
                        $o[1],
                    ],
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius_shipping_address_update' => [
                        $o[3],
                        $o[4],
                    ],
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius_shipping_address_update' => [
                        $o[6],
                        $o[7],
                    ],
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius_shipping_address_update' => [
                        $o[9],
                        $o[10],
                    ],
                    'sylius' => [
                        $o[9],
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius_shipping_address_update' => [
                        $o[12],
                        $o[13],
                    ],
                    'sylius' => [
                        $o[12],
                        $o[13],
                    ],
                ],
                14 => [
                    'sylius_shipping_address_update' => [
                        $o[15],
                        $o[16],
                    ],
                    'sylius' => [
                        $o[15],
                        $o[16],
                    ],
                ],
                17 => [
                    'sylius_shipping_address_update' => [
                        $o[18],
                        $o[19],
                    ],
                    'sylius' => [
                        $o[18],
                        $o[19],
                    ],
                ],
                20 => [
                    'sylius_shipping_address_update' => [
                        $o[21],
                    ],
                    'sylius' => [
                        $o[21],
                    ],
                ],
                22 => [
                    'sylius_shipping_address_update' => [
                        $o[23],
                    ],
                    'sylius' => [
                        $o[23],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Address',
                2 => 'firstName',
                5 => 'lastName',
                8 => 'countryCode',
                11 => 'street',
                14 => 'city',
                17 => 'postcode',
                20 => 'phoneNumber',
                22 => 'company',
            ],
            'defaultGroup' => [
                'Address',
            ],
            'members' => [
                [
                    'firstName' => [
                        $o[2],
                    ],
                    'lastName' => [
                        $o[5],
                    ],
                    'countryCode' => [
                        $o[8],
                    ],
                    'street' => [
                        $o[11],
                    ],
                    'city' => [
                        $o[14],
                    ],
                    'postcode' => [
                        $o[17],
                    ],
                    'phoneNumber' => [
                        $o[20],
                    ],
                    'company' => [
                        $o[22],
                    ],
                ],
            ],
            'properties' => [
                [
                    'firstName' => $o[2],
                    'lastName' => $o[5],
                    'countryCode' => $o[8],
                    'street' => $o[11],
                    'city' => $o[14],
                    'postcode' => $o[17],
                    'phoneNumber' => $o[20],
                    'company' => $o[22],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
                9 => null,
                null,
                12 => null,
                null,
                15 => null,
                null,
                18 => null,
                null,
                21 => null,
                23 => null,
            ],
            'groups' => [
                1 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                3 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                6 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                9 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                12 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                15 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                18 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                21 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
                23 => [
                    'sylius_shipping_address_update',
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Addressing\\Model\\Address',
                5 => 'Sylius\\Component\\Addressing\\Model\\Address',
                8 => 'Sylius\\Component\\Addressing\\Model\\Address',
                11 => 'Sylius\\Component\\Addressing\\Model\\Address',
                14 => 'Sylius\\Component\\Addressing\\Model\\Address',
                17 => 'Sylius\\Component\\Addressing\\Model\\Address',
                20 => 'Sylius\\Component\\Addressing\\Model\\Address',
                22 => 'Sylius\\Component\\Addressing\\Model\\Address',
            ],
            'property' => [
                2 => 'firstName',
                5 => 'lastName',
                8 => 'countryCode',
                11 => 'street',
                14 => 'city',
                17 => 'postcode',
                20 => 'phoneNumber',
                22 => 'company',
            ],
            'message' => [
                3 => 'sylius.address.first_name.not_blank',
                6 => 'sylius.address.last_name.not_blank',
                9 => 'sylius.address.country.not_blank',
                12 => 'sylius.address.street.not_blank',
                15 => 'sylius.address.city.not_blank',
                18 => 'sylius.address.postcode.not_blank',
            ],
            'maxMessage' => [
                4 => 'sylius.address.first_name.max_length',
                7 => 'sylius.address.last_name.max_length',
                13 => 'sylius.address.street.max_length',
                16 => 'sylius.address.city.max_length',
                19 => 'sylius.address.postcode.max_length',
            ],
            'minMessage' => [
                4 => 'sylius.address.first_name.min_length',
                7 => 'sylius.address.last_name.min_length',
                13 => 'sylius.address.street.min_length',
                16 => 'sylius.address.city.min_length',
                19 => 'sylius.address.postcode.min_length',
            ],
            'max' => [
                4 => 255,
                7 => 255,
                13 => 255,
                16 => 255,
                19 => 255,
                21 => 255,
                23 => 255,
            ],
            'min' => [
                4 => 2,
                7 => 2,
                13 => 2,
                16 => 2,
                19 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
104 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\AddressInterface',
            ],
            'defaultGroup' => [
                'AddressInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
105 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Country'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Country')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\UniqueProvinceCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\UniqueProvinceCollection')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Country',
                2 => 'code',
                5 => 'provinces',
            ],
            'defaultGroup' => [
                'Country',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'provinces' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'provinces' => $o[5],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.country.code.unique',
                3 => 'sylius.country.code.country',
                'sylius.country.code.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Addressing\\Model\\Country',
                5 => 'Sylius\\Component\\Addressing\\Model\\Country',
            ],
            'property' => [
                2 => 'code',
                5 => 'provinces',
            ],
            'cascadingStrategy' => [
                5 => 2,
            ],
            'traversalStrategy' => [
                5 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
106 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\CountryInterface',
            ],
            'defaultGroup' => [
                'CountryInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
107 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                    $o[9],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                        $o[9],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Province',
                3 => 'code',
                7 => 'name',
            ],
            'defaultGroup' => [
                'Province',
            ],
            'members' => [
                [
                    'code' => [
                        $o[3],
                    ],
                    'name' => [
                        $o[7],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[3],
                    'name' => $o[7],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                8 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.province.name.unique',
                'sylius.province.code.unique',
                4 => 'sylius.province.code.not_blank',
                'sylius.province.code.regex',
                8 => 'sylius.province.name.not_blank',
            ],
            'fields' => [
                1 => [
                    'name',
                    'country',
                ],
                'code',
            ],
            'errorPath' => [
                1 => 'name',
            ],
            'class' => [
                3 => 'Sylius\\Component\\Addressing\\Model\\Province',
                7 => 'Sylius\\Component\\Addressing\\Model\\Province',
            ],
            'property' => [
                3 => 'code',
                7 => 'name',
            ],
            'pattern' => [
                5 => '/^[A-Z]{2}-[A-Z0-9]{1,}$/',
            ],
            'maxMessage' => [
                6 => 'sylius.province.code.max_length',
                9 => 'sylius.province.name.max_length',
            ],
            'max' => [
                6 => 255,
                9 => 255,
            ],
            'minMessage' => [
                9 => 'sylius.province.name.min_length',
            ],
            'min' => [
                9 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
108 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\ProvinceInterface',
            ],
            'defaultGroup' => [
                'ProvinceInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
109 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        ($f['Symfony\\Component\\Validator\\Mapping\\GetterMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\GetterMetadata'))(),
        clone ($p['Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ResourceBundle\\Validator\\Constraints\\UniqueWithinCollectionConstraint')),
        clone ($p['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneCannotContainItself'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneCannotContainItself')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Count'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Count')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                ],
                8 => [
                    $o[9],
                ],
                10 => [
                    $o[11],
                    $o[12],
                ],
                13 => [
                    $o[14],
                    $o[15],
                    $o[16],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                    ],
                ],
                10 => [
                    'sylius' => [
                        $o[11],
                        $o[12],
                    ],
                ],
                13 => [
                    'sylius' => [
                        $o[14],
                        $o[15],
                        $o[16],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\Zone',
                2 => 'code',
                6 => 'type',
                8 => 'scope',
                10 => 'name',
                13 => 'getMembers',
            ],
            'defaultGroup' => [
                'Zone',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'type' => [
                        $o[6],
                    ],
                    'scope' => [
                        $o[8],
                    ],
                    'name' => [
                        $o[10],
                    ],
                    'members' => [
                        $o[13],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'type' => $o[6],
                    'scope' => $o[8],
                    'name' => $o[10],
                ],
            ],
            'getters' => [
                [
                    'members' => $o[13],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                9 => null,
                11 => null,
                null,
                14 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
                11 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                14 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.zone.code.unique',
                3 => 'sylius.zone.code.not_blank',
                'sylius.zone.code.regex',
                7 => 'sylius.zone.type.invalid',
                9 => 'sylius.zone.scope.not_blank',
                11 => 'sylius.zone.name.not_blank',
                14 => 'sylius.zone_member.unique',
            ],
            'fields' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                6 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                8 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                10 => 'Sylius\\Component\\Addressing\\Model\\Zone',
                13 => 'Sylius\\Component\\Addressing\\Model\\Zone',
            ],
            'property' => [
                2 => 'code',
                6 => 'type',
                8 => 'scope',
                10 => 'name',
                13 => 'members',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.zone.code.max_length',
                12 => 'sylius.zone.name.max_length',
            ],
            'max' => [
                5 => 255,
                12 => 255,
            ],
            'callback' => [
                7 => 'getTypes',
            ],
            'minMessage' => [
                12 => 'sylius.zone.name.min_length',
                16 => 'sylius.zone.members.min_count',
            ],
            'min' => [
                12 => 2,
                16 => 1,
            ],
            'cascadingStrategy' => [
                13 => 2,
            ],
            'traversalStrategy' => [
                13 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
110 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\ZoneInterface',
            ],
            'defaultGroup' => [
                'ZoneInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
111 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneMemberGroup'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ZoneMemberGroup')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CountryCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CountryCodeExists')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProvinceCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProvinceCodeExists')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ZoneCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ZoneCodeExists')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                    $o[6],
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                    'sylius_zone_member_country' => [
                        $o[6],
                    ],
                    'sylius_zone_member_province' => [
                        $o[7],
                    ],
                    'sylius_zone_member_zone' => [
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                2 => 'code',
            ],
            'defaultGroup' => [
                'ZoneMember',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius_zone_member_country',
                ],
                [
                    'sylius_zone_member_province',
                ],
                [
                    'sylius_zone_member_zone',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Addressing\\Model\\ZoneMember',
            ],
            'property' => [
                2 => 'code',
            ],
            'message' => [
                3 => 'sylius.zone_member.code.not_blank',
                'sylius.zone_member.code.regex',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.zone_member.code.max_length',
            ],
            'max' => [
                5 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
112 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Addressing\\Model\\ZoneMemberInterface',
            ],
            'defaultGroup' => [
                'ZoneMemberInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
113 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Taxonomy\\Model\\Taxon',
                2 => 'translations',
                'code',
            ],
            'defaultGroup' => [
                'Taxon',
            ],
            'members' => [
                [
                    'translations' => [
                        $o[2],
                    ],
                    'code' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'translations' => $o[2],
                    'code' => $o[3],
                ],
            ],
            'payload' => [
                1 => null,
                4 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.taxon.code.unique',
                4 => 'sylius.taxon.code.not_blank',
                'sylius.taxon.code.regex',
            ],
            'fields' => [
                1 => 'code',
            ],
            'cascadingStrategy' => [
                2 => 2,
            ],
            'traversalStrategy' => [
                2 => 1,
            ],
            'class' => [
                2 => 'Sylius\\Component\\Taxonomy\\Model\\Taxon',
                'Sylius\\Component\\Taxonomy\\Model\\Taxon',
            ],
            'property' => [
                2 => 'translations',
                'code',
            ],
            'pattern' => [
                5 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                6 => 'sylius.taxon.code.max_length',
            ],
            'max' => [
                6 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
114 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxonomy\\Model\\TaxonInterface',
            ],
            'defaultGroup' => [
                'TaxonInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
115 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                2 => 'name',
                5 => 'slug',
            ],
            'defaultGroup' => [
                'TaxonTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[2],
                    ],
                    'slug' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[2],
                    'slug' => $o[5],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.taxon.slug.unique',
                3 => 'sylius.taxon.name.not_blank',
                6 => 'sylius.taxon.slug.not_blank',
            ],
            'fields' => [
                1 => [
                    'locale',
                    'slug',
                ],
            ],
            'errorPath' => [
                1 => 'slug',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                5 => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
            ],
            'property' => [
                2 => 'name',
                5 => 'slug',
            ],
            'maxMessage' => [
                4 => 'sylius.taxon.name.max_length',
            ],
            'max' => [
                4 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
116 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface',
            ],
            'defaultGroup' => [
                'TaxonTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
117 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
                'currentPassword',
                4 => 'newPassword',
            ],
            'defaultGroup' => [
                'ChangePassword',
            ],
            'members' => [
                [
                    'currentPassword' => [
                        $o[1],
                    ],
                    'newPassword' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'currentPassword' => $o[1],
                    'newPassword' => $o[4],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                        $o[6],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
                4 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword',
            ],
            'property' => [
                1 => 'currentPassword',
                4 => 'newPassword',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.user.plainPassword.wrong_current',
            ],
            'maxMessage' => [
                3 => 'sylius.user.password.max',
                6 => 'sylius.user.password.max',
            ],
            'minMessage' => [
                3 => 'sylius.user.password.min',
                6 => 'sylius.user.password.min',
            ],
            'max' => [
                3 => 254,
                6 => 254,
            ],
            'min' => [
                3 => 4,
                6 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
118 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordReset',
                'password',
            ],
            'defaultGroup' => [
                'PasswordReset',
            ],
            'members' => [
                [
                    'password' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'password' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordReset',
            ],
            'property' => [
                1 => 'password',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'maxMessage' => [
                3 => 'sylius.user.password.max',
            ],
            'minMessage' => [
                3 => 'sylius.user.password.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
119 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordResetRequest',
                'email',
            ],
            'defaultGroup' => [
                'PasswordResetRequest',
            ],
            'members' => [
                [
                    'email' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordResetRequest',
            ],
            'property' => [
                1 => 'email',
            ],
            'payload' => [
                2 => null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.user.email.not_blank',
                4 => 'sylius.user.email.invalid',
            ],
            'maxMessage' => [
                3 => 'sylius.user.email.max',
            ],
            'minMessage' => [
                3 => 'sylius.user.email.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 2,
            ],
            'mode' => [
                4 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
120 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\User\\Model\\User',
                'plainPassword',
            ],
            'defaultGroup' => [
                'User',
            ],
            'members' => [
                [
                    'plainPassword' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'plainPassword' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius_user_registration' => [
                        $o[2],
                        $o[3],
                    ],
                    'sylius_user_create' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\User\\Model\\User',
            ],
            'property' => [
                1 => 'plainPassword',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius_user_registration',
                    'sylius_user_create',
                ],
                [
                    'sylius_user_registration',
                    'sylius_user_create',
                ],
            ],
            'message' => [
                2 => 'sylius.user.plainPassword.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.user.password.max',
            ],
            'minMessage' => [
                3 => 'sylius.user.password.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
121 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\User\\Model\\UserInterface',
            ],
            'defaultGroup' => [
                'UserInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
122 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface',
            ],
            'defaultGroup' => [
                'PasswordAuthenticatedUserInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
123 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Symfony\\Component\\Security\\Core\\User\\UserInterface',
            ],
            'defaultGroup' => [
                'UserInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
124 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\User\\Model\\CredentialsHolderInterface',
            ],
            'defaultGroup' => [
                'CredentialsHolderInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
125 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                ],
                10 => [
                    $o[11],
                    $o[12],
                    $o[13],
                ],
                14 => [
                    $o[15],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius_customer_profile' => [
                        $o[3],
                    ],
                    'sylius' => [
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius_customer_profile' => [
                        $o[6],
                    ],
                    'sylius' => [
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                    ],
                ],
                10 => [
                    'sylius' => [
                        $o[11],
                        $o[12],
                        $o[13],
                    ],
                    'sylius_customer_guest' => [
                        $o[11],
                        $o[12],
                        $o[13],
                    ],
                    'sylius_customer_checkout_guest' => [
                        $o[11],
                        $o[12],
                        $o[13],
                    ],
                ],
                14 => [
                    'sylius' => [
                        $o[15],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Customer\\Model\\Customer',
                2 => 'firstName',
                5 => 'lastName',
                8 => 'gender',
                10 => 'email',
                14 => 'phoneNumber',
            ],
            'defaultGroup' => [
                'Customer',
            ],
            'members' => [
                [
                    'firstName' => [
                        $o[2],
                    ],
                    'lastName' => [
                        $o[5],
                    ],
                    'gender' => [
                        $o[8],
                    ],
                    'email' => [
                        $o[10],
                    ],
                    'phoneNumber' => [
                        $o[14],
                    ],
                ],
            ],
            'properties' => [
                [
                    'firstName' => $o[2],
                    'lastName' => $o[5],
                    'gender' => $o[8],
                    'email' => $o[10],
                    'phoneNumber' => $o[14],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
                9 => null,
                11 => null,
                null,
                null,
                15 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius_customer_profile',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius_customer_profile',
                ],
                [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
                11 => [
                    'sylius',
                    'sylius_customer_guest',
                    'sylius_customer_checkout_guest',
                ],
                [
                    'sylius',
                    'sylius_customer_guest',
                    'sylius_customer_checkout_guest',
                ],
                [
                    'sylius',
                    'sylius_customer_guest',
                    'sylius_customer_checkout_guest',
                ],
                15 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.customer.email.unique',
                3 => 'sylius.customer.first_name.not_blank',
                6 => 'sylius.customer.last_name.not_blank',
                9 => 'sylius.customer.gender.not_blank',
                11 => 'sylius.customer.email.not_blank',
                13 => 'sylius.customer.email.invalid',
            ],
            'fields' => [
                1 => 'emailCanonical',
            ],
            'errorPath' => [
                1 => 'email',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Customer\\Model\\Customer',
                5 => 'Sylius\\Component\\Customer\\Model\\Customer',
                8 => 'Sylius\\Component\\Customer\\Model\\Customer',
                10 => 'Sylius\\Component\\Customer\\Model\\Customer',
                14 => 'Sylius\\Component\\Customer\\Model\\Customer',
            ],
            'property' => [
                2 => 'firstName',
                5 => 'lastName',
                8 => 'gender',
                10 => 'email',
                14 => 'phoneNumber',
            ],
            'maxMessage' => [
                4 => 'sylius.customer.first_name.max',
                7 => 'sylius.customer.last_name.max',
                12 => 'sylius.customer.email.max',
                15 => 'sylius.customer.phone_number.max',
            ],
            'minMessage' => [
                4 => 'sylius.customer.first_name.min',
                7 => 'sylius.customer.last_name.min',
            ],
            'max' => [
                4 => 255,
                7 => 255,
                12 => 254,
                15 => 255,
            ],
            'min' => [
                4 => 2,
                7 => 2,
            ],
            'mode' => [
                13 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
126 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Customer\\Model\\CustomerInterface',
            ],
            'defaultGroup' => [
                'CustomerInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
127 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                2 => 'code',
                6 => 'name',
            ],
            'defaultGroup' => [
                'CustomerGroup',
            ],
            'members' => [
                [
                    'code' => [
                        $o[2],
                    ],
                    'name' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'code' => $o[2],
                    'name' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.customer_group.code.unique',
                3 => 'sylius.customer_group.code.not_blank',
                'sylius.customer_group.code.regex',
                7 => 'sylius.customer_group.name.not_blank',
            ],
            'fields' => [
                1 => 'code',
            ],
            'errorPath' => [
                1 => 'code',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                6 => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
            ],
            'property' => [
                2 => 'code',
                6 => 'name',
            ],
            'pattern' => [
                4 => '/^[\\w-]*$/',
            ],
            'maxMessage' => [
                5 => 'sylius.customer_group.code.max_length',
                8 => 'sylius.customer_group.name.max',
            ],
            'max' => [
                5 => 255,
                8 => 255,
            ],
            'minMessage' => [
                8 => 'sylius.customer_group.name.min',
            ],
            'min' => [
                8 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
128 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Customer\\Model\\CustomerGroupInterface',
            ],
            'defaultGroup' => [
                'CustomerGroupInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
129 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\UniqueReviewerEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\UniqueReviewerEmail')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_review' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Review\\Model\\Review',
                2 => 'title',
                5 => 'rating',
                8 => 'comment',
            ],
            'defaultGroup' => [
                'Review',
            ],
            'members' => [
                [
                    'title' => [
                        $o[2],
                    ],
                    'rating' => [
                        $o[5],
                    ],
                    'comment' => [
                        $o[8],
                    ],
                ],
            ],
            'properties' => [
                [
                    'title' => $o[2],
                    'rating' => $o[5],
                    'comment' => $o[8],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
                9 => null,
            ],
            'groups' => [
                1 => [
                    'sylius_review',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Review\\Model\\Review',
                5 => 'Sylius\\Component\\Review\\Model\\Review',
                8 => 'Sylius\\Component\\Review\\Model\\Review',
            ],
            'property' => [
                2 => 'title',
                5 => 'rating',
                8 => 'comment',
            ],
            'message' => [
                3 => 'sylius.review.title.not_blank',
                6 => 'sylius.review.rating.not_blank',
                9 => 'sylius.review.comment.not_blank',
            ],
            'maxMessage' => [
                4 => 'sylius.review.title.max_length',
            ],
            'minMessage' => [
                4 => 'sylius.review.title.min_length',
            ],
            'max' => [
                4 => 255,
                7 => 5,
            ],
            'min' => [
                4 => 2,
                7 => 1,
            ],
            'notInRangeMessage' => [
                7 => 'sylius.review.rating.not_in_range',
            ],
        ],
    ],
    $o[0],
    []
); } },
130 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Review\\Model\\ReviewInterface',
            ],
            'defaultGroup' => [
                'ReviewInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
131 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemVariantEnabled'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemVariantEnabled')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemAvailability'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemAvailability')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\OrderBundle\\Controller\\AddToCartCommand',
            ],
            'defaultGroup' => [
                'AddToCartCommand',
            ],
            'payload' => [
                1 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.cart_item.not_available',
            ],
        ],
    ],
    $o[0],
    []
); } },
132 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\OrderBundle\\Controller\\AddToCartCommandInterface',
            ],
            'defaultGroup' => [
                'AddToCartCommandInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
133 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Locale'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Locale')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
                13 => [
                    $o[14],
                    $o[15],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                    ],
                ],
                13 => [
                    'sylius' => [
                        $o[14],
                        $o[15],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\AdminUser',
                3 => 'email',
                6 => 'username',
                9 => 'firstName',
                11 => 'lastName',
                13 => 'localeCode',
            ],
            'defaultGroup' => [
                'AdminUser',
            ],
            'members' => [
                [
                    'email' => [
                        $o[3],
                    ],
                    'username' => [
                        $o[6],
                    ],
                    'firstName' => [
                        $o[9],
                    ],
                    'lastName' => [
                        $o[11],
                    ],
                    'localeCode' => [
                        $o[13],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[3],
                    'username' => $o[6],
                    'firstName' => $o[9],
                    'lastName' => $o[11],
                    'localeCode' => $o[13],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                7 => null,
                null,
                10 => null,
                12 => null,
                14 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
                14 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.user.email.unique',
                'sylius.user.username.unique',
                4 => 'sylius.user.email.not_blank',
                'sylius.user.email.invalid',
                7 => 'sylius.user.username.not_blank',
                14 => 'sylius.user.locale_code.not_blank',
            ],
            'fields' => [
                1 => 'email',
                'username',
            ],
            'class' => [
                3 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                6 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                9 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                11 => 'Sylius\\Component\\Core\\Model\\AdminUser',
                13 => 'Sylius\\Component\\Core\\Model\\AdminUser',
            ],
            'property' => [
                3 => 'email',
                6 => 'username',
                9 => 'firstName',
                11 => 'lastName',
                13 => 'localeCode',
            ],
            'mode' => [
                5 => 'strict',
            ],
            'maxMessage' => [
                8 => 'sylius.user.username.max',
                10 => 'sylius.user.first_name.max',
                12 => 'sylius.user.last_name.max',
            ],
            'max' => [
                8 => 255,
                10 => 255,
                12 => 255,
            ],
        ],
    ],
    $o[0],
    []
); } },
134 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\AdminUserInterface',
            ],
            'defaultGroup' => [
                'AdminUserInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
135 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Symfony\\Component\\Security\\Core\\User\\EquatableInterface',
            ],
            'defaultGroup' => [
                'EquatableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
136 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ImageAwareInterface',
            ],
            'defaultGroup' => [
                'ImageAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
137 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\AvatarImage',
                'file',
            ],
            'defaultGroup' => [
                'AvatarImage',
            ],
            'members' => [
                [
                    'file' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'file' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\AvatarImage',
            ],
            'property' => [
                1 => 'file',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'binaryFormat' => [
                2 => false,
            ],
            'mimeTypes' => [
                2 => 'image/*',
            ],
            'maxSizeMessage' => [
                2 => 'sylius.avatar_image.file.max_size',
            ],
            'uploadIniSizeErrorMessage' => [
                2 => 'sylius.avatar_image.file.upload_ini_size',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                2 => 5000000,
            ],
        ],
    ],
    $o[0],
    []
); } },
138 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Image',
            ],
            'defaultGroup' => [
                'Image',
            ],
        ],
    ],
    $o[0],
    []
); } },
139 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ImageInterface',
            ],
            'defaultGroup' => [
                'ImageInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
140 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\AvatarImageInterface',
            ],
            'defaultGroup' => [
                'AvatarImageInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
141 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Unique'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Unique')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductCodeExists')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Unique'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\TaxonCodeExists')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Collection'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Required'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Unique'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductVariantCodeExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductVariantCodeExists')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\CatalogPromotionScope',
                'configuration',
            ],
            'defaultGroup' => [
                'CatalogPromotionScope',
            ],
            'members' => [
                [
                    'configuration' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'configuration' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[9],
                    $o[16],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                10 => [
                    $o[11],
                    $o[12],
                    $o[13],
                ],
                13 => [
                    $o[14],
                    $o[15],
                ],
                17 => [
                    $o[18],
                    $o[19],
                    $o[20],
                ],
                20 => [
                    $o[21],
                    $o[22],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius_catalog_promotion_scope_for_products' => [
                        $o[2],
                    ],
                    'sylius_catalog_promotion_scope_for_taxons' => [
                        $o[9],
                    ],
                    'sylius_catalog_promotion_scope_for_variants' => [
                        $o[16],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\CatalogPromotionScope',
            ],
            'property' => [
                1 => 'configuration',
            ],
            'payload' => [
                2 => null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_products',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_taxons',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
                [
                    'sylius_catalog_promotion_scope_for_variants',
                ],
            ],
            'fields' => [
                2 => [
                    'products' => $o[3],
                ],
                9 => [
                    'taxons' => $o[10],
                ],
                16 => [
                    'variants' => $o[17],
                ],
            ],
            'allowExtraFields' => [
                2 => true,
                9 => true,
                16 => true,
            ],
            'message' => [
                4 => 'sylius.catalog_promotion_scope.for_products.unique',
                'sylius.catalog_promotion_scope.for_products.not_empty',
                11 => 'sylius.catalog_promotion_scope.for_taxons.unique',
                'sylius.catalog_promotion_scope.for_taxons.not_empty',
                18 => 'sylius.catalog_promotion_scope.for_variants.unique',
                'sylius.catalog_promotion_scope.for_variants.not_empty',
            ],
        ],
    ],
    $o[0],
    []
); } },
142 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\CatalogPromotionScopeInterface',
            ],
            'defaultGroup' => [
                'CatalogPromotionScopeInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
143 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelDefaultLocaleEnabled'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelDefaultLocaleEnabled')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasEnabledEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasEnabledEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
                5 => [
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                    $o[11],
                ],
                12 => [
                    $o[13],
                    $o[14],
                ],
                15 => [
                    $o[16],
                ],
                18 => [
                    $o[19],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                        $o[11],
                    ],
                ],
                12 => [
                    'sylius' => [
                        $o[13],
                        $o[14],
                    ],
                ],
                15 => [
                    'sylius' => [
                        $o[16],
                    ],
                ],
                18 => [
                    'sylius' => [
                        $o[19],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\Channel',
                3 => 'baseCurrency',
                5 => 'defaultLocale',
                7 => 'themeName',
                9 => 'taxCalculationStrategy',
                12 => 'contactEmail',
                15 => 'contactPhoneNumber',
                17 => 'channelPriceHistoryConfig',
                'shopBillingData',
            ],
            'defaultGroup' => [
                'Channel',
            ],
            'members' => [
                [
                    'baseCurrency' => [
                        $o[3],
                    ],
                    'defaultLocale' => [
                        $o[5],
                    ],
                    'themeName' => [
                        $o[7],
                    ],
                    'taxCalculationStrategy' => [
                        $o[9],
                    ],
                    'contactEmail' => [
                        $o[12],
                    ],
                    'contactPhoneNumber' => [
                        $o[15],
                    ],
                    'channelPriceHistoryConfig' => [
                        $o[17],
                    ],
                    'shopBillingData' => [
                        $o[18],
                    ],
                ],
            ],
            'properties' => [
                [
                    'baseCurrency' => $o[3],
                    'defaultLocale' => $o[5],
                    'themeName' => $o[7],
                    'taxCalculationStrategy' => $o[9],
                    'contactEmail' => $o[12],
                    'contactPhoneNumber' => $o[15],
                    'channelPriceHistoryConfig' => $o[17],
                    'shopBillingData' => $o[18],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                6 => null,
                8 => null,
                10 => null,
                null,
                13 => null,
                null,
                16 => null,
                19 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                13 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                16 => [
                    'sylius',
                ],
                19 => [
                    'sylius',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Core\\Model\\Channel',
                5 => 'Sylius\\Component\\Core\\Model\\Channel',
                7 => 'Sylius\\Component\\Core\\Model\\Channel',
                9 => 'Sylius\\Component\\Core\\Model\\Channel',
                12 => 'Sylius\\Component\\Core\\Model\\Channel',
                15 => 'Sylius\\Component\\Core\\Model\\Channel',
                17 => 'Sylius\\Component\\Core\\Model\\Channel',
                'Sylius\\Component\\Core\\Model\\Channel',
            ],
            'property' => [
                3 => 'baseCurrency',
                5 => 'defaultLocale',
                7 => 'themeName',
                9 => 'taxCalculationStrategy',
                12 => 'contactEmail',
                15 => 'contactPhoneNumber',
                17 => 'channelPriceHistoryConfig',
                'shopBillingData',
            ],
            'message' => [
                4 => 'sylius.channel.base_currency.not_blank',
                6 => 'sylius.channel.default_locale.not_blank',
                10 => 'sylius.channel.tax_calculation_strategy.not_blank',
                14 => 'sylius.channel.contact_email.invalid',
            ],
            'maxMessage' => [
                8 => 'sylius.channel.theme_name.max_length',
                11 => 'sylius.channel.tax_calculation_strategy.max_length',
                13 => 'sylius.channel.contact_email.max',
                16 => 'sylius.channel.contact_phone_number.max_length',
            ],
            'max' => [
                8 => 255,
                11 => 255,
                13 => 255,
                16 => 255,
            ],
            'minMessage' => [
                13 => 'sylius.channel.contact_email.min',
            ],
            'min' => [
                13 => 2,
            ],
            'mode' => [
                14 => 'strict',
            ],
            'cascadingStrategy' => [
                17 => 2,
            ],
            'traversalStrategy' => [
                17 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
144 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelInterface',
            ],
            'defaultGroup' => [
                'ChannelInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
145 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Locale\\Model\\LocalesAwareInterface',
            ],
            'defaultGroup' => [
                'LocalesAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
146 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Currency\\Model\\CurrenciesAwareInterface',
            ],
            'defaultGroup' => [
                'CurrenciesAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
147 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\LessThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\LessThan')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPriceHistoryConfig',
                'lowestPriceForDiscountedProductsCheckingPeriod',
            ],
            'defaultGroup' => [
                'ChannelPriceHistoryConfig',
            ],
            'members' => [
                [
                    'lowestPriceForDiscountedProductsCheckingPeriod' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'lowestPriceForDiscountedProductsCheckingPeriod' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\ChannelPriceHistoryConfig',
            ],
            'property' => [
                1 => 'lowestPriceForDiscountedProductsCheckingPeriod',
            ],
            'payload' => [
                2 => null,
                null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'type' => [
                3 => 'int',
            ],
            'message' => [
                4 => 'sylius.channel_price_history_config.lowest_price_for_discounted_products_checking_period.less_than',
                'sylius.channel_price_history_config.lowest_price_for_discounted_products_checking_period.greater_than',
            ],
            'value' => [
                4 => 2147483647,
                0,
            ],
        ],
    ],
    $o[0],
    []
); } },
148 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPriceHistoryConfigInterface',
            ],
            'defaultGroup' => [
                'ChannelPriceHistoryConfigInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
149 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\MaxInteger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\MaxInteger')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\MaxInteger'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        clone $p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\MaxInteger'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ExistingChannelCode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ExistingChannelCode')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                    $o[10],
                ],
                11 => [
                    $o[12],
                    $o[13],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                        $o[13],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPricing',
                2 => 'price',
                5 => 'originalPrice',
                8 => 'minimumPrice',
                11 => 'channelCode',
            ],
            'defaultGroup' => [
                'ChannelPricing',
            ],
            'members' => [
                [
                    'price' => [
                        $o[2],
                    ],
                    'originalPrice' => [
                        $o[5],
                    ],
                    'minimumPrice' => [
                        $o[8],
                    ],
                    'channelCode' => [
                        $o[11],
                    ],
                ],
            ],
            'properties' => [
                [
                    'price' => $o[2],
                    'originalPrice' => $o[5],
                    'minimumPrice' => $o[8],
                    'channelCode' => $o[11],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
                9 => null,
                null,
                12 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.channel_pricing.channel_code.unique',
                12 => 'sylius.channel_pricing.channel_code.not_blank',
            ],
            'fields' => [
                1 => [
                    'channelCode',
                    'productVariant',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                5 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                8 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                11 => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
            ],
            'property' => [
                2 => 'price',
                5 => 'originalPrice',
                8 => 'minimumPrice',
                11 => 'channelCode',
            ],
            'minMessage' => [
                3 => 'sylius.channel_pricing.price.min',
                6 => 'sylius.channel_pricing.price.min',
                9 => 'sylius.channel_pricing.price.min',
            ],
            'min' => [
                3 => 0,
                6 => 0,
                9 => 0,
            ],
        ],
    ],
    $o[0],
    []
); } },
150 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ChannelPricingInterface',
            ],
            'defaultGroup' => [
                'ChannelPricingInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
151 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\RegisteredUser'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\RegisteredUser')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_customer_guest' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius_api_user_create' => [
                        $o[3],
                    ],
                    'sylius_api_user_update' => [
                        $o[3],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\Customer',
                2 => 'gender',
                4 => 'user',
            ],
            'defaultGroup' => [
                'Customer',
            ],
            'members' => [
                [
                    'gender' => [
                        $o[2],
                    ],
                    'user' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'gender' => $o[2],
                    'user' => $o[4],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
            ],
            'groups' => [
                1 => [
                    'sylius_customer_guest',
                ],
                3 => [
                    'sylius_api_user_create',
                    'sylius_api_user_update',
                ],
            ],
            'message' => [
                1 => 'sylius.customer.email.registered',
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\Customer',
                4 => 'Sylius\\Component\\Core\\Model\\Customer',
            ],
            'property' => [
                2 => 'gender',
                4 => 'user',
            ],
            'choices' => [
                3 => [
                    'u',
                    'm',
                    'f',
                ],
            ],
            'cascadingStrategy' => [
                4 => 2,
            ],
            'traversalStrategy' => [
                4 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
152 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\CustomerInterface',
            ],
            'defaultGroup' => [
                'CustomerInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
153 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Review\\Model\\ReviewerInterface',
            ],
            'defaultGroup' => [
                'ReviewerInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
154 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductReviewerInterface',
            ],
            'defaultGroup' => [
                'ProductReviewerInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
155 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\User\\Model\\UserAwareInterface',
            ],
            'defaultGroup' => [
                'UserAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
156 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionSubjectCoupon'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\PromotionBundle\\Validator\\Constraints\\PromotionSubjectCoupon')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderShippingMethodEligibility')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderProductEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderProductEligibility')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Currency'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Currency')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                    $o[3],
                    $o[4],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_promotion_coupon' => [
                        $o[1],
                    ],
                    'sylius_checkout_complete' => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius_promotion_coupon' => [
                        $o[12],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\Order',
                5 => 'shippingAddress',
                'billingAddress',
                'shipments',
                'payments',
                'currencyCode',
                11 => 'promotionCoupon',
            ],
            'defaultGroup' => [
                'Order',
            ],
            'members' => [
                [
                    'shippingAddress' => [
                        $o[5],
                    ],
                    'billingAddress' => [
                        $o[6],
                    ],
                    'shipments' => [
                        $o[7],
                    ],
                    'payments' => [
                        $o[8],
                    ],
                    'currencyCode' => [
                        $o[9],
                    ],
                    'promotionCoupon' => [
                        $o[11],
                    ],
                ],
            ],
            'properties' => [
                [
                    'shippingAddress' => $o[5],
                    'billingAddress' => $o[6],
                    'shipments' => $o[7],
                    'payments' => $o[8],
                    'currencyCode' => $o[9],
                    'promotionCoupon' => $o[11],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                null,
                null,
                10 => null,
                12 => null,
            ],
            'groups' => [
                1 => [
                    'sylius_promotion_coupon',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius_promotion_coupon',
                ],
            ],
            'message' => [
                2 => 'sylius.order.shipping_method_eligibility',
                10 => 'sylius.order.currency_code.not_valid',
                12 => 'sylius.promotion_coupon.is_invalid',
            ],
            'methodNotAvailableMessage' => [
                2 => 'sylius.order.shipping_method_not_available',
            ],
            'cascadingStrategy' => [
                5 => 2,
                2,
                2,
                2,
            ],
            'traversalStrategy' => [
                5 => 1,
                1,
                1,
                1,
            ],
            'class' => [
                5 => 'Sylius\\Component\\Core\\Model\\Order',
                'Sylius\\Component\\Core\\Model\\Order',
                'Sylius\\Component\\Core\\Model\\Order',
                'Sylius\\Component\\Core\\Model\\Order',
                'Sylius\\Component\\Core\\Model\\Order',
                11 => 'Sylius\\Component\\Core\\Model\\Order',
            ],
            'property' => [
                5 => 'shippingAddress',
                'billingAddress',
                'shipments',
                'payments',
                'currencyCode',
                11 => 'promotionCoupon',
            ],
        ],
    ],
    $o[0],
    []
); } },
157 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\OrderInterface',
            ],
            'defaultGroup' => [
                'OrderInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
158 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionSubjectInterface',
            ],
            'defaultGroup' => [
                'PromotionSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
159 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Channel\\Model\\ChannelAwareInterface',
            ],
            'defaultGroup' => [
                'ChannelAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
160 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Customer\\Model\\CustomerAwareInterface',
            ],
            'defaultGroup' => [
                'CustomerAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
161 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\PromotionCouponAwarePromotionSubjectInterface',
            ],
            'defaultGroup' => [
                'PromotionCouponAwarePromotionSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
162 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Promotion\\Model\\CountablePromotionSubjectInterface',
            ],
            'defaultGroup' => [
                'CountablePromotionSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
163 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Payment\\Model\\PaymentsSubjectInterface',
            ],
            'defaultGroup' => [
                'PaymentsSubjectInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
164 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Payment',
                'method',
            ],
            'defaultGroup' => [
                'Payment',
            ],
            'members' => [
                [
                    'method' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'method' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius_order_pay' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\Payment',
            ],
            'property' => [
                1 => 'method',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius_order_pay',
                ],
            ],
            'message' => [
                2 => 'sylius.payment.method.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
165 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PaymentInterface',
            ],
            'defaultGroup' => [
                'PaymentInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
166 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\MolliePlugin\\Validator\\Constraints\\PaymentMethodMollieChannelUnique'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\MolliePlugin\\Validator\\Constraints\\PaymentMethodMollieChannelUnique')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\PaymentMethod',
                2 => 'gatewayConfig',
            ],
            'defaultGroup' => [
                'PaymentMethod',
            ],
            'members' => [
                [
                    'gatewayConfig' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'gatewayConfig' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
            ],
            'cascadingStrategy' => [
                2 => 2,
            ],
            'traversalStrategy' => [
                2 => 1,
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\PaymentMethod',
            ],
            'property' => [
                2 => 'gatewayConfig',
            ],
        ],
    ],
    $o[0],
    []
); } },
167 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PaymentMethodInterface',
            ],
            'defaultGroup' => [
                'PaymentMethodInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
168 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Channel\\Model\\ChannelsAwareInterface',
            ],
            'defaultGroup' => [
                'ChannelsAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
169 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllVariantPricesDefined'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllVariantPricesDefined')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\Product',
                2 => 'images',
                'productTaxons',
            ],
            'defaultGroup' => [
                'Product',
            ],
            'members' => [
                [
                    'images' => [
                        $o[2],
                    ],
                    'productTaxons' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'images' => $o[2],
                    'productTaxons' => $o[3],
                ],
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
            'cascadingStrategy' => [
                2 => 2,
                2,
            ],
            'traversalStrategy' => [
                2 => 1,
                1,
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\Product',
                'Sylius\\Component\\Core\\Model\\Product',
            ],
            'property' => [
                2 => 'images',
                'productTaxons',
            ],
        ],
    ],
    $o[0],
    []
); } },
170 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductInterface',
            ],
            'defaultGroup' => [
                'ProductInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
171 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ReviewableProductInterface',
            ],
            'defaultGroup' => [
                'ReviewableProductInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
172 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ImagesAwareInterface',
            ],
            'defaultGroup' => [
                'ImagesAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
173 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Review\\Model\\ReviewableInterface',
            ],
            'defaultGroup' => [
                'ReviewableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
174 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductTaxonsAwareInterface',
            ],
            'defaultGroup' => [
                'ProductTaxonsAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
175 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductImageVariantsBelongToOwner'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ProductImageVariantsBelongToOwner')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductImage',
                2 => 'file',
            ],
            'defaultGroup' => [
                'ProductImage',
            ],
            'members' => [
                [
                    'file' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'file' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\ProductImage',
            ],
            'property' => [
                2 => 'file',
            ],
            'binaryFormat' => [
                3 => false,
            ],
            'mimeTypes' => [
                3 => 'image/*',
            ],
            'maxSizeMessage' => [
                3 => 'sylius.product_image.file.max_size',
            ],
            'uploadIniSizeErrorMessage' => [
                3 => 'sylius.product_image.file.upload_ini_size',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                3 => 10000000,
            ],
        ],
    ],
    $o[0],
    []
); } },
176 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductImageInterface',
            ],
            'defaultGroup' => [
                'ProductImageInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
177 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PositionAwareInterface',
            ],
            'defaultGroup' => [
                'PositionAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
178 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
                4 => [
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductTaxon',
                2 => 'product',
                4 => 'taxon',
            ],
            'defaultGroup' => [
                'ProductTaxon',
            ],
            'members' => [
                [
                    'product' => [
                        $o[2],
                    ],
                    'taxon' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'product' => $o[2],
                    'taxon' => $o[4],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                5 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
            ],
            'message' => [
                1 => 'sylius.product_taxon.unique',
                3 => 'sylius.product_taxon.product.not_blank',
                5 => 'sylius.product_taxon.taxon.not_blank',
            ],
            'fields' => [
                1 => [
                    'product',
                    'taxon',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Component\\Core\\Model\\ProductTaxon',
                4 => 'Sylius\\Component\\Core\\Model\\ProductTaxon',
            ],
            'property' => [
                2 => 'product',
                4 => 'taxon',
            ],
        ],
    ],
    $o[0],
    []
); } },
179 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductTaxonInterface',
            ],
            'defaultGroup' => [
                'ProductTaxonInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
180 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllPricesDefined'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllPricesDefined')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\SingleValueForProductVariantOption'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\SingleValueForProductVariantOption')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Expression'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Expression')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
                13 => [
                    $o[14],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                    ],
                ],
                13 => [
                    'sylius' => [
                        $o[14],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductVariant',
                3 => 'onHand',
                7 => 'weight',
                9 => 'width',
                11 => 'height',
                13 => 'depth',
                15 => 'channelPricings',
                'translations',
            ],
            'defaultGroup' => [
                'ProductVariant',
            ],
            'members' => [
                [
                    'onHand' => [
                        $o[3],
                    ],
                    'weight' => [
                        $o[7],
                    ],
                    'width' => [
                        $o[9],
                    ],
                    'height' => [
                        $o[11],
                    ],
                    'depth' => [
                        $o[13],
                    ],
                    'channelPricings' => [
                        $o[15],
                    ],
                    'translations' => [
                        $o[16],
                    ],
                ],
            ],
            'properties' => [
                [
                    'onHand' => $o[3],
                    'weight' => $o[7],
                    'width' => $o[9],
                    'height' => $o[11],
                    'depth' => $o[13],
                    'channelPricings' => $o[15],
                    'translations' => $o[16],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                null,
                null,
                8 => null,
                10 => null,
                12 => null,
                14 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
                14 => [
                    'sylius',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                7 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                9 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                11 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                13 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                15 => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                'Sylius\\Component\\Core\\Model\\ProductVariant',
            ],
            'property' => [
                3 => 'onHand',
                7 => 'weight',
                9 => 'width',
                11 => 'height',
                13 => 'depth',
                15 => 'channelPricings',
                'translations',
            ],
            'message' => [
                4 => 'sylius.product_variant.onHand.not_blank',
                6 => 'sylius.product_variant.onHand.reserved',
            ],
            'minMessage' => [
                5 => 'sylius.product_variant.onHand.min',
                8 => 'sylius.product_variant.weight.min',
                10 => 'sylius.product_variant.width.min',
                12 => 'sylius.product_variant.height.min',
                14 => 'sylius.product_variant.depth.min',
            ],
            'min' => [
                5 => 0,
                8 => 0,
                10 => 0,
                12 => 0,
                14 => 0,
            ],
            'expression' => [
                6 => 'this.getOnHand() >= this.getOnHold()',
            ],
            'cascadingStrategy' => [
                15 => 2,
                2,
            ],
            'traversalStrategy' => [
                15 => 1,
                1,
            ],
        ],
    ],
    $o[0],
    []
); } },
181 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductVariantInterface',
            ],
            'defaultGroup' => [
                'ProductVariantInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
182 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Doctrine\\Common\\Comparable',
            ],
            'defaultGroup' => [
                'Comparable',
            ],
        ],
    ],
    $o[0],
    []
); } },
183 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ProductImagesAwareInterface',
            ],
            'defaultGroup' => [
                'ProductImagesAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
184 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Resource\\Model\\VersionedInterface',
            ],
            'defaultGroup' => [
                'VersionedInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
185 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Taxation\\Model\\TaxableInterface',
            ],
            'defaultGroup' => [
                'TaxableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
186 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Inventory\\Model\\StockableInterface',
            ],
            'defaultGroup' => [
                'StockableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
187 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Shipping\\Model\\ShippableInterface',
            ],
            'defaultGroup' => [
                'ShippableInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
188 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PromotionCoupon',
                'perCustomerUsageLimit',
            ],
            'defaultGroup' => [
                'PromotionCoupon',
            ],
            'members' => [
                [
                    'perCustomerUsageLimit' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'perCustomerUsageLimit' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\PromotionCoupon',
            ],
            'property' => [
                1 => 'perCustomerUsageLimit',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
            ],
            'minMessage' => [
                2 => 'sylius.promotion_coupon.per_customer_usage_limit.min',
            ],
            'min' => [
                2 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
189 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\PromotionCouponInterface',
            ],
            'defaultGroup' => [
                'PromotionCouponInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
190 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\RequestResetPasswordEmail',
                'email',
            ],
            'defaultGroup' => [
                'RequestResetPasswordEmail',
            ],
            'members' => [
                [
                    'email' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\RequestResetPasswordEmail',
            ],
            'property' => [
                1 => 'email',
            ],
            'payload' => [
                2 => null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.admin.password_reset_request.email.not_blank',
                4 => 'sylius.admin.password_reset_request.email.invalid',
            ],
            'maxMessage' => [
                3 => 'sylius.admin.password_reset_request.email.max',
            ],
            'minMessage' => [
                3 => 'sylius.admin.password_reset_request.email.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 2,
            ],
            'mode' => [
                4 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
191 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ResendOrderConfirmationEmailWithValidOrderState'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ResendOrderConfirmationEmailWithValidOrderState')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\ResendOrderConfirmationEmail',
            ],
            'defaultGroup' => [
                'ResendOrderConfirmationEmail',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
192 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ResendShipmentConfirmationEmailWithValidShipmentState'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ResendShipmentConfirmationEmailWithValidShipmentState')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\ResendShipmentConfirmationEmail',
            ],
            'defaultGroup' => [
                'ResendShipmentConfirmationEmail',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
193 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\ChannelCodeCollection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Collection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Collection')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Required'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Required')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShippingMethod',
                'zone',
                3 => 'configuration',
            ],
            'defaultGroup' => [
                'ShippingMethod',
            ],
            'members' => [
                [
                    'zone' => [
                        $o[1],
                    ],
                    'configuration' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'zone' => $o[1],
                    'configuration' => $o[3],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
                [
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                    $o[9],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius_shipping_method_calculator_rate' => [
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
                3 => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
            ],
            'property' => [
                1 => 'zone',
                3 => 'configuration',
            ],
            'payload' => [
                2 => null,
                4 => null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                4 => [
                    'sylius_shipping_method_calculator_rate',
                ],
                [
                    'sylius_shipping_method_calculator_rate',
                ],
                [
                    'sylius_shipping_method_calculator_rate',
                ],
                [
                    'sylius_shipping_method_calculator_rate',
                ],
                [
                    'sylius_shipping_method_calculator_rate',
                ],
                [
                    'sylius_shipping_method_calculator_rate',
                ],
            ],
            'message' => [
                2 => 'sylius.shipping_method.zone.not_blank',
            ],
            'channelAwarePropertyPath' => [
                4 => 'shippingMethod',
            ],
            'validateAgainstAllChannels' => [
                4 => true,
            ],
            'fields' => [
                5 => [
                    'amount' => $o[6],
                ],
            ],
            'minMessage' => [
                7 => 'sylius.shipping_method.calculator.min',
            ],
            'min' => [
                7 => 0,
            ],
            'type' => [
                9 => 'numeric',
            ],
        ],
    ],
    $o[0],
    []
); } },
194 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShippingMethodInterface',
            ],
            'defaultGroup' => [
                'ShippingMethodInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
195 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxRate',
                'zone',
            ],
            'defaultGroup' => [
                'TaxRate',
            ],
            'members' => [
                [
                    'zone' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'zone' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\TaxRate',
            ],
            'property' => [
                1 => 'zone',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.tax_rate.zone.not_blank',
            ],
        ],
    ],
    $o[0],
    []
); } },
196 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxRateInterface',
            ],
            'defaultGroup' => [
                'TaxRateInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
197 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\Taxon',
                'images',
            ],
            'defaultGroup' => [
                'Taxon',
            ],
            'members' => [
                [
                    'images' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'images' => $o[1],
                ],
            ],
            'cascadingStrategy' => [
                1 => 2,
            ],
            'traversalStrategy' => [
                1 => 1,
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\Taxon',
            ],
            'property' => [
                1 => 'images',
            ],
        ],
    ],
    $o[0],
    []
); } },
198 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxonInterface',
            ],
            'defaultGroup' => [
                'TaxonInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
199 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\AllowedImageMimeTypes')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxonImage',
                'file',
            ],
            'defaultGroup' => [
                'TaxonImage',
            ],
            'members' => [
                [
                    'file' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'file' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\TaxonImage',
            ],
            'property' => [
                1 => 'file',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'binaryFormat' => [
                2 => false,
            ],
            'mimeTypes' => [
                2 => 'image/*',
            ],
            'maxSizeMessage' => [
                2 => 'sylius.taxon_image.file.max_size',
            ],
            'uploadIniSizeErrorMessage' => [
                2 => 'sylius.taxon_image.file.upload_ini_size',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                2 => 10000000,
            ],
        ],
    ],
    $o[0],
    []
); } },
200 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\TaxonImageInterface',
            ],
            'defaultGroup' => [
                'TaxonImageInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
201 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Luhn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Luhn')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Payum\\Bundle\\PayumBundle\\Validator\\Constraints\\CreditCardDate'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Payum\\Bundle\\PayumBundle\\Validator\\Constraints\\CreditCardDate')),
        clone ($p['DateTime'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('DateTime')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Payum\\Core\\Model\\CreditCard',
                'number',
                4 => 'holder',
                7 => 'securityCode',
                10 => 'expireAt',
            ],
            'defaultGroup' => [
                'CreditCard',
            ],
            'members' => [
                [
                    'number' => [
                        $o[1],
                    ],
                    'holder' => [
                        $o[4],
                    ],
                    'securityCode' => [
                        $o[7],
                    ],
                    'expireAt' => [
                        $o[10],
                    ],
                ],
            ],
            'properties' => [
                [
                    'number' => $o[1],
                    'holder' => $o[4],
                    'securityCode' => $o[7],
                    'expireAt' => $o[10],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                    $o[9],
                ],
                10 => [
                    $o[11],
                    $o[12],
                    $o[13],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'Payum' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'Payum' => [
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'Payum' => [
                        $o[8],
                        $o[9],
                    ],
                ],
                10 => [
                    'Payum' => [
                        $o[11],
                        $o[12],
                        $o[13],
                    ],
                ],
            ],
            'class' => [
                1 => 'Payum\\Core\\Model\\CreditCard',
                4 => 'Payum\\Core\\Model\\CreditCard',
                7 => 'Payum\\Core\\Model\\CreditCard',
                10 => 'Payum\\Core\\Model\\CreditCard',
            ],
            'property' => [
                1 => 'number',
                4 => 'holder',
                7 => 'securityCode',
                10 => 'expireAt',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
                null,
                8 => null,
                null,
                11 => null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'Payum',
                ],
                [
                    'Payum',
                ],
                5 => [
                    'Payum',
                ],
                [
                    'Payum',
                ],
                8 => [
                    'Payum',
                ],
                [
                    'Payum',
                ],
                11 => [
                    'Payum',
                ],
                [
                    'Payum',
                ],
                [
                    'Payum',
                ],
            ],
            'min' => [
                6 => 4,
                9 => 3,
                13 => $o[14],
            ],
            'max' => [
                9 => 4,
            ],
            'type' => [
                12 => 'DateTimeInterface',
            ],
        ],
    ],
    $o[0],
    [
        -14 => [
            'date' => '2025-10-31 00:00:00.000000',
            'timezone_type' => 3,
            'timezone' => 'UTC',
        ],
    ]
); } },
202 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Payum\\Core\\Model\\CreditCardInterface',
            ],
            'defaultGroup' => [
                'CreditCardInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
203 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\AdminBundle\\Form\\Model\\PasswordReset',
                'password',
            ],
            'defaultGroup' => [
                'PasswordReset',
            ],
            'members' => [
                [
                    'password' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'password' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\AdminBundle\\Form\\Model\\PasswordReset',
            ],
            'property' => [
                1 => 'password',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.admin.reset_password.password.not_blank',
            ],
            'maxMessage' => [
                3 => 'sylius.admin.reset_password.password.max',
            ],
            'minMessage' => [
                3 => 'sylius.admin.reset_password.password.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
204 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\AdminBundle\\Form\\Model\\PasswordResetRequest',
                'email',
            ],
            'defaultGroup' => [
                'PasswordResetRequest',
            ],
            'members' => [
                [
                    'email' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\AdminBundle\\Form\\Model\\PasswordResetRequest',
            ],
            'property' => [
                1 => 'email',
            ],
            'payload' => [
                2 => null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.admin.password_reset_request.email.not_blank',
                4 => 'sylius.admin.password_reset_request.email.invalid',
            ],
            'maxMessage' => [
                3 => 'sylius.admin.password_reset_request.email.max',
            ],
            'minMessage' => [
                3 => 'sylius.admin.password_reset_request.email.min',
            ],
            'max' => [
                3 => 254,
            ],
            'min' => [
                3 => 2,
            ],
            'mode' => [
                4 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
205 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ConfirmResetPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ConfirmResetPassword')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserResetPasswordTokenExists'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserResetPasswordTokenExists')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserResetPasswordTokenNotExpired'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserResetPasswordTokenNotExpired')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
                8 => [
                    $o[9],
                    $o[10],
                    $o[11],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
                8 => [
                    'sylius' => [
                        $o[9],
                        $o[10],
                        $o[11],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
                2 => 'newPassword',
                5 => 'confirmNewPassword',
                8 => 'token',
            ],
            'defaultGroup' => [
                'ResetPassword',
            ],
            'members' => [
                [
                    'newPassword' => [
                        $o[2],
                    ],
                    'confirmNewPassword' => [
                        $o[5],
                    ],
                    'token' => [
                        $o[8],
                    ],
                ],
            ],
            'properties' => [
                [
                    'newPassword' => $o[2],
                    'confirmNewPassword' => $o[5],
                    'token' => $o[8],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
                9 => null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                9 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
                5 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
                8 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
            ],
            'property' => [
                2 => 'newPassword',
                5 => 'confirmNewPassword',
                8 => 'token',
            ],
            'maxMessage' => [
                4 => 'sylius.user.password.max',
                7 => 'sylius.user.password.max',
            ],
            'minMessage' => [
                4 => 'sylius.user.password.min',
                7 => 'sylius.user.password.min',
            ],
            'max' => [
                4 => 254,
                7 => 254,
            ],
            'min' => [
                4 => 4,
                7 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
206 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AddingEligibleProductVariantToCart'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AddingEligibleProductVariantToCart')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PlacedOrderCartItemsImmutable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PlacedOrderCartItemsImmutable')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemQuantityRange'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemQuantityRange')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                3 => 'productVariantCode',
                5 => 'quantity',
            ],
            'defaultGroup' => [
                'AddItemToCart',
            ],
            'members' => [
                [
                    'productVariantCode' => [
                        $o[3],
                    ],
                    'quantity' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'productVariantCode' => $o[3],
                    'quantity' => $o[5],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                4 => null,
                6 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                3 => 'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                5 => 'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
            ],
            'property' => [
                3 => 'productVariantCode',
                5 => 'quantity',
            ],
            'message' => [
                4 => 'sylius.order_item.product_variant.not_blank',
                6 => 'sylius.order_item.quantity.not_blank',
            ],
            'notInRangeMessage' => [
                7 => 'sylius.cart_item.quantity.not_in_range',
            ],
            'min' => [
                7 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
207 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\IriToIdentifierConversionAwareInterface',
            ],
            'defaultGroup' => [
                'IriToIdentifierConversionAwareInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
208 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentRequestActionEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentRequestActionEligibility')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                ],
                4 => [
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Payment\\AddPaymentRequest',
                2 => 'paymentId',
                4 => 'paymentMethodCode',
            ],
            'defaultGroup' => [
                'AddPaymentRequest',
            ],
            'members' => [
                [
                    'paymentId' => [
                        $o[2],
                    ],
                    'paymentMethodCode' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'paymentId' => $o[2],
                    'paymentMethodCode' => $o[4],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                5 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Bundle\\ApiBundle\\Command\\Payment\\AddPaymentRequest',
                4 => 'Sylius\\Bundle\\ApiBundle\\Command\\Payment\\AddPaymentRequest',
            ],
            'property' => [
                2 => 'paymentId',
                4 => 'paymentMethodCode',
            ],
        ],
    ],
    $o[0],
    []
); } },
209 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueReviewerEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueReviewerEmail')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                'rating',
                4 => 'title',
                7 => 'comment',
                9 => 'productCode',
                11 => 'email',
            ],
            'defaultGroup' => [
                'AddProductReview',
            ],
            'members' => [
                [
                    'rating' => [
                        $o[1],
                    ],
                    'title' => [
                        $o[4],
                    ],
                    'comment' => [
                        $o[7],
                    ],
                    'productCode' => [
                        $o[9],
                    ],
                    'email' => [
                        $o[11],
                    ],
                ],
            ],
            'properties' => [
                [
                    'rating' => $o[1],
                    'title' => $o[4],
                    'comment' => $o[7],
                    'productCode' => $o[9],
                    'email' => $o[11],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                    $o[13],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'sylius' => [
                        $o[12],
                        $o[13],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                4 => 'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                7 => 'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                9 => 'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                11 => 'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
            ],
            'property' => [
                1 => 'rating',
                4 => 'title',
                7 => 'comment',
                9 => 'productCode',
                11 => 'email',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
                null,
                8 => null,
                10 => null,
                12 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
                12 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.review.rating.not_blank',
                5 => 'sylius.review.title.not_blank',
                8 => 'sylius.review.comment.not_blank',
                10 => 'sylius.review.product.not_blank',
                12 => 'sylius.review.author.not_blank',
            ],
            'notInRangeMessage' => [
                3 => 'sylius.review.rating.not_in_range',
            ],
            'min' => [
                3 => 1,
                6 => 2,
            ],
            'max' => [
                3 => 5,
                6 => 255,
            ],
            'maxMessage' => [
                6 => 'sylius.review.title.max_length',
            ],
            'minMessage' => [
                6 => 'sylius.review.title.min_length',
            ],
        ],
    ],
    $o[0],
    []
); } },
210 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AdminResetPasswordTokenNonExpired'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\AdminResetPasswordTokenNonExpired')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Expression'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Expression')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\ResetPassword',
                2 => 'newPassword',
                6 => 'confirmNewPassword',
            ],
            'defaultGroup' => [
                'ResetPassword',
            ],
            'members' => [
                [
                    'newPassword' => [
                        $o[2],
                    ],
                    'confirmNewPassword' => [
                        $o[6],
                    ],
                ],
            ],
            'properties' => [
                [
                    'newPassword' => $o[2],
                    'confirmNewPassword' => $o[6],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                null,
                7 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\ResetPassword',
                6 => 'Sylius\\Bundle\\CoreBundle\\Command\\Admin\\Account\\ResetPassword',
            ],
            'property' => [
                2 => 'newPassword',
                6 => 'confirmNewPassword',
            ],
            'message' => [
                3 => 'sylius.admin.reset_password.password.not_blank',
                5 => 'sylius.admin.reset_password.mismatch',
                7 => 'sylius.admin.reset_password.password.not_blank',
            ],
            'maxMessage' => [
                4 => 'sylius.admin.reset_password.password.max',
                8 => 'sylius.admin.reset_password.password.max',
            ],
            'minMessage' => [
                4 => 'sylius.admin.reset_password.password.min',
                8 => 'sylius.admin.reset_password.password.min',
            ],
            'max' => [
                4 => 254,
                8 => 254,
            ],
            'min' => [
                4 => 4,
                8 => 4,
            ],
            'expression' => [
                5 => 'this.newPassword === this.confirmNewPassword',
            ],
        ],
    ],
    $o[0],
    []
); } },
211 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChangedItemQuantityInCart'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChangedItemQuantityInCart')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemQuantityRange'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemQuantityRange')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
                2 => 'quantity',
            ],
            'defaultGroup' => [
                'ChangeItemQuantityInCart',
            ],
            'members' => [
                [
                    'quantity' => [
                        $o[2],
                    ],
                ],
            ],
            'properties' => [
                [
                    'quantity' => $o[2],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
            ],
            'property' => [
                2 => 'quantity',
            ],
            'message' => [
                3 => 'sylius.order_item.quantity.not_blank',
            ],
            'notInRangeMessage' => [
                4 => 'sylius.cart_item.quantity.not_in_range',
            ],
            'min' => [
                4 => 1,
            ],
        ],
    ],
    $o[0],
    []
); } },
212 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CanPaymentMethodBeChanged'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CanPaymentMethodBeChanged')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangePaymentMethod',
            ],
            'defaultGroup' => [
                'ChangePaymentMethod',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
213 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectChangeShopUserConfirmPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectChangeShopUserConfirmPassword')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone ($p['Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPassword')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
                2 => [
                    $o[3],
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
                2 => [
                    'sylius' => [
                        $o[3],
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangeShopUserPassword',
                2 => 'currentPassword',
                5 => 'newPassword',
            ],
            'defaultGroup' => [
                'ChangeShopUserPassword',
            ],
            'members' => [
                [
                    'currentPassword' => [
                        $o[2],
                    ],
                    'newPassword' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'currentPassword' => $o[2],
                    'newPassword' => $o[5],
                ],
            ],
            'payload' => [
                1 => null,
                3 => null,
                null,
                6 => null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                3 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'class' => [
                2 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangeShopUserPassword',
                5 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangeShopUserPassword',
            ],
            'property' => [
                2 => 'currentPassword',
                5 => 'newPassword',
            ],
            'message' => [
                3 => 'sylius.user.plainPassword.wrong_current',
            ],
            'maxMessage' => [
                4 => 'sylius.user.password.max',
                7 => 'sylius.user.password.max',
            ],
            'minMessage' => [
                4 => 'sylius.user.password.min',
                7 => 'sylius.user.password.min',
            ],
            'max' => [
                4 => 254,
                7 => 254,
            ],
            'min' => [
                4 => 4,
                7 => 4,
            ],
        ],
    ],
    $o[0],
    []
); } },
214 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenPaymentMethodEligibility')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChoosePaymentMethod',
            ],
            'defaultGroup' => [
                'ChoosePaymentMethod',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
215 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ChosenShippingMethodEligibility')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChooseShippingMethod',
            ],
            'defaultGroup' => [
                'ChooseShippingMethod',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
216 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CheckoutCompletion'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CheckoutCompletion')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderProductEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderProductEligibility')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderItemAvailability'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderItemAvailability')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderPaymentMethodEligibility')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderShippingMethodEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderShippingMethodEligibility')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                    $o[3],
                    $o[4],
                    $o[5],
                    $o[6],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius_checkout_complete' => [
                        $o[1],
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\CompleteOrder',
            ],
            'defaultGroup' => [
                'CompleteOrder',
            ],
            'payload' => [
                1 => null,
                null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
                [
                    'sylius_checkout_complete',
                ],
            ],
            'message' => [
                6 => 'sylius.order.shipping_method_eligibility',
            ],
            'methodNotAvailableMessage' => [
                6 => 'sylius.order.shipping_method_not_available',
            ],
        ],
    ],
    $o[0],
    []
); } },
217 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Range'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                'promotionCode',
                3 => 'amount',
                6 => 'codeLength',
                9 => 'usageLimit',
            ],
            'defaultGroup' => [
                'GeneratePromotionCoupon',
            ],
            'members' => [
                [
                    'promotionCode' => [
                        $o[1],
                    ],
                    'amount' => [
                        $o[3],
                    ],
                    'codeLength' => [
                        $o[6],
                    ],
                    'usageLimit' => [
                        $o[9],
                    ],
                ],
            ],
            'properties' => [
                [
                    'promotionCode' => $o[1],
                    'amount' => $o[3],
                    'codeLength' => $o[6],
                    'usageLimit' => $o[9],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'sylius' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'sylius' => [
                        $o[10],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                3 => 'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                6 => 'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                9 => 'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
            ],
            'property' => [
                1 => 'promotionCode',
                3 => 'amount',
                6 => 'codeLength',
                9 => 'usageLimit',
            ],
            'payload' => [
                2 => null,
                4 => null,
                null,
                7 => null,
                null,
                10 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                7 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                10 => [
                    'sylius',
                ],
            ],
            'message' => [
                4 => 'sylius.promotion_coupon_generator_instruction.amount.not_blank',
                7 => 'sylius.promotion_coupon_generator_instruction.code_length.not_blank',
            ],
            'minMessage' => [
                5 => 'sylius.promotion_coupon_generator_instruction.amount.min',
                10 => 'sylius.promotion_coupon_generator_instruction.usage_limit.min',
            ],
            'min' => [
                5 => 1,
                8 => 1,
                10 => 1,
            ],
            'notInRangeMessage' => [
                8 => 'sylius.promotion_coupon_generator_instruction.code_length.not_in_range',
            ],
            'max' => [
                8 => 40,
            ],
        ],
    ],
    $o[0],
    []
); } },
218 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\PositiveOrZero'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\PositiveOrZero')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\OrderItem',
                'variant',
                3 => 'quantity',
            ],
            'defaultGroup' => [
                'OrderItem',
            ],
            'members' => [
                [
                    'variant' => [
                        $o[1],
                    ],
                    'quantity' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'variant' => $o[1],
                    'quantity' => $o[3],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'Default' => [
                        $o[2],
                    ],
                    'OrderItem' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'Default' => [
                        $o[4],
                        $o[5],
                    ],
                    'OrderItem' => [
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\OrderItem',
                3 => 'Sylius\\Component\\Core\\Model\\OrderItem',
            ],
            'property' => [
                1 => 'variant',
                3 => 'quantity',
            ],
            'payload' => [
                2 => null,
                4 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'Default',
                    'OrderItem',
                ],
                4 => [
                    'Default',
                    'OrderItem',
                ],
                [
                    'Default',
                    'OrderItem',
                ],
            ],
            'value' => [
                5 => 0,
            ],
        ],
    ],
    $o[0],
    []
); } },
219 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\OrderItemInterface',
            ],
            'defaultGroup' => [
                'OrderItemInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
220 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueShopUserEmail'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UniqueShopUserEmail')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                'firstName',
                4 => 'lastName',
                7 => 'password',
                10 => 'email',
            ],
            'defaultGroup' => [
                'RegisterShopUser',
            ],
            'members' => [
                [
                    'firstName' => [
                        $o[1],
                    ],
                    'lastName' => [
                        $o[4],
                    ],
                    'password' => [
                        $o[7],
                    ],
                    'email' => [
                        $o[10],
                    ],
                ],
            ],
            'properties' => [
                [
                    'firstName' => $o[1],
                    'lastName' => $o[4],
                    'password' => $o[7],
                    'email' => $o[10],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                    $o[6],
                ],
                7 => [
                    $o[8],
                    $o[9],
                ],
                10 => [
                    $o[11],
                    $o[12],
                    $o[13],
                    $o[14],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                        $o[6],
                    ],
                ],
                7 => [
                    'sylius' => [
                        $o[8],
                        $o[9],
                    ],
                ],
                10 => [
                    'sylius' => [
                        $o[11],
                        $o[12],
                        $o[13],
                        $o[14],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                4 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                7 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                10 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
            ],
            'property' => [
                1 => 'firstName',
                4 => 'lastName',
                7 => 'password',
                10 => 'email',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
                null,
                8 => null,
                null,
                11 => null,
                null,
                null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                8 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                11 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.customer.first_name.not_blank',
                5 => 'sylius.customer.last_name.not_blank',
                8 => 'sylius.user.plainPassword.not_blank',
                11 => 'sylius.customer.email.not_blank',
                13 => 'sylius.customer.email.invalid',
            ],
            'maxMessage' => [
                3 => 'sylius.customer.first_name.max',
                6 => 'sylius.customer.last_name.max',
                9 => 'sylius.user.password.max',
                12 => 'sylius.customer.email.max',
            ],
            'minMessage' => [
                3 => 'sylius.customer.first_name.min',
                6 => 'sylius.customer.last_name.min',
                9 => 'sylius.user.password.min',
            ],
            'max' => [
                3 => 255,
                6 => 255,
                9 => 254,
                12 => 254,
            ],
            'min' => [
                3 => 2,
                6 => 2,
                9 => 4,
            ],
            'mode' => [
                13 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
221 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Locale'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Locale')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestResetPasswordToken',
                'email',
                4 => 'localeCode',
            ],
            'defaultGroup' => [
                'RequestResetPasswordToken',
            ],
            'members' => [
                [
                    'email' => [
                        $o[1],
                    ],
                    'localeCode' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[1],
                    'localeCode' => $o[4],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestResetPasswordToken',
                4 => 'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestResetPasswordToken',
            ],
            'property' => [
                1 => 'email',
                4 => 'localeCode',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.customer.email.not_blank',
                'sylius.customer.email.invalid',
                5 => 'sylius.locale.code.locale',
            ],
            'mode' => [
                3 => 'strict',
            ],
        ],
    ],
    $o[0],
    []
); } },
222 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserNotVerified'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserNotVerified')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestShopUserVerification',
            ],
            'defaultGroup' => [
                'RequestShopUserVerification',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
223 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\SendContactRequest',
                'email',
                4 => 'message',
            ],
            'defaultGroup' => [
                'SendContactRequest',
            ],
            'members' => [
                [
                    'email' => [
                        $o[1],
                    ],
                    'message' => [
                        $o[4],
                    ],
                ],
            ],
            'properties' => [
                [
                    'email' => $o[1],
                    'message' => $o[4],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
                4 => [
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
                4 => [
                    'sylius' => [
                        $o[5],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Bundle\\ApiBundle\\Command\\SendContactRequest',
                4 => 'Sylius\\Bundle\\ApiBundle\\Command\\SendContactRequest',
            ],
            'property' => [
                1 => 'email',
                4 => 'message',
            ],
            'payload' => [
                2 => null,
                null,
                5 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                5 => [
                    'sylius',
                ],
            ],
            'message' => [
                2 => 'sylius.contact_request.email_is_invalid',
            ],
        ],
    ],
    $o[0],
    []
); } },
224 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShipmentAlreadyShipped'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShipmentAlreadyShipped')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ShipShipment',
            ],
            'defaultGroup' => [
                'ShipShipment',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
225 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Country'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Country')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShopBillingData',
                'countryCode',
            ],
            'defaultGroup' => [
                'ShopBillingData',
            ],
            'members' => [
                [
                    'countryCode' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'countryCode' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\Component\\Core\\Model\\ShopBillingData',
            ],
            'property' => [
                1 => 'countryCode',
            ],
            'payload' => [
                2 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'allowNull' => [
                3 => true,
            ],
        ],
    ],
    $o[0],
    []
); } },
226 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Core\\Model\\ShopBillingDataInterface',
            ],
            'defaultGroup' => [
                'ShopBillingDataInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
227 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderAddressRequirement'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderAddressRequirement')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectOrderAddress'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\CorrectOrderAddress')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PromotionCouponEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\PromotionCouponEligibility')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\OrderNotEmpty')),
        clone ($p['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UpdateCartEmailNotAllowed'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\UpdateCartEmailNotAllowed')),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                    $o[2],
                    $o[3],
                    $o[4],
                    $o[5],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\UpdateCart',
                6 => 'billingAddress',
                'shippingAddress',
            ],
            'defaultGroup' => [
                'UpdateCart',
            ],
            'members' => [
                [
                    'billingAddress' => [
                        $o[6],
                    ],
                    'shippingAddress' => [
                        $o[7],
                    ],
                ],
            ],
            'properties' => [
                [
                    'billingAddress' => $o[6],
                    'shippingAddress' => $o[7],
                ],
            ],
            'payload' => [
                1 => null,
                null,
                null,
                null,
                null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'cascadingStrategy' => [
                6 => 2,
                2,
            ],
            'traversalStrategy' => [
                6 => 1,
                1,
            ],
            'class' => [
                6 => 'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\UpdateCart',
                'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\UpdateCart',
            ],
            'property' => [
                6 => 'billingAddress',
                'shippingAddress',
            ],
        ],
    ],
    $o[0],
    []
); } },
228 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserVerificationTokenEligibility'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sylius\\Bundle\\ApiBundle\\Validator\\Constraints\\ShopUserVerificationTokenEligibility')),
    ],
    null,
    [
        'stdClass' => [
            'constraints' => [
                [
                    $o[1],
                ],
            ],
            'constraintsByGroup' => [
                [
                    'sylius' => [
                        $o[1],
                    ],
                ],
            ],
            'name' => [
                'Sylius\\Bundle\\ApiBundle\\Command\\Account\\VerifyShopUser',
            ],
            'defaultGroup' => [
                'VerifyShopUser',
            ],
            'payload' => [
                1 => null,
            ],
            'groups' => [
                1 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
229 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfig',
                'translations',
            ],
            'defaultGroup' => [
                'MollieGatewayConfig',
            ],
            'members' => [
                [
                    'translations' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'translations' => $o[1],
                ],
            ],
            'cascadingStrategy' => [
                1 => 2,
            ],
            'traversalStrategy' => [
                1 => 1,
            ],
            'class' => [
                1 => 'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfig',
            ],
            'property' => [
                1 => 'translations',
            ],
        ],
    ],
    $o[0],
    []
); } },
230 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Model\\PaymentMethod\\AbstractMethod',
            ],
            'defaultGroup' => [
                'AbstractMethod',
            ],
        ],
    ],
    $o[0],
    []
); } },
231 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Model\\PaymentMethod\\MethodInterface',
            ],
            'defaultGroup' => [
                'MethodInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
232 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfigInterface',
            ],
            'defaultGroup' => [
                'MollieGatewayConfigInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
233 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfigTranslation',
                'name',
            ],
            'defaultGroup' => [
                'MollieGatewayConfigTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfigTranslation',
            ],
            'property' => [
                1 => 'name',
            ],
            'payload' => [
                2 => null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } },
234 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\MollieGatewayConfigTranslationInterface',
            ],
            'defaultGroup' => [
                'MollieGatewayConfigTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
235 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmail',
                'translations',
            ],
            'defaultGroup' => [
                'TemplateMollieEmail',
            ],
            'members' => [
                [
                    'translations' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'translations' => $o[1],
                ],
            ],
            'cascadingStrategy' => [
                1 => 2,
            ],
            'traversalStrategy' => [
                1 => 1,
            ],
            'class' => [
                1 => 'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmail',
            ],
            'property' => [
                1 => 'translations',
            ],
        ],
    ],
    $o[0],
    []
); } },
236 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailInterface',
            ],
            'defaultGroup' => [
                'TemplateMollieEmailInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },
237 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailTranslation',
                'name',
                3 => 'subject',
                5 => 'content',
            ],
            'defaultGroup' => [
                'TemplateMollieEmailTranslation',
            ],
            'members' => [
                [
                    'name' => [
                        $o[1],
                    ],
                    'subject' => [
                        $o[3],
                    ],
                    'content' => [
                        $o[5],
                    ],
                ],
            ],
            'properties' => [
                [
                    'name' => $o[1],
                    'subject' => $o[3],
                    'content' => $o[5],
                ],
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
                5 => [
                    $o[6],
                    $o[7],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'sylius' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'sylius' => [
                        $o[4],
                    ],
                ],
                5 => [
                    'sylius' => [
                        $o[6],
                        $o[7],
                    ],
                ],
            ],
            'class' => [
                1 => 'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailTranslation',
                3 => 'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailTranslation',
                5 => 'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailTranslation',
            ],
            'property' => [
                1 => 'name',
                3 => 'subject',
                5 => 'content',
            ],
            'payload' => [
                2 => null,
                4 => null,
                6 => null,
                null,
            ],
            'groups' => [
                2 => [
                    'sylius',
                ],
                4 => [
                    'sylius',
                ],
                6 => [
                    'sylius',
                ],
                [
                    'sylius',
                ],
            ],
            'max' => [
                7 => 1500,
            ],
            'min' => [
                7 => 2,
            ],
        ],
    ],
    $o[0],
    []
); } },
238 => new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\MolliePlugin\\Entity\\TemplateMollieEmailTranslationInterface',
            ],
            'defaultGroup' => [
                'TemplateMollieEmailTranslationInterface',
            ],
        ],
    ],
    $o[0],
    []
); } },

]];
