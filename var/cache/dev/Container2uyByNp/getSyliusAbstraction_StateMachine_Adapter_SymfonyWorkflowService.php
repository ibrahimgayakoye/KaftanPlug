<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSyliusAbstraction_StateMachine_Adapter_SymfonyWorkflowService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'sylius_abstraction.state_machine.adapter.symfony_workflow' shared service.
     *
     * @return \Sylius\Abstraction\StateMachine\SymfonyWorkflowAdapter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Abstraction/StateMachine/src/SymfonyWorkflowAdapter.php';

        $a = ($container->privates['workflow.registry'] ?? self::getWorkflow_RegistryService($container));

        if (isset($container->services['sylius_abstraction.state_machine.adapter.symfony_workflow'])) {
            return $container->services['sylius_abstraction.state_machine.adapter.symfony_workflow'];
        }

        return $container->services['sylius_abstraction.state_machine.adapter.symfony_workflow'] = new \Sylius\Abstraction\StateMachine\SymfonyWorkflowAdapter($a);
    }
}
