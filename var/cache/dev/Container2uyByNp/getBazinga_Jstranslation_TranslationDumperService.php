<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBazinga_Jstranslation_TranslationDumperService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'bazinga.jstranslation.translation_dumper' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Dumper/TranslationDumper.php';

        $container->services['bazinga.jstranslation.translation_dumper'] = $instance = new \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper(($container->services['twig'] ?? self::getTwigService($container)), ($container->services['bazinga.jstranslation.translation_finder'] ?? $container->load('getBazinga_Jstranslation_TranslationFinderService')), ($container->privates['filesystem'] ??= new \Symfony\Component\Filesystem\Filesystem()), 'fr_FR', 'messages', [], []);

        $a = ($container->privates['translation.loader.yml'] ?? self::getTranslation_Loader_YmlService($container));
        $b = ($container->privates['translation.loader.xliff'] ?? self::getTranslation_Loader_XliffService($container));

        $instance->addLoader('php', ($container->privates['translation.loader.php'] ?? self::getTranslation_Loader_PhpService($container)));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($container->privates['translation.loader.po'] ?? self::getTranslation_Loader_PoService($container)));
        $instance->addLoader('mo', ($container->privates['translation.loader.mo'] ?? self::getTranslation_Loader_MoService($container)));
        $instance->addLoader('ts', ($container->privates['translation.loader.qt'] ?? self::getTranslation_Loader_QtService($container)));
        $instance->addLoader('csv', ($container->privates['translation.loader.csv'] ?? self::getTranslation_Loader_CsvService($container)));
        $instance->addLoader('res', ($container->privates['translation.loader.res'] ?? self::getTranslation_Loader_ResService($container)));
        $instance->addLoader('dat', ($container->privates['translation.loader.dat'] ?? self::getTranslation_Loader_DatService($container)));
        $instance->addLoader('ini', ($container->privates['translation.loader.ini'] ?? self::getTranslation_Loader_IniService($container)));
        $instance->addLoader('json', ($container->privates['translation.loader.json'] ?? self::getTranslation_Loader_JsonService($container)));

        return $instance;
    }
}
