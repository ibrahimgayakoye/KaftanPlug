<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSyliusMollie_Payum_Action_Subscription_StatusRecurringSubscriptionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'sylius_mollie.payum.action.subscription.status_recurring_subscription' shared service.
     *
     * @return \Sylius\MolliePlugin\Payum\Action\Subscription\StatusRecurringSubscriptionAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Action/ActionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/ApiAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/mollie-plugin/src/Payum/Action/BaseApiAwareAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/mollie-plugin/src/Payum/Action/Subscription/StatusRecurringSubscriptionAction.php';

        return $container->services['sylius_mollie.payum.action.subscription.status_recurring_subscription'] = new \Sylius\MolliePlugin\Payum\Action\Subscription\StatusRecurringSubscriptionAction(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->services['sylius_mollie.state_machine.applicator.subscription_and_payment_id'] ?? $container->load('getSyliusMollie_StateMachine_Applicator_SubscriptionAndPaymentIdService')), ($container->services['sylius_mollie.state_machine.applicator.subscription_and_sylius_payment'] ?? $container->load('getSyliusMollie_StateMachine_Applicator_SubscriptionAndSyliusPaymentService')), ($container->services['sylius_abstraction.state_machine'] ?? self::getSyliusAbstraction_StateMachineService($container)));
    }
}
