<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_UxIcons_TwigIconRuntimeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.ux_icons.twig_icon_runtime' shared service.
     *
     * @return \Symfony\UX\Icons\Twig\UXIconRuntime
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/RuntimeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-icons/src/Twig/UXIconRuntime.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-icons/src/IconRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-icons/src/IconRenderer.php';

        return $container->privates['.ux_icons.twig_icon_runtime'] = new \Symfony\UX\Icons\Twig\UXIconRuntime(new \Symfony\UX\Icons\IconRenderer(($container->privates['.ux_icons.cache_icon_registry'] ?? $container->load('get_UxIcons_CacheIconRegistryService')), ['class' => 'icon'], [], []), true, ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));
    }
}
