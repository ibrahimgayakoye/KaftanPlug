<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getServicesResetterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'services_resetter' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/DependencyInjection/ServicesResetterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/DependencyInjection/ServicesResetter.php';

        return $container->services['services_resetter'] = new \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter(new RewindableGenerator(function () use ($container) {
            if (isset($container->services['request_stack'])) {
                yield 'request_stack' => ($container->services['request_stack'] ?? null);
            }
            if (isset($container->privates['container.env_var_processor'])) {
                yield 'container.env_var_processor' => ($container->privates['container.env_var_processor'] ?? null);
            }
            if (isset($container->services['cache.app'])) {
                yield 'cache.app' => ($container->services['cache.app'] ?? null);
            }
            if (isset($container->services['cache.system'])) {
                yield 'cache.system' => ($container->services['cache.system'] ?? null);
            }
            if (isset($container->privates['cache.validator'])) {
                yield 'cache.validator' => ($container->privates['cache.validator'] ?? null);
            }
            if (isset($container->privates['cache.serializer'])) {
                yield 'cache.serializer' => ($container->privates['cache.serializer'] ?? null);
            }
            if (isset($container->privates['cache.property_info'])) {
                yield 'cache.property_info' => ($container->privates['cache.property_info'] ?? null);
            }
            if (isset($container->privates['cache.messenger.restart_workers_signal'])) {
                yield 'cache.messenger.restart_workers_signal' => ($container->privates['cache.messenger.restart_workers_signal'] ?? null);
            }
            if (isset($container->privates['http_client.transport'])) {
                yield 'http_client.transport' => ($container->privates['http_client.transport'] ?? null);
            }
            if (isset($container->privates['.debug.http_client'])) {
                yield 'http_client' => ($container->privates['.debug.http_client'] ?? null);
            }
            if (isset($container->privates['translation.locale_switcher'])) {
                yield 'translation.locale_switcher' => ($container->privates['translation.locale_switcher'] ?? null);
            }
            if (isset($container->services['debug.stopwatch'])) {
                yield 'debug.stopwatch' => ($container->services['debug.stopwatch'] ?? null);
            }
            if (isset($container->services['event_dispatcher'])) {
                yield 'debug.event_dispatcher' => ($container->services['event_dispatcher'] ?? null);
            }
            if (isset($container->privates['debug.log_processor'])) {
                yield 'debug.log_processor' => ($container->privates['debug.log_processor'] ?? null);
            }
            if (isset($container->privates['session_listener'])) {
                yield 'session_listener' => ($container->privates['session_listener'] ?? null);
            }
            if (isset($container->privates['form.choice_list_factory.cached'])) {
                yield 'form.choice_list_factory.cached' => ($container->privates['form.choice_list_factory.cached'] ?? null);
            }
            if (isset($container->services['cache.validator_expression_language'])) {
                yield 'cache.validator_expression_language' => ($container->services['cache.validator_expression_language'] ?? null);
            }
            if (isset($container->privates['messenger.transport.in_memory.factory'])) {
                yield 'messenger.transport.in_memory.factory' => ($container->privates['messenger.transport.in_memory.factory'] ?? null);
            }
            if (isset($container->services['.container.private.profiler'])) {
                yield 'profiler' => ($container->services['.container.private.profiler'] ?? null);
            }
            if (isset($container->services['validator'])) {
                yield 'debug.validator' => ($container->services['validator'] ?? null);
            }
            if (isset($container->privates['mailer.message_logger_listener'])) {
                yield 'mailer.message_logger_listener' => ($container->privates['mailer.message_logger_listener'] ?? null);
            }
            if (isset($container->privates['monolog.handler.main'])) {
                yield 'monolog.handler.main' => ($container->privates['monolog.handler.main'] ?? null);
            }
            if (isset($container->privates['monolog.handler.console'])) {
                yield 'monolog.handler.console' => ($container->privates['monolog.handler.console'] ?? null);
            }
            if (isset($container->privates['monolog.handler.paypal'])) {
                yield 'monolog.handler.paypal' => ($container->privates['monolog.handler.paypal'] ?? null);
            }
            if (isset($container->services['security.token_storage'])) {
                yield 'security.token_storage' => ($container->services['security.token_storage'] ?? null);
            }
            if (isset($container->privates['cache.security_expression_language'])) {
                yield 'cache.security_expression_language' => ($container->privates['cache.security_expression_language'] ?? null);
            }
            if (isset($container->services['cache.security_is_granted_attribute_expression_language'])) {
                yield 'cache.security_is_granted_attribute_expression_language' => ($container->services['cache.security_is_granted_attribute_expression_language'] ?? null);
            }
            if (isset($container->services['cache.security_is_csrf_token_valid_attribute_expression_language'])) {
                yield 'cache.security_is_csrf_token_valid_attribute_expression_language' => ($container->services['cache.security_is_csrf_token_valid_attribute_expression_language'] ?? null);
            }
            if (isset($container->privates['debug.security.access.decision_manager'])) {
                yield 'debug.security.access.decision_manager' => ($container->privates['debug.security.access.decision_manager'] ?? null);
            }
            if (isset($container->privates['debug.security.firewall'])) {
                yield 'debug.security.firewall' => ($container->privates['debug.security.firewall'] ?? null);
            }
            if (isset($container->privates['cache.security_token_verifier'])) {
                yield 'cache.security_token_verifier' => ($container->privates['cache.security_token_verifier'] ?? null);
            }
            if (isset($container->privates['debug.security.firewall.authenticator.admin'])) {
                yield 'debug.security.firewall.authenticator.admin' => ($container->privates['debug.security.firewall.authenticator.admin'] ?? null);
            }
            if (isset($container->privates['debug.security.firewall.authenticator.api_admin'])) {
                yield 'debug.security.firewall.authenticator.api_admin' => ($container->privates['debug.security.firewall.authenticator.api_admin'] ?? null);
            }
            if (isset($container->privates['debug.security.firewall.authenticator.api_shop'])) {
                yield 'debug.security.firewall.authenticator.api_shop' => ($container->privates['debug.security.firewall.authenticator.api_shop'] ?? null);
            }
            if (isset($container->privates['debug.security.firewall.authenticator.shop'])) {
                yield 'debug.security.firewall.authenticator.shop' => ($container->privates['debug.security.firewall.authenticator.shop'] ?? null);
            }
            if (isset($container->services['twig'])) {
                yield 'twig' => ($container->services['twig'] ?? null);
            }
            if (isset($container->privates['twig.form.engine'])) {
                yield 'twig.form.engine' => ($container->privates['twig.form.engine'] ?? null);
            }
            if (isset($container->services['doctrine'])) {
                yield 'doctrine' => ($container->services['doctrine'] ?? null);
            }
            if (isset($container->privates['doctrine.debug_data_holder'])) {
                yield 'doctrine.debug_data_holder' => ($container->privates['doctrine.debug_data_holder'] ?? null);
            }
            if (isset($container->privates['form.type.entity'])) {
                yield 'form.type.entity' => ($container->privates['form.type.entity'] ?? null);
            }
            if (isset($container->privates['sylius.cache.metadata.resource_collection'])) {
                yield 'sylius.cache.metadata.resource_collection' => ($container->privates['sylius.cache.metadata.resource_collection'] ?? null);
            }
            if (isset($container->services['knp_menu.matcher'])) {
                yield 'knp_menu.matcher' => ($container->services['knp_menu.matcher'] ?? null);
            }
            if (isset($container->privates['api_platform.cache.route_name_resolver'])) {
                yield 'api_platform.cache.route_name_resolver' => ($container->privates['api_platform.cache.route_name_resolver'] ?? null);
            }
            if (isset($container->privates['api_platform.cache.metadata.resource'])) {
                yield 'api_platform.cache.metadata.resource' => ($container->privates['api_platform.cache.metadata.resource'] ?? null);
            }
            if (isset($container->privates['api_platform.cache.metadata.property'])) {
                yield 'api_platform.cache.metadata.property' => ($container->privates['api_platform.cache.metadata.property'] ?? null);
            }
            if (isset($container->privates['api_platform.cache.metadata.resource_collection'])) {
                yield 'api_platform.cache.metadata.resource_collection' => ($container->privates['api_platform.cache.metadata.resource_collection'] ?? null);
            }
            if (isset($container->privates['api_platform.cache.openapi'])) {
                yield 'api_platform.cache.openapi' => ($container->privates['api_platform.cache.openapi'] ?? null);
            }
            if (isset($container->privates['webpack_encore.tag_renderer'])) {
                yield 'webpack_encore.tag_renderer' => ($container->privates['webpack_encore.tag_renderer'] ?? null);
            }
            if (isset($container->privates['cache.webpack_encore'])) {
                yield 'cache.webpack_encore' => ($container->privates['cache.webpack_encore'] ?? null);
            }
            if (isset($container->privates['webpack_encore.entrypoint_lookup[_default]'])) {
                yield 'webpack_encore.entrypoint_lookup[_default]' => ($container->privates['webpack_encore.entrypoint_lookup[_default]'] ?? null);
            }
            if (isset($container->privates['webpack_encore.entrypoint_lookup[admin]'])) {
                yield 'webpack_encore.entrypoint_lookup[admin]' => ($container->privates['webpack_encore.entrypoint_lookup[admin]'] ?? null);
            }
            if (isset($container->privates['webpack_encore.entrypoint_lookup[shop]'])) {
                yield 'webpack_encore.entrypoint_lookup[shop]' => ($container->privates['webpack_encore.entrypoint_lookup[shop]'] ?? null);
            }
            if (isset($container->privates['webpack_encore.entrypoint_lookup[app.admin]'])) {
                yield 'webpack_encore.entrypoint_lookup[app.admin]' => ($container->privates['webpack_encore.entrypoint_lookup[app.admin]'] ?? null);
            }
            if (isset($container->privates['webpack_encore.entrypoint_lookup[app.shop]'])) {
                yield 'webpack_encore.entrypoint_lookup[app.shop]' => ($container->privates['webpack_encore.entrypoint_lookup[app.shop]'] ?? null);
            }
            if (isset($container->privates['ux.twig_component.component_factory'])) {
                yield 'ux.twig_component.component_factory' => ($container->privates['ux.twig_component.component_factory'] ?? null);
            }
            if (isset($container->privates['ux.twig_component.component_renderer'])) {
                yield 'ux.twig_component.component_renderer' => ($container->privates['ux.twig_component.component_renderer'] ?? null);
            }
            if (isset($container->privates['cache.ux.twig_component'])) {
                yield 'cache.ux.twig_component' => ($container->privates['cache.ux.twig_component'] ?? null);
            }
            if (isset($container->privates['ux.live_component.metadata_factory'])) {
                yield 'ux.live_component.metadata_factory' => ($container->privates['ux.live_component.metadata_factory'] ?? null);
            }
            if (isset($container->privates['.ux_icons.cache'])) {
                yield '.ux_icons.cache' => ($container->privates['.ux_icons.cache'] ?? null);
            }
            if (isset($container->services['fos_rest.view_handler'])) {
                yield 'fos_rest.view_handler.default' => ($container->services['fos_rest.view_handler'] ?? null);
            }
            if (isset($container->privates['debug.security.event_dispatcher.admin'])) {
                yield 'debug.security.event_dispatcher.admin' => ($container->privates['debug.security.event_dispatcher.admin'] ?? null);
            }
            if (isset($container->privates['debug.security.event_dispatcher.api_admin'])) {
                yield 'debug.security.event_dispatcher.api_admin' => ($container->privates['debug.security.event_dispatcher.api_admin'] ?? null);
            }
            if (isset($container->privates['debug.security.event_dispatcher.api_shop'])) {
                yield 'debug.security.event_dispatcher.api_shop' => ($container->privates['debug.security.event_dispatcher.api_shop'] ?? null);
            }
            if (isset($container->privates['debug.security.event_dispatcher.shop'])) {
                yield 'debug.security.event_dispatcher.shop' => ($container->privates['debug.security.event_dispatcher.shop'] ?? null);
            }
            if (isset($container->privates['.debug.http_client'])) {
                yield '.debug.http_client' => ($container->privates['.debug.http_client'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_autocomplete'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_autocomplete' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_autocomplete'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_translatable_autocomplete'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_translatable_autocomplete' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_translatable_autocomplete'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_attribute'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_attribute' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_attribute'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_variant'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_variant' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_variant'] ?? null);
            }
            if (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_taxon'])) {
                yield 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_taxon' => ($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_taxon'] ?? null);
            }
        }, fn () => 0 + (int) (isset($container->services['request_stack'])) + (int) (isset($container->privates['container.env_var_processor'])) + (int) (isset($container->services['cache.app'])) + (int) (isset($container->services['cache.system'])) + (int) (isset($container->privates['cache.validator'])) + (int) (isset($container->privates['cache.serializer'])) + (int) (isset($container->privates['cache.property_info'])) + (int) (isset($container->privates['cache.messenger.restart_workers_signal'])) + (int) (isset($container->privates['http_client.transport'])) + (int) (isset($container->privates['.debug.http_client'])) + (int) (isset($container->privates['translation.locale_switcher'])) + (int) (isset($container->services['debug.stopwatch'])) + (int) (isset($container->services['event_dispatcher'])) + (int) (isset($container->privates['debug.log_processor'])) + (int) (isset($container->privates['session_listener'])) + (int) (isset($container->privates['form.choice_list_factory.cached'])) + (int) (isset($container->services['cache.validator_expression_language'])) + (int) (isset($container->privates['messenger.transport.in_memory.factory'])) + (int) (isset($container->services['.container.private.profiler'])) + (int) (isset($container->services['validator'])) + (int) (isset($container->privates['mailer.message_logger_listener'])) + (int) (isset($container->privates['monolog.handler.main'])) + (int) (isset($container->privates['monolog.handler.console'])) + (int) (isset($container->privates['monolog.handler.paypal'])) + (int) (isset($container->services['security.token_storage'])) + (int) (isset($container->privates['cache.security_expression_language'])) + (int) (isset($container->services['cache.security_is_granted_attribute_expression_language'])) + (int) (isset($container->services['cache.security_is_csrf_token_valid_attribute_expression_language'])) + (int) (isset($container->privates['debug.security.access.decision_manager'])) + (int) (isset($container->privates['debug.security.firewall'])) + (int) (isset($container->privates['cache.security_token_verifier'])) + (int) (isset($container->privates['debug.security.firewall.authenticator.admin'])) + (int) (isset($container->privates['debug.security.firewall.authenticator.api_admin'])) + (int) (isset($container->privates['debug.security.firewall.authenticator.api_shop'])) + (int) (isset($container->privates['debug.security.firewall.authenticator.shop'])) + (int) (isset($container->services['twig'])) + (int) (isset($container->privates['twig.form.engine'])) + (int) (isset($container->services['doctrine'])) + (int) (isset($container->privates['doctrine.debug_data_holder'])) + (int) (isset($container->privates['form.type.entity'])) + (int) (isset($container->privates['sylius.cache.metadata.resource_collection'])) + (int) (isset($container->services['knp_menu.matcher'])) + (int) (isset($container->privates['api_platform.cache.route_name_resolver'])) + (int) (isset($container->privates['api_platform.cache.metadata.resource'])) + (int) (isset($container->privates['api_platform.cache.metadata.property'])) + (int) (isset($container->privates['api_platform.cache.metadata.resource_collection'])) + (int) (isset($container->privates['api_platform.cache.openapi'])) + (int) (isset($container->privates['webpack_encore.tag_renderer'])) + (int) (isset($container->privates['cache.webpack_encore'])) + (int) (isset($container->privates['webpack_encore.entrypoint_lookup[_default]'])) + (int) (isset($container->privates['webpack_encore.entrypoint_lookup[admin]'])) + (int) (isset($container->privates['webpack_encore.entrypoint_lookup[shop]'])) + (int) (isset($container->privates['webpack_encore.entrypoint_lookup[app.admin]'])) + (int) (isset($container->privates['webpack_encore.entrypoint_lookup[app.shop]'])) + (int) (isset($container->privates['ux.twig_component.component_factory'])) + (int) (isset($container->privates['ux.twig_component.component_renderer'])) + (int) (isset($container->privates['cache.ux.twig_component'])) + (int) (isset($container->privates['ux.live_component.metadata_factory'])) + (int) (isset($container->privates['.ux_icons.cache'])) + (int) (isset($container->services['fos_rest.view_handler'])) + (int) (isset($container->privates['debug.security.event_dispatcher.admin'])) + (int) (isset($container->privates['debug.security.event_dispatcher.api_admin'])) + (int) (isset($container->privates['debug.security.event_dispatcher.api_shop'])) + (int) (isset($container->privates['debug.security.event_dispatcher.shop'])) + (int) (isset($container->privates['.debug.http_client'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_autocomplete'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_translatable_autocomplete'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_attribute'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_variant'])) + (int) (isset($container->privates['ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_taxon']))), ['request_stack' => ['?resetRequestFormats'], 'container.env_var_processor' => ['reset'], 'cache.app' => ['reset'], 'cache.system' => ['reset'], 'cache.validator' => ['reset'], 'cache.serializer' => ['reset'], 'cache.property_info' => ['reset'], 'cache.messenger.restart_workers_signal' => ['reset'], 'http_client.transport' => ['?reset'], 'http_client' => ['?reset'], 'translation.locale_switcher' => ['reset'], 'debug.stopwatch' => ['reset'], 'debug.event_dispatcher' => ['reset'], 'debug.log_processor' => ['reset'], 'session_listener' => ['reset'], 'form.choice_list_factory.cached' => ['reset'], 'cache.validator_expression_language' => ['reset'], 'messenger.transport.in_memory.factory' => ['reset'], 'profiler' => ['reset'], 'debug.validator' => ['reset'], 'mailer.message_logger_listener' => ['reset'], 'monolog.handler.main' => ['reset'], 'monolog.handler.console' => ['reset'], 'monolog.handler.paypal' => ['reset'], 'security.token_storage' => ['disableUsageTracking', 'setToken'], 'cache.security_expression_language' => ['reset'], 'cache.security_is_granted_attribute_expression_language' => ['reset'], 'cache.security_is_csrf_token_valid_attribute_expression_language' => ['reset'], 'debug.security.access.decision_manager' => ['?reset'], 'debug.security.firewall' => ['reset'], 'cache.security_token_verifier' => ['reset'], 'debug.security.firewall.authenticator.admin' => ['reset'], 'debug.security.firewall.authenticator.api_admin' => ['reset'], 'debug.security.firewall.authenticator.api_shop' => ['reset'], 'debug.security.firewall.authenticator.shop' => ['reset'], 'twig' => ['resetGlobals'], 'twig.form.engine' => ['reset'], 'doctrine' => ['reset'], 'doctrine.debug_data_holder' => ['reset'], 'form.type.entity' => ['reset'], 'sylius.cache.metadata.resource_collection' => ['reset'], 'knp_menu.matcher' => ['clear'], 'api_platform.cache.route_name_resolver' => ['reset'], 'api_platform.cache.metadata.resource' => ['reset'], 'api_platform.cache.metadata.property' => ['reset'], 'api_platform.cache.metadata.resource_collection' => ['reset'], 'api_platform.cache.openapi' => ['reset'], 'webpack_encore.tag_renderer' => ['reset'], 'cache.webpack_encore' => ['reset'], 'webpack_encore.entrypoint_lookup[_default]' => ['reset'], 'webpack_encore.entrypoint_lookup[admin]' => ['reset'], 'webpack_encore.entrypoint_lookup[shop]' => ['reset'], 'webpack_encore.entrypoint_lookup[app.admin]' => ['reset'], 'webpack_encore.entrypoint_lookup[app.shop]' => ['reset'], 'ux.twig_component.component_factory' => ['reset'], 'ux.twig_component.component_renderer' => ['reset'], 'cache.ux.twig_component' => ['reset'], 'ux.live_component.metadata_factory' => ['reset'], '.ux_icons.cache' => ['reset'], 'fos_rest.view_handler.default' => ['reset'], 'debug.security.event_dispatcher.admin' => ['reset'], 'debug.security.event_dispatcher.api_admin' => ['reset'], 'debug.security.event_dispatcher.api_shop' => ['reset'], 'debug.security.event_dispatcher.shop' => ['reset'], '.debug.http_client' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_autocomplete' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_grid_filter_translatable_autocomplete' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_attribute' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_product_variant' => ['reset'], 'ux.autocomplete.wrapped_entity_type_autocompleter.sylius_admin_taxon' => ['reset']]);
    }
}
