<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConsole_Command_WorkflowDumpService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'console.command.workflow_dump' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/SignalableCommandInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/WorkflowDumpCommand.php';

        $container->privates['console.command.workflow_dump'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'sylius_catalog_promotion' => ['privates', 'debug.state_machine.sylius_catalog_promotion', 'getDebug_StateMachine_SyliusCatalogPromotionService', false],
            'sylius_order' => ['privates', 'debug.state_machine.sylius_order', 'getDebug_StateMachine_SyliusOrderService', false],
            'sylius_order_checkout' => ['privates', 'debug.state_machine.sylius_order_checkout', 'getDebug_StateMachine_SyliusOrderCheckoutService', false],
            'sylius_order_payment' => ['privates', 'debug.state_machine.sylius_order_payment', 'getDebug_StateMachine_SyliusOrderPaymentService', false],
            'sylius_order_shipping' => ['privates', 'debug.state_machine.sylius_order_shipping', 'getDebug_StateMachine_SyliusOrderShippingService', false],
            'sylius_payment' => ['privates', 'debug.state_machine.sylius_payment', 'getDebug_StateMachine_SyliusPaymentService', false],
            'sylius_payment_request' => ['privates', 'debug.state_machine.sylius_payment_request', 'getDebug_StateMachine_SyliusPaymentRequestService', false],
            'sylius_product_review' => ['privates', 'debug.state_machine.sylius_product_review', 'getDebug_StateMachine_SyliusProductReviewService', false],
            'sylius_shipment' => ['privates', 'debug.state_machine.sylius_shipment', 'getDebug_StateMachine_SyliusShipmentService', false],
            'mollie_subscription_graph' => ['privates', 'debug.state_machine.mollie_subscription_graph', 'getDebug_StateMachine_MollieSubscriptionGraphService', false],
            'mollie_subscription_payment_graph_manual' => ['privates', 'debug.state_machine.mollie_subscription_payment_graph_manual', 'getDebug_StateMachine_MollieSubscriptionPaymentGraphManualService', false],
            'mollie_subscription_payment_state_graph' => ['privates', 'debug.state_machine.mollie_subscription_payment_state_graph', 'getDebug_StateMachine_MollieSubscriptionPaymentStateGraphService', false],
            'mollie_subscription_processing_graph' => ['privates', 'debug.state_machine.mollie_subscription_processing_graph', 'getDebug_StateMachine_MollieSubscriptionProcessingGraphService', false],
        ], [
            'sylius_catalog_promotion' => '?',
            'sylius_order' => '?',
            'sylius_order_checkout' => '?',
            'sylius_order_payment' => '?',
            'sylius_order_shipping' => '?',
            'sylius_payment' => '?',
            'sylius_payment_request' => '?',
            'sylius_product_review' => '?',
            'sylius_shipment' => '?',
            'mollie_subscription_graph' => '?',
            'mollie_subscription_payment_graph_manual' => '?',
            'mollie_subscription_payment_state_graph' => '?',
            'mollie_subscription_processing_graph' => '?',
        ]));

        $instance->setName('workflow:dump');
        $instance->setDescription('Dump a workflow');

        return $instance;
    }
}
