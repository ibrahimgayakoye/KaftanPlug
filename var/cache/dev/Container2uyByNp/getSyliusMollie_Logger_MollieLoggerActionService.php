<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSyliusMollie_Logger_MollieLoggerActionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'sylius_mollie.logger.mollie_logger_action' shared service.
     *
     * @return \Sylius\MolliePlugin\Logger\MollieLoggerAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/mollie-plugin/src/Logger/MollieLoggerActionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/mollie-plugin/src/Logger/MollieLoggerAction.php';

        $a = ($container->services['sylius_mollie.resolver.mollie_factory_name'] ?? self::getSyliusMollie_Resolver_MollieFactoryNameService($container));

        if (isset($container->services['sylius_mollie.logger.mollie_logger_action'])) {
            return $container->services['sylius_mollie.logger.mollie_logger_action'];
        }

        return $container->services['sylius_mollie.logger.mollie_logger_action'] = new \Sylius\MolliePlugin\Logger\MollieLoggerAction(($container->services['sylius_mollie.custom_factory.mollie_logger'] ?? $container->load('getSyliusMollie_CustomFactory_MollieLoggerService')), ($container->services['sylius_mollie.repository.mollie_logger'] ?? $container->load('getSyliusMollie_Repository_MollieLoggerService')), ($container->services['sylius.repository.gateway_config'] ?? $container->load('getSylius_Repository_GatewayConfigService')), $a);
    }
}
