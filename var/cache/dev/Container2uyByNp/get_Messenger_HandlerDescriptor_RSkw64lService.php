<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Messenger_HandlerDescriptor_RSkw64lService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.messenger.handler_descriptor.rSkw64l' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/CommandHandler/Checkout/CompleteOrderHandler.php';

        $a = ($container->services['sylius_abstraction.state_machine'] ?? self::getSyliusAbstraction_StateMachineService($container));

        if (isset($container->privates['.messenger.handler_descriptor.rSkw64l'])) {
            return $container->privates['.messenger.handler_descriptor.rSkw64l'];
        }
        $b = ($container->services['messenger.default_bus'] ?? self::getMessenger_DefaultBusService($container));

        if (isset($container->privates['.messenger.handler_descriptor.rSkw64l'])) {
            return $container->privates['.messenger.handler_descriptor.rSkw64l'];
        }
        $c = ($container->privates['debug.traced.sylius.event_bus'] ?? self::getDebug_Traced_Sylius_EventBusService($container));

        if (isset($container->privates['.messenger.handler_descriptor.rSkw64l'])) {
            return $container->privates['.messenger.handler_descriptor.rSkw64l'];
        }

        return $container->privates['.messenger.handler_descriptor.rSkw64l'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Sylius\Bundle\ApiBundle\CommandHandler\Checkout\CompleteOrderHandler(($container->services['sylius.repository.order'] ?? self::getSylius_Repository_OrderService($container)), $a, $b, $c, ($container->privates['sylius.checker.order.promotions_integrity'] ?? $container->load('getSylius_Checker_Order_PromotionsIntegrityService'))), ['bus' => 'sylius.command_bus']);
    }
}
