<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPayumService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'payum' shared service.
     *
     * @return \Payum\Core\Payum
     */
    public static function do($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['payum'] = $container->createProxy('PayumProxy36840ef', static fn () => \PayumProxy36840ef::createLazyProxy(static fn () => self::do($container, false)));
        }

        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Registry/GatewayRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Registry/GatewayFactoryRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Registry/StorageRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Registry/RegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Payum.php';

        return ($container->privates['payum.builder'] ?? $container->load('getPayum_BuilderService'))->getPayum();
    }
}
