<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_StateProvider_Parameter_IriConverterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'api_platform.state_provider.parameter.iri_converter' shared service.
     *
     * @return \ApiPlatform\State\ParameterProvider\IriConverterParameterProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/state/ParameterProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/state/ParameterProvider/IriConverterParameterProvider.php';

        $a = ($container->privates['sylius_api.api_platform.routing.iri_converter'] ?? self::getSyliusApi_ApiPlatform_Routing_IriConverterService($container));

        if (isset($container->privates['api_platform.state_provider.parameter.iri_converter'])) {
            return $container->privates['api_platform.state_provider.parameter.iri_converter'];
        }

        return $container->privates['api_platform.state_provider.parameter.iri_converter'] = new \ApiPlatform\State\ParameterProvider\IriConverterParameterProvider($a, ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));
    }
}
