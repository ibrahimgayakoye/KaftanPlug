<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_JsonLogin_ShopService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authenticator.json_login.shop' shared service.
     *
     * @return \Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/AuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/InteractiveAuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticationSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/CustomAuthenticationSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Util/TargetPathTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/DefaultAuthenticationSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Authentication/AuthenticationSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticationFailureHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/CustomAuthenticationFailureHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/DefaultAuthenticationFailureHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Authentication/AuthenticationFailureHandler.php';

        $a = ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService'));

        if (isset($container->privates['security.authenticator.json_login.shop'])) {
            return $container->privates['security.authenticator.json_login.shop'];
        }
        $b = ($container->services['http_kernel'] ?? self::getHttpKernelService($container));

        if (isset($container->privates['security.authenticator.json_login.shop'])) {
            return $container->privates['security.authenticator.json_login.shop'];
        }

        $container->privates['security.authenticator.json_login.shop'] = $instance = new \Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator($a, ($container->privates['sylius.shop_user_provider.email_or_name_based'] ?? $container->load('getSylius_ShopUserProvider_EmailOrNameBasedService')), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler(new \Sylius\Bundle\UserBundle\Authentication\AuthenticationSuccessHandler($a, [], ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container))), [], 'shop'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler(new \Sylius\Bundle\UserBundle\Authentication\AuthenticationFailureHandler($b, $a, [], ($container->privates['monolog.logger.security'] ?? self::getMonolog_Logger_SecurityService($container))), []), ['check_path' => 'sylius_shop_json_login_check', 'username_path' => '_username', 'password_path' => '_password', 'use_forward' => false, 'login_path' => '/login'], ($container->privates['property_accessor'] ?? self::getPropertyAccessorService($container)));

        if ($container->has('translator')) {
            $instance->setTranslator(($container->services['translator'] ?? self::getTranslatorService($container)));
        }

        return $instance;
    }
}
