<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSyliusPaypal_Manager_PaymentStateService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'sylius_paypal.manager.payment_state' shared service.
     *
     * @return \Sylius\PayPalPlugin\Manager\PaymentStateManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Manager/PaymentStateManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Manager/PaymentStateManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Processor/PaymentCompleteProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Processor/PayPalPaymentCompleteProcessor.php';

        $a = ($container->services['sylius_abstraction.state_machine'] ?? self::getSyliusAbstraction_StateMachineService($container));

        if (isset($container->privates['sylius_paypal.manager.payment_state'])) {
            return $container->privates['sylius_paypal.manager.payment_state'];
        }
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->privates['sylius_paypal.manager.payment_state'])) {
            return $container->privates['sylius_paypal.manager.payment_state'];
        }

        return $container->privates['sylius_paypal.manager.payment_state'] = new \Sylius\PayPalPlugin\Manager\PaymentStateManager($a, $b, new \Sylius\PayPalPlugin\Processor\PayPalPaymentCompleteProcessor(($container->services['payum'] ?? $container->load('getPayumService'))));
    }
}
