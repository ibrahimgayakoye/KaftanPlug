<?php

namespace Container2uyByNp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSyliusAdmin_Twig_Component_Taxon_TreeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'sylius_admin.twig.component.taxon.tree' service.
     *
     * @return \Sylius\Bundle\AdminBundle\Twig\Component\Taxon\TreeComponent
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-live-component/src/DefaultActionTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/twig-hooks/src/LiveComponent/HookableLiveComponentTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Twig/Component/TemplatePropTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Twig/Component/Taxon/TreeComponent.php';

        $container->factories['sylius_admin.twig.component.taxon.tree'] = function ($container) {
            $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

            if (isset($container->services['sylius_admin.twig.component.taxon.tree'])) {
                return $container->services['sylius_admin.twig.component.taxon.tree'];
            }

            return new \Sylius\Bundle\AdminBundle\Twig\Component\Taxon\TreeComponent(($container->privates['sylius_admin.doctrine.query.taxon.all_taxons'] ?? $container->load('getSyliusAdmin_Doctrine_Query_Taxon_AllTaxonsService')), ($container->services['sylius.repository.taxon'] ?? $container->load('getSylius_Repository_TaxonService')), $a);
        };

        return $container->factories['sylius_admin.twig.component.taxon.tree']($container);
    }
}
