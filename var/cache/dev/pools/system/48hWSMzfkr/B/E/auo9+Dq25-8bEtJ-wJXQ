<?php //property_name_collection_1384dafe7f81f77f

return [PHP_INT_MAX, new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['ApiPlatform\\Metadata\\Property\\PropertyNameCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Metadata\\Property\\PropertyNameCollection')),
    ],
    null,
    [
        'ApiPlatform\\Metadata\\Property\\PropertyNameCollection' => [
            'properties' => [
                [
                    'weight',
                    'width',
                    'height',
                    'depth',
                    'taxCategory',
                    'shippingCategory',
                    'channelPricings',
                    'channelPricingForChannel',
                    'channelPricing',
                    'shippingRequired',
                    'name',
                    'descriptor',
                    'optionValues',
                    'optionValue',
                    'product',
                    'position',
                    'translation',
                    'createdAt',
                    'updatedAt',
                    'id',
                    'code',
                    'enabled',
                    'translations',
                    'currentLocale',
                    'fallbackLocale',
                    'shippingWeight',
                    'shippingVolume',
                    'shippingWidth',
                    'shippingHeight',
                    'shippingDepth',
                    'inventoryName',
                    'inStock',
                    'onHold',
                    'onHand',
                    'tracked',
                    'version',
                    'images',
                    'image',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } }];
