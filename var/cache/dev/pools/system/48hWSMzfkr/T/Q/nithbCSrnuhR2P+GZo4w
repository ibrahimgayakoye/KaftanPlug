<?php //property_name_collection_725eafcf05711fed

return [PHP_INT_MAX, new class() implements \Symfony\Component\Cache\Traits\CachedValueInterface { public function getValue(): mixed { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['ApiPlatform\\Metadata\\Property\\PropertyNameCollection'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Metadata\\Property\\PropertyNameCollection')),
    ],
    null,
    [
        'ApiPlatform\\Metadata\\Property\\PropertyNameCollection' => [
            'properties' => [
                [
                    'baseCurrency',
                    'defaultLocale',
                    'defaultTaxZone',
                    'taxCalculationStrategy',
                    'themeName',
                    'contactEmail',
                    'contactPhoneNumber',
                    'skippingShippingStepAllowed',
                    'skippingPaymentStepAllowed',
                    'accountVerificationRequired',
                    'shippingAddressInCheckoutRequired',
                    'shopBillingData',
                    'menuTaxon',
                    'countries',
                    'country',
                    'channelPriceHistoryConfig',
                    'enabledCountries',
                    'name',
                    'description',
                    'hostname',
                    'color',
                    'code',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'id',
                    'currencies',
                    'currency',
                    'locales',
                    'locale',
                ],
            ],
        ],
    ],
    $o[0],
    []
); } }];
